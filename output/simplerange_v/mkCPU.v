//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Wed Apr 24 21:20:42 BST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_hart0_server_reset_request_put  O     1 reg
// RDY_hart0_server_reset_response_get  O     1 reg
// imem_master_awvalid            O     1
// imem_master_awaddr             O    64 reg
// imem_master_awprot             O     3 reg
// imem_master_wvalid             O     1
// imem_master_wdata              O    64 reg
// imem_master_wstrb              O     8 reg
// imem_master_bready             O     1
// imem_master_arvalid            O     1
// imem_master_araddr             O    64 reg
// imem_master_arprot             O     3 reg
// imem_master_rready             O     1
// dmem_master_awvalid            O     1
// dmem_master_awaddr             O    64 reg
// dmem_master_awprot             O     3 reg
// dmem_master_wvalid             O     1
// dmem_master_wdata              O    64 reg
// dmem_master_wstrb              O     8 reg
// dmem_master_bready             O     1
// dmem_master_arvalid            O     1
// dmem_master_araddr             O    64 reg
// dmem_master_arprot             O     3 reg
// dmem_master_rready             O     1
// near_mem_slave_awready         O     1 const
// near_mem_slave_wready          O     1 const
// near_mem_slave_bvalid          O     1 const
// near_mem_slave_bresp           O     2 const
// near_mem_slave_arready         O     1 const
// near_mem_slave_rvalid          O     1 const
// near_mem_slave_rresp           O     2 const
// near_mem_slave_rdata           O    64 const
// RDY_external_interrupt_req     O     1 reg
// RDY_timer_interrupt_req        O     1 reg
// RDY_software_interrupt_req     O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// imem_master_awready            I     1
// imem_master_wready             I     1
// imem_master_bvalid             I     1
// imem_master_bresp              I     2 reg
// imem_master_arready            I     1
// imem_master_rvalid             I     1
// imem_master_rresp              I     2 reg
// imem_master_rdata              I    64 reg
// dmem_master_awready            I     1
// dmem_master_wready             I     1
// dmem_master_bvalid             I     1
// dmem_master_bresp              I     2 reg
// dmem_master_arready            I     1
// dmem_master_rvalid             I     1
// dmem_master_rresp              I     2 reg
// dmem_master_rdata              I    64 reg
// near_mem_slave_awvalid         I     1 unused
// near_mem_slave_awaddr          I    64 unused
// near_mem_slave_awprot          I     3 unused
// near_mem_slave_wvalid          I     1 unused
// near_mem_slave_wdata           I    64 unused
// near_mem_slave_wstrb           I     8 unused
// near_mem_slave_bready          I     1 unused
// near_mem_slave_arvalid         I     1 unused
// near_mem_slave_araddr          I    64 unused
// near_mem_slave_arprot          I     3 unused
// near_mem_slave_rready          I     1 unused
// external_interrupt_req_set_not_clear  I     1 reg
// timer_interrupt_req_set_not_clear  I     1 reg
// software_interrupt_req_set_not_clear  I     1 reg
// EN_hart0_server_reset_request_put  I     1
// EN_hart0_server_reset_response_get  I     1
// EN_external_interrupt_req      I     1
// EN_timer_interrupt_req         I     1
// EN_software_interrupt_req      I     1
//
// Combinational paths from inputs to outputs:
//   (imem_master_awready, imem_master_wready) -> imem_master_bready
//   (imem_master_awready,
//    imem_master_wready,
//    imem_master_arready,
//    dmem_master_awready,
//    dmem_master_wready) -> imem_master_rready
//   (imem_master_awready,
//    imem_master_wready,
//    dmem_master_awready,
//    dmem_master_wready,
//    dmem_master_arready) -> dmem_master_rready
//   (dmem_master_awready, dmem_master_wready) -> dmem_master_bready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCPU(CLK,
	     RST_N,

	     EN_hart0_server_reset_request_put,
	     RDY_hart0_server_reset_request_put,

	     EN_hart0_server_reset_response_get,
	     RDY_hart0_server_reset_response_get,

	     imem_master_awvalid,

	     imem_master_awaddr,

	     imem_master_awprot,

	     imem_master_awready,

	     imem_master_wvalid,

	     imem_master_wdata,

	     imem_master_wstrb,

	     imem_master_wready,

	     imem_master_bvalid,
	     imem_master_bresp,

	     imem_master_bready,

	     imem_master_arvalid,

	     imem_master_araddr,

	     imem_master_arprot,

	     imem_master_arready,

	     imem_master_rvalid,
	     imem_master_rresp,
	     imem_master_rdata,

	     imem_master_rready,

	     dmem_master_awvalid,

	     dmem_master_awaddr,

	     dmem_master_awprot,

	     dmem_master_awready,

	     dmem_master_wvalid,

	     dmem_master_wdata,

	     dmem_master_wstrb,

	     dmem_master_wready,

	     dmem_master_bvalid,
	     dmem_master_bresp,

	     dmem_master_bready,

	     dmem_master_arvalid,

	     dmem_master_araddr,

	     dmem_master_arprot,

	     dmem_master_arready,

	     dmem_master_rvalid,
	     dmem_master_rresp,
	     dmem_master_rdata,

	     dmem_master_rready,

	     near_mem_slave_awvalid,
	     near_mem_slave_awaddr,
	     near_mem_slave_awprot,

	     near_mem_slave_awready,

	     near_mem_slave_wvalid,
	     near_mem_slave_wdata,
	     near_mem_slave_wstrb,

	     near_mem_slave_wready,

	     near_mem_slave_bvalid,

	     near_mem_slave_bresp,

	     near_mem_slave_bready,

	     near_mem_slave_arvalid,
	     near_mem_slave_araddr,
	     near_mem_slave_arprot,

	     near_mem_slave_arready,

	     near_mem_slave_rvalid,

	     near_mem_slave_rresp,

	     near_mem_slave_rdata,

	     near_mem_slave_rready,

	     external_interrupt_req_set_not_clear,
	     EN_external_interrupt_req,
	     RDY_external_interrupt_req,

	     timer_interrupt_req_set_not_clear,
	     EN_timer_interrupt_req,
	     RDY_timer_interrupt_req,

	     software_interrupt_req_set_not_clear,
	     EN_software_interrupt_req,
	     RDY_software_interrupt_req);
  parameter [63 : 0] pc_reset_value = 64'b0;
  input  CLK;
  input  RST_N;

  // action method hart0_server_reset_request_put
  input  EN_hart0_server_reset_request_put;
  output RDY_hart0_server_reset_request_put;

  // action method hart0_server_reset_response_get
  input  EN_hart0_server_reset_response_get;
  output RDY_hart0_server_reset_response_get;

  // value method imem_master_m_awvalid
  output imem_master_awvalid;

  // value method imem_master_m_awaddr
  output [63 : 0] imem_master_awaddr;

  // value method imem_master_m_awprot
  output [2 : 0] imem_master_awprot;

  // value method imem_master_m_awuser

  // action method imem_master_m_awready
  input  imem_master_awready;

  // value method imem_master_m_wvalid
  output imem_master_wvalid;

  // value method imem_master_m_wdata
  output [63 : 0] imem_master_wdata;

  // value method imem_master_m_wstrb
  output [7 : 0] imem_master_wstrb;

  // action method imem_master_m_wready
  input  imem_master_wready;

  // action method imem_master_m_bvalid
  input  imem_master_bvalid;
  input  [1 : 0] imem_master_bresp;

  // value method imem_master_m_bready
  output imem_master_bready;

  // value method imem_master_m_arvalid
  output imem_master_arvalid;

  // value method imem_master_m_araddr
  output [63 : 0] imem_master_araddr;

  // value method imem_master_m_arprot
  output [2 : 0] imem_master_arprot;

  // value method imem_master_m_aruser

  // action method imem_master_m_arready
  input  imem_master_arready;

  // action method imem_master_m_rvalid
  input  imem_master_rvalid;
  input  [1 : 0] imem_master_rresp;
  input  [63 : 0] imem_master_rdata;

  // value method imem_master_m_rready
  output imem_master_rready;

  // value method dmem_master_m_awvalid
  output dmem_master_awvalid;

  // value method dmem_master_m_awaddr
  output [63 : 0] dmem_master_awaddr;

  // value method dmem_master_m_awprot
  output [2 : 0] dmem_master_awprot;

  // value method dmem_master_m_awuser

  // action method dmem_master_m_awready
  input  dmem_master_awready;

  // value method dmem_master_m_wvalid
  output dmem_master_wvalid;

  // value method dmem_master_m_wdata
  output [63 : 0] dmem_master_wdata;

  // value method dmem_master_m_wstrb
  output [7 : 0] dmem_master_wstrb;

  // action method dmem_master_m_wready
  input  dmem_master_wready;

  // action method dmem_master_m_bvalid
  input  dmem_master_bvalid;
  input  [1 : 0] dmem_master_bresp;

  // value method dmem_master_m_bready
  output dmem_master_bready;

  // value method dmem_master_m_arvalid
  output dmem_master_arvalid;

  // value method dmem_master_m_araddr
  output [63 : 0] dmem_master_araddr;

  // value method dmem_master_m_arprot
  output [2 : 0] dmem_master_arprot;

  // value method dmem_master_m_aruser

  // action method dmem_master_m_arready
  input  dmem_master_arready;

  // action method dmem_master_m_rvalid
  input  dmem_master_rvalid;
  input  [1 : 0] dmem_master_rresp;
  input  [63 : 0] dmem_master_rdata;

  // value method dmem_master_m_rready
  output dmem_master_rready;

  // action method near_mem_slave_m_awvalid
  input  near_mem_slave_awvalid;
  input  [63 : 0] near_mem_slave_awaddr;
  input  [2 : 0] near_mem_slave_awprot;

  // value method near_mem_slave_m_awready
  output near_mem_slave_awready;

  // action method near_mem_slave_m_wvalid
  input  near_mem_slave_wvalid;
  input  [63 : 0] near_mem_slave_wdata;
  input  [7 : 0] near_mem_slave_wstrb;

  // value method near_mem_slave_m_wready
  output near_mem_slave_wready;

  // value method near_mem_slave_m_bvalid
  output near_mem_slave_bvalid;

  // value method near_mem_slave_m_bresp
  output [1 : 0] near_mem_slave_bresp;

  // value method near_mem_slave_m_buser

  // action method near_mem_slave_m_bready
  input  near_mem_slave_bready;

  // action method near_mem_slave_m_arvalid
  input  near_mem_slave_arvalid;
  input  [63 : 0] near_mem_slave_araddr;
  input  [2 : 0] near_mem_slave_arprot;

  // value method near_mem_slave_m_arready
  output near_mem_slave_arready;

  // value method near_mem_slave_m_rvalid
  output near_mem_slave_rvalid;

  // value method near_mem_slave_m_rresp
  output [1 : 0] near_mem_slave_rresp;

  // value method near_mem_slave_m_rdata
  output [63 : 0] near_mem_slave_rdata;

  // value method near_mem_slave_m_ruser

  // action method near_mem_slave_m_rready
  input  near_mem_slave_rready;

  // action method external_interrupt_req
  input  external_interrupt_req_set_not_clear;
  input  EN_external_interrupt_req;
  output RDY_external_interrupt_req;

  // action method timer_interrupt_req
  input  timer_interrupt_req_set_not_clear;
  input  EN_timer_interrupt_req;
  output RDY_timer_interrupt_req;

  // action method software_interrupt_req
  input  software_interrupt_req_set_not_clear;
  input  EN_software_interrupt_req;
  output RDY_software_interrupt_req;

  // signals for module outputs
  wire [63 : 0] dmem_master_araddr,
		dmem_master_awaddr,
		dmem_master_wdata,
		imem_master_araddr,
		imem_master_awaddr,
		imem_master_wdata,
		near_mem_slave_rdata;
  wire [7 : 0] dmem_master_wstrb, imem_master_wstrb;
  wire [2 : 0] dmem_master_arprot,
	       dmem_master_awprot,
	       imem_master_arprot,
	       imem_master_awprot;
  wire [1 : 0] near_mem_slave_bresp, near_mem_slave_rresp;
  wire RDY_external_interrupt_req,
       RDY_hart0_server_reset_request_put,
       RDY_hart0_server_reset_response_get,
       RDY_software_interrupt_req,
       RDY_timer_interrupt_req,
       dmem_master_arvalid,
       dmem_master_awvalid,
       dmem_master_bready,
       dmem_master_rready,
       dmem_master_wvalid,
       imem_master_arvalid,
       imem_master_awvalid,
       imem_master_bready,
       imem_master_rready,
       imem_master_wvalid,
       near_mem_slave_arready,
       near_mem_slave_awready,
       near_mem_slave_bvalid,
       near_mem_slave_rvalid,
       near_mem_slave_wready;

  // register cfg_logdelay
  reg [63 : 0] cfg_logdelay;
  wire [63 : 0] cfg_logdelay$D_IN;
  wire cfg_logdelay$EN;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register rg_cur_priv
  reg [1 : 0] rg_cur_priv;
  reg [1 : 0] rg_cur_priv$D_IN;
  wire rg_cur_priv$EN;

  // register rg_halt
  reg rg_halt;
  wire rg_halt$D_IN, rg_halt$EN;

  // register rg_inum
  reg [63 : 0] rg_inum;
  reg [63 : 0] rg_inum$D_IN;
  wire rg_inum$EN;

  // register rg_start_CPI_cycles
  reg [63 : 0] rg_start_CPI_cycles;
  wire [63 : 0] rg_start_CPI_cycles$D_IN;
  wire rg_start_CPI_cycles$EN;

  // register rg_start_CPI_instrs
  reg [63 : 0] rg_start_CPI_instrs;
  wire [63 : 0] rg_start_CPI_instrs$D_IN;
  wire rg_start_CPI_instrs$EN;

  // register rg_state
  reg [2 : 0] rg_state;
  reg [2 : 0] rg_state$D_IN;
  wire rg_state$EN;

  // register stage1_rg_ddc
  reg [128 : 0] stage1_rg_ddc;
  wire [128 : 0] stage1_rg_ddc$D_IN;
  wire stage1_rg_ddc$EN;

  // register stage1_rg_full
  reg stage1_rg_full;
  reg stage1_rg_full$D_IN;
  wire stage1_rg_full$EN;

  // register stage1_rg_run_state
  reg stage1_rg_run_state;
  wire stage1_rg_run_state$D_IN, stage1_rg_run_state$EN;

  // register stage2_rg_f5
  reg [4 : 0] stage2_rg_f5;
  wire [4 : 0] stage2_rg_f5$D_IN;
  wire stage2_rg_f5$EN;

  // register stage2_rg_full
  reg stage2_rg_full;
  wire stage2_rg_full$D_IN, stage2_rg_full$EN;

  // register stage2_rg_run_state
  reg stage2_rg_run_state;
  wire stage2_rg_run_state$D_IN, stage2_rg_run_state$EN;

  // register stage2_rg_stage2
  reg [646 : 0] stage2_rg_stage2;
  wire [646 : 0] stage2_rg_stage2$D_IN;
  wire stage2_rg_stage2$EN;

  // register stage3_rg_full
  reg stage3_rg_full;
  wire stage3_rg_full$D_IN, stage3_rg_full$EN;

  // register stage3_rg_run_state
  reg stage3_rg_run_state;
  wire stage3_rg_run_state$D_IN, stage3_rg_run_state$EN;

  // register stage3_rg_stage3
  reg [374 : 0] stage3_rg_stage3;
  wire [374 : 0] stage3_rg_stage3$D_IN;
  wire stage3_rg_stage3$EN;

  // ports of submodule csr_regfile
  reg [63 : 0] csr_regfile$csr_trap_actions_xtval;
  reg [4 : 0] csr_regfile$csr_trap_actions_exc_code;
  reg [1 : 0] csr_regfile$csr_ret_actions_from_priv;
  wire [193 : 0] csr_regfile$csr_trap_actions;
  wire [129 : 0] csr_regfile$csr_ret_actions;
  wire [128 : 0] csr_regfile$read_csr_cap, csr_regfile$write_csr_cap_value;
  wire [64 : 0] csr_regfile$read_csr;
  wire [63 : 0] csr_regfile$csr_trap_actions_pc,
		csr_regfile$read_csr_mcycle,
		csr_regfile$read_csr_minstret,
		csr_regfile$read_mstatus,
		csr_regfile$read_satp,
		csr_regfile$read_sstatus,
		csr_regfile$write_csr_word;
  wire [27 : 0] csr_regfile$read_misa;
  wire [11 : 0] csr_regfile$csr_counter_read_fault_csr_addr,
		csr_regfile$mav_read_csr_csr_addr,
		csr_regfile$read_csr_csr_addr,
		csr_regfile$read_csr_port2_csr_addr,
		csr_regfile$write_csr_csr_addr;
  wire [5 : 0] csr_regfile$interrupt_pending;
  wire [4 : 0] csr_regfile$read_csr_cap_csr_addr,
	       csr_regfile$write_csr_cap_cap_addr;
  wire [1 : 0] csr_regfile$csr_counter_read_fault_priv,
	       csr_regfile$csr_trap_actions_from_priv,
	       csr_regfile$interrupt_pending_cur_priv;
  wire csr_regfile$EN_csr_minstret_incr,
       csr_regfile$EN_csr_ret_actions,
       csr_regfile$EN_csr_trap_actions,
       csr_regfile$EN_external_interrupt_req,
       csr_regfile$EN_mav_read_csr,
       csr_regfile$EN_server_reset_request_put,
       csr_regfile$EN_server_reset_response_get,
       csr_regfile$EN_software_interrupt_req,
       csr_regfile$EN_timer_interrupt_req,
       csr_regfile$EN_write_csr,
       csr_regfile$EN_write_csr_cap,
       csr_regfile$RDY_external_interrupt_req,
       csr_regfile$RDY_server_reset_request_put,
       csr_regfile$RDY_server_reset_response_get,
       csr_regfile$RDY_software_interrupt_req,
       csr_regfile$RDY_timer_interrupt_req,
       csr_regfile$csr_counter_read_fault,
       csr_regfile$csr_trap_actions_interrupt,
       csr_regfile$external_interrupt_req_set_not_clear,
       csr_regfile$software_interrupt_req_set_not_clear,
       csr_regfile$timer_interrupt_req_set_not_clear,
       csr_regfile$wfi_resume;

  // ports of submodule f_reset_reqs
  wire f_reset_reqs$CLR,
       f_reset_reqs$DEQ,
       f_reset_reqs$EMPTY_N,
       f_reset_reqs$ENQ,
       f_reset_reqs$FULL_N;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule gpr_regfile
  wire [128 : 0] gpr_regfile$read_rs1,
		 gpr_regfile$read_rs2,
		 gpr_regfile$write_rd_rd_val;
  wire [63 : 0] gpr_regfile$write_rd_int_rd_val;
  wire [7 : 0] gpr_regfile$clear_quarter_mask;
  wire [4 : 0] gpr_regfile$read_rs1_port2_rs1,
	       gpr_regfile$read_rs1_rs1,
	       gpr_regfile$read_rs2_rs2,
	       gpr_regfile$write_rd_int_rd,
	       gpr_regfile$write_rd_rd;
  wire [1 : 0] gpr_regfile$clear_quarter_qid;
  wire gpr_regfile$EN_clear_quarter,
       gpr_regfile$EN_server_reset_request_put,
       gpr_regfile$EN_server_reset_response_get,
       gpr_regfile$EN_write_rd,
       gpr_regfile$EN_write_rd_int,
       gpr_regfile$RDY_server_reset_request_put,
       gpr_regfile$RDY_server_reset_response_get,
       gpr_regfile$is_busy;

  // ports of submodule near_mem
  reg [63 : 0] near_mem$imem_req_addr;
  reg [1 : 0] near_mem$imem_req_priv;
  wire [63 : 0] near_mem$dmem_master_araddr,
		near_mem$dmem_master_awaddr,
		near_mem$dmem_master_rdata,
		near_mem$dmem_master_wdata,
		near_mem$dmem_req_addr,
		near_mem$dmem_req_satp,
		near_mem$dmem_req_store_value,
		near_mem$dmem_word64,
		near_mem$imem_master_araddr,
		near_mem$imem_master_awaddr,
		near_mem$imem_master_rdata,
		near_mem$imem_master_wdata,
		near_mem$imem_pc,
		near_mem$imem_req_satp,
		near_mem$near_mem_slave_araddr,
		near_mem$near_mem_slave_awaddr,
		near_mem$near_mem_slave_rdata,
		near_mem$near_mem_slave_wdata;
  wire [31 : 0] near_mem$imem_instr;
  wire [7 : 0] near_mem$dmem_master_wstrb,
	       near_mem$imem_master_wstrb,
	       near_mem$near_mem_slave_wstrb,
	       near_mem$server_fence_request_put;
  wire [4 : 0] near_mem$dmem_exc_code, near_mem$imem_exc_code;
  wire [2 : 0] near_mem$dmem_master_arprot,
	       near_mem$dmem_master_awprot,
	       near_mem$dmem_req_f3,
	       near_mem$imem_master_arprot,
	       near_mem$imem_master_awprot,
	       near_mem$imem_req_f3,
	       near_mem$near_mem_slave_arprot,
	       near_mem$near_mem_slave_awprot;
  wire [1 : 0] near_mem$dmem_master_bresp,
	       near_mem$dmem_master_rresp,
	       near_mem$dmem_req_priv,
	       near_mem$imem_master_bresp,
	       near_mem$imem_master_rresp,
	       near_mem$near_mem_slave_bresp,
	       near_mem$near_mem_slave_rresp;
  wire near_mem$EN_dmem_req,
       near_mem$EN_imem_req,
       near_mem$EN_server_fence_i_request_put,
       near_mem$EN_server_fence_i_response_get,
       near_mem$EN_server_fence_request_put,
       near_mem$EN_server_fence_response_get,
       near_mem$EN_server_reset_request_put,
       near_mem$EN_server_reset_response_get,
       near_mem$EN_sfence_vma,
       near_mem$RDY_server_fence_i_request_put,
       near_mem$RDY_server_fence_i_response_get,
       near_mem$RDY_server_fence_request_put,
       near_mem$RDY_server_fence_response_get,
       near_mem$RDY_server_reset_request_put,
       near_mem$RDY_server_reset_response_get,
       near_mem$dmem_exc,
       near_mem$dmem_master_arready,
       near_mem$dmem_master_arvalid,
       near_mem$dmem_master_awready,
       near_mem$dmem_master_awvalid,
       near_mem$dmem_master_bready,
       near_mem$dmem_master_bvalid,
       near_mem$dmem_master_rready,
       near_mem$dmem_master_rvalid,
       near_mem$dmem_master_wready,
       near_mem$dmem_master_wvalid,
       near_mem$dmem_req_mstatus_MXR,
       near_mem$dmem_req_op,
       near_mem$dmem_req_sstatus_SUM,
       near_mem$dmem_valid,
       near_mem$imem_exc,
       near_mem$imem_master_arready,
       near_mem$imem_master_arvalid,
       near_mem$imem_master_awready,
       near_mem$imem_master_awvalid,
       near_mem$imem_master_bready,
       near_mem$imem_master_bvalid,
       near_mem$imem_master_rready,
       near_mem$imem_master_rvalid,
       near_mem$imem_master_wready,
       near_mem$imem_master_wvalid,
       near_mem$imem_req_mstatus_MXR,
       near_mem$imem_req_sstatus_SUM,
       near_mem$imem_req_trap,
       near_mem$imem_valid,
       near_mem$near_mem_slave_arready,
       near_mem$near_mem_slave_arvalid,
       near_mem$near_mem_slave_awready,
       near_mem$near_mem_slave_awvalid,
       near_mem$near_mem_slave_bready,
       near_mem$near_mem_slave_bvalid,
       near_mem$near_mem_slave_rready,
       near_mem$near_mem_slave_rvalid,
       near_mem$near_mem_slave_wready,
       near_mem$near_mem_slave_wvalid;

  // ports of submodule stage1_f_reset_reqs
  wire stage1_f_reset_reqs$CLR,
       stage1_f_reset_reqs$DEQ,
       stage1_f_reset_reqs$EMPTY_N,
       stage1_f_reset_reqs$ENQ,
       stage1_f_reset_reqs$FULL_N;

  // ports of submodule stage1_f_reset_rsps
  wire stage1_f_reset_rsps$CLR,
       stage1_f_reset_rsps$DEQ,
       stage1_f_reset_rsps$EMPTY_N,
       stage1_f_reset_rsps$ENQ,
       stage1_f_reset_rsps$FULL_N;

  // ports of submodule stage2_f_reset_reqs
  wire stage2_f_reset_reqs$CLR,
       stage2_f_reset_reqs$DEQ,
       stage2_f_reset_reqs$EMPTY_N,
       stage2_f_reset_reqs$ENQ,
       stage2_f_reset_reqs$FULL_N;

  // ports of submodule stage2_f_reset_rsps
  wire stage2_f_reset_rsps$CLR,
       stage2_f_reset_rsps$DEQ,
       stage2_f_reset_rsps$EMPTY_N,
       stage2_f_reset_rsps$ENQ,
       stage2_f_reset_rsps$FULL_N;

  // ports of submodule stage3_f_reset_reqs
  wire stage3_f_reset_reqs$CLR,
       stage3_f_reset_reqs$DEQ,
       stage3_f_reset_reqs$EMPTY_N,
       stage3_f_reset_reqs$ENQ,
       stage3_f_reset_reqs$FULL_N;

  // ports of submodule stage3_f_reset_rsps
  wire stage3_f_reset_rsps$CLR,
       stage3_f_reset_rsps$DEQ,
       stage3_f_reset_rsps$EMPTY_N,
       stage3_f_reset_rsps$ENQ,
       stage3_f_reset_rsps$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_WFI_resume,
       CAN_FIRE_RL_rl_finish_FENCE,
       CAN_FIRE_RL_rl_finish_FENCE_I,
       CAN_FIRE_RL_rl_finish_SFENCE_VMA,
       CAN_FIRE_RL_rl_pipe,
       CAN_FIRE_RL_rl_reset_complete,
       CAN_FIRE_RL_rl_reset_from_WFI,
       CAN_FIRE_RL_rl_reset_start,
       CAN_FIRE_RL_rl_show_pipe,
       CAN_FIRE_RL_rl_stage1_FENCE,
       CAN_FIRE_RL_rl_stage1_FENCE_I,
       CAN_FIRE_RL_rl_stage1_SFENCE_VMA,
       CAN_FIRE_RL_rl_stage1_WFI,
       CAN_FIRE_RL_rl_stage1_interrupt,
       CAN_FIRE_RL_rl_stage1_restart_after_csrrx,
       CAN_FIRE_RL_rl_stage1_trap,
       CAN_FIRE_RL_rl_stage1_xRET,
       CAN_FIRE_RL_rl_stage2_nonpipe,
       CAN_FIRE_RL_stage1_rl_reset,
       CAN_FIRE_RL_stage2_rl_reset,
       CAN_FIRE_RL_stage3_rl_reset,
       CAN_FIRE_dmem_master_m_arready,
       CAN_FIRE_dmem_master_m_awready,
       CAN_FIRE_dmem_master_m_bvalid,
       CAN_FIRE_dmem_master_m_rvalid,
       CAN_FIRE_dmem_master_m_wready,
       CAN_FIRE_external_interrupt_req,
       CAN_FIRE_hart0_server_reset_request_put,
       CAN_FIRE_hart0_server_reset_response_get,
       CAN_FIRE_imem_master_m_arready,
       CAN_FIRE_imem_master_m_awready,
       CAN_FIRE_imem_master_m_bvalid,
       CAN_FIRE_imem_master_m_rvalid,
       CAN_FIRE_imem_master_m_wready,
       CAN_FIRE_near_mem_slave_m_arvalid,
       CAN_FIRE_near_mem_slave_m_awvalid,
       CAN_FIRE_near_mem_slave_m_bready,
       CAN_FIRE_near_mem_slave_m_rready,
       CAN_FIRE_near_mem_slave_m_wvalid,
       CAN_FIRE_software_interrupt_req,
       CAN_FIRE_timer_interrupt_req,
       WILL_FIRE_RL_rl_WFI_resume,
       WILL_FIRE_RL_rl_finish_FENCE,
       WILL_FIRE_RL_rl_finish_FENCE_I,
       WILL_FIRE_RL_rl_finish_SFENCE_VMA,
       WILL_FIRE_RL_rl_pipe,
       WILL_FIRE_RL_rl_reset_complete,
       WILL_FIRE_RL_rl_reset_from_WFI,
       WILL_FIRE_RL_rl_reset_start,
       WILL_FIRE_RL_rl_show_pipe,
       WILL_FIRE_RL_rl_stage1_FENCE,
       WILL_FIRE_RL_rl_stage1_FENCE_I,
       WILL_FIRE_RL_rl_stage1_SFENCE_VMA,
       WILL_FIRE_RL_rl_stage1_WFI,
       WILL_FIRE_RL_rl_stage1_interrupt,
       WILL_FIRE_RL_rl_stage1_restart_after_csrrx,
       WILL_FIRE_RL_rl_stage1_trap,
       WILL_FIRE_RL_rl_stage1_xRET,
       WILL_FIRE_RL_rl_stage2_nonpipe,
       WILL_FIRE_RL_stage1_rl_reset,
       WILL_FIRE_RL_stage2_rl_reset,
       WILL_FIRE_RL_stage3_rl_reset,
       WILL_FIRE_dmem_master_m_arready,
       WILL_FIRE_dmem_master_m_awready,
       WILL_FIRE_dmem_master_m_bvalid,
       WILL_FIRE_dmem_master_m_rvalid,
       WILL_FIRE_dmem_master_m_wready,
       WILL_FIRE_external_interrupt_req,
       WILL_FIRE_hart0_server_reset_request_put,
       WILL_FIRE_hart0_server_reset_response_get,
       WILL_FIRE_imem_master_m_arready,
       WILL_FIRE_imem_master_m_awready,
       WILL_FIRE_imem_master_m_bvalid,
       WILL_FIRE_imem_master_m_rvalid,
       WILL_FIRE_imem_master_m_wready,
       WILL_FIRE_near_mem_slave_m_arvalid,
       WILL_FIRE_near_mem_slave_m_awvalid,
       WILL_FIRE_near_mem_slave_m_bready,
       WILL_FIRE_near_mem_slave_m_rready,
       WILL_FIRE_near_mem_slave_m_wvalid,
       WILL_FIRE_software_interrupt_req,
       WILL_FIRE_timer_interrupt_req;

  // inputs to muxes for submodule ports
  wire [63 : 0] MUX_rg_inum$write_1__VAL_1;
  wire MUX_near_mem$imem_req_1__SEL_1,
       MUX_near_mem$imem_req_1__SEL_3,
       MUX_near_mem$imem_req_1__SEL_4,
       MUX_rg_cur_priv$write_1__SEL_1,
       MUX_rg_inum$write_1__SEL_1,
       MUX_rg_inum$write_1__SEL_2,
       MUX_rg_state$write_1__SEL_1,
       MUX_rg_state$write_1__SEL_4,
       MUX_stage1_rg_full$write_1__VAL_11,
       MUX_stage2_rg_full$write_1__VAL_3;

  // remaining internal signals
  reg [128 : 0] CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q38;
  reg [127 : 0] CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q37,
		CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3,
		IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448,
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459,
		alu_outputs___1_addr_capability__h62836,
		alu_outputs___1_val1_capability__h63924,
		alu_outputs___1_val1_capability__h64026,
		alu_outputs_addr_capability__h62851,
		alu_outputs_val2_capability__h69811,
		ccsr_val_capability__h63997,
		x_out_bypass_rd_val_capability__h4621;
  reg [63 : 0] _theResult_____1_snd__h61414, csr_val__h6361, new_addr__h63849;
  reg [4 : 0] CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q27,
	      CASE_rg_cur_priv_0b0_8_0b1_9_11__q26,
	      IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2702,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722,
	      alu_outputs___1_exc_code__h31002,
	      alu_outputs___1_exc_code__h5858,
	      alu_outputs___1_exc_code__h60624,
	      alu_outputs_exc_code__h60648,
	      check__h58128,
	      fv_out_data_to_stage2_rd__h5766,
	      x_out_data_to_stage3_rd__h4794;
  reg [3 : 0] CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q28,
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q29,
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1884,
	      IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1838,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881,
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891,
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1895;
  reg [2 : 0] CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q30,
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q31,
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1989;
  reg [1 : 0] CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2,
	      IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151;
  reg IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1530,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1766,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2782,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2901,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1519,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1755,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2241,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2245,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2768,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2771,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2890,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1537,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1773,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2908,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2923,
      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461,
      TASK_testplusargs___d2819,
      TASK_testplusargs___d2820,
      alu_outputs___1_val1_tag__h64025,
      x_out_bypass_rd_val_tag__h4620;
  wire [128 : 0] near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2462,
		 stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186;
  wire [127 : 0] IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2409,
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322,
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344,
		 IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2422,
		 IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2460,
		 IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317,
		 IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340,
		 _theResult___snd_capability__h63879,
		 _theResult___snd_capability__h63948,
		 alu_outputs___1_addr_capability__h62751,
		 alu_outputs___1_addr_capability__h62765,
		 alu_outputs___1_addr_capability__h62792,
		 alu_outputs___1_val1_capability__h63832,
		 alu_outputs___1_val1_capability__h63840,
		 alu_outputs___1_val1_capability__h63844,
		 alu_outputs___1_val1_capability__h63848,
		 alu_outputs___1_val1_capability__h63852,
		 alu_outputs___1_val1_capability__h63855,
		 alu_outputs___1_val1_capability__h63858,
		 alu_outputs___1_val1_capability__h63868,
		 alu_outputs___1_val1_capability__h63911,
		 alu_outputs___1_val2_capability__h69725,
		 alu_outputs___1_val2_capability__h69741,
		 alu_outputs___2_addr_capability__h62813,
		 alu_outputs_addr_capability__h62734,
		 alu_outputs_addr_capability__h62738,
		 alu_outputs_addr_capability__h62742,
		 alu_outputs_addr_capability__h62754,
		 b_capability__h31279,
		 b_capability__h31291,
		 b_capability__h6618,
		 b_capability__h6630,
		 controller_capability__h59382,
		 csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d3121,
		 new_pcc_capability__h58177,
		 newcap__h31871,
		 out_val_capability__h57183,
		 output_stage2___1_bypass_rd_val_capability__h4613,
		 pcc_capability__h58049,
		 ret_capability__h63873,
		 ret_capability__h63942,
		 rs1_val_bypassed_capability632_AND_INV_0xFFFFF_ETC__q11,
		 rs1_val_bypassed_capability__h6632,
		 rs2_val_bypassed_capability1293_AND_INV_0xFFFF_ETC__q6,
		 rs2_val_bypassed_capability__h31293;
  wire [64 : 0] _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_19_ETC__q35,
		_0_CONCAT_x4734_SL_rs2_val_bypassed_capability1_ETC__q34,
		b_val__h64177,
		b_val__h64453,
		result4176_PLUS_b_val4177__q33,
		result4452_PLUS_b_val4453__q32,
		result__h64176,
		result__h64452;
  wire [63 : 0] IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529,
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2801,
		INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227,
		INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712,
		SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1566,
		_theResult_____1_snd__h61407,
		_theResult_____1_snd__h61442,
		_theResult_____4__h69954,
		_theResult_____5__h69953,
		_theResult____h76445,
		_theResult___snd__h61518,
		_theResult___snd__h61525,
		_theResult___snd__h61631,
		_theResult___snd__h65436,
		b__h31413,
		b__h57146,
		b__h59622,
		bot__h32365,
		bot__h69238,
		bot__h7019,
		branch_target__h5843,
		cpi__h76447,
		cpifrac__h76448,
		csr_val___1__h70113,
		csr_val___2__h69952,
		csr_val___2__h69961,
		csr_val___2__h70038,
		csr_val___2__h70053,
		csr_val__h63675,
		csr_val__h63680,
		delta_CPI_cycles__h76443,
		delta_CPI_instrs___1__h76480,
		delta_CPI_instrs__h76444,
		eaddr__h6106,
		fv_out_next_pc__h5702,
		lower__h57144,
		near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564,
		newVal__h30690,
		newVal__h30696,
		newVal__h30705,
		new_addr__h63837,
		new_addr__h63841,
		new_addr__h63845,
		new_addr__h63966,
		new_addr__h64004,
		new_addr__h69736,
		new_curs__h31905,
		new_offset__h63870,
		new_pc__h5854,
		next_pc__h5872,
		next_pc__h5895,
		old_lower__h6726,
		old_top__h6727,
		range__h6677,
		rd_val___1__h61394,
		rd_val___1__h61402,
		rd_val___1__h61409,
		rd_val___1__h61416,
		rd_val___1__h61423,
		rd_val___1__h61430,
		rd_val___1__h65533,
		rd_val___1__h65585,
		rd_val___1__h65639,
		rd_val___1__h65668,
		rd_val___1__h65766,
		rd_val___1__h65854,
		rd_val___1__h65860,
		rd_val___1__h65905,
		rd_val__h6051,
		rd_val__h6068,
		rd_val__h6357,
		rd_val__h65222,
		rd_val__h65316,
		rd_val__h65338,
		requested_top__h32054,
		requested_top__h6725,
		ret_pc__h5871,
		rs1_val__h6356,
		rs1_val_bypassed_capability632_BITS_63_TO_0_AN_ETC__q14,
		rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q19,
		rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q22,
		rs1_val_bypassed_capability632_BITS_63_TO_0__q13,
		rs2_val_bypassed_capability1293_BITS_63_TO_0_A_ETC__q7,
		top__h32364,
		top__h69237,
		top__h7018,
		upper__h30725,
		upper__h31412,
		upper__h57145,
		upper__h58522,
		upper__h59621,
		upper__h59837,
		upper__h60053,
		upper__h60269,
		value__h62699,
		x__h18283,
		x__h26311,
		x__h26312,
		x__h30729,
		x__h30876,
		x__h30893,
		x__h31416,
		x__h31563,
		x__h31580,
		x__h43629,
		x__h52696,
		x__h52697,
		x__h57149,
		x__h57373,
		x__h57390,
		x__h58673,
		x__h58690,
		x__h59625,
		x__h59772,
		x__h59789,
		x__h59988,
		x__h60005,
		x__h60204,
		x__h60221,
		x__h60420,
		x__h60437,
		x__h76446,
		y__h18282,
		y__h43628,
		y__h70183;
  wire [31 : 0] IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2546,
		new_offset3870_BITS_31_TO_0__q25,
		rs1_val_bypassed_capability632_BITS_31_TO_0_MI_ETC__q16,
		rs1_val_bypassed_capability632_BITS_31_TO_0_PL_ETC__q15,
		rs1_val_bypassed_capability632_BITS_31_TO_0_SR_ETC__q9,
		rs1_val_bypassed_capability632_BITS_31_TO_0__q8,
		tmp__h65667,
		v32__h6049,
		x__h65588,
		x__h65642,
		x__h65863,
		x__h65908;
  wire [20 : 0] near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q23;
  wire [19 : 0] IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d475,
		aMid__h64254,
		aMid__h64530,
		ct_T__h57067,
		r__h64255,
		r__h64531,
		x__h30640,
		x__h31491,
		x__h32375,
		x__h57025,
		x__h57302,
		x__h59700,
		x__h64406,
		x__h64734,
		x__h6763,
		x__h6884,
		x__h69248,
		x__h7029;
  wire [14 : 0] newperms__h31870, perms__h60601, y__h64096;
  wire [12 : 0] near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1;
  wire [11 : 0] near_memimem_instr_BITS_31_TO_20__q24,
		near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10;
  wire [9 : 0] funct10__h6030, x__h67604;
  wire [7 : 0] stage3_rg_stage3_BITS_136_TO_129__q4,
	       x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5;
  wire [6 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1215,
	       IF_near_mem_imem_instr__20_BIT_30_71_THEN_53_E_ETC___d700,
	       _44_MINUS_leading071__q12,
	       _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q17,
	       _63_MINUS_IF_rs2_val_bypassed_capability1293_BI_ETC__q20,
	       increase2609_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q21,
	       increase6224_PLUS_0_CONCAT_63_MINUS_IF_near_me_ETC__q18,
	       increase__h26224,
	       increase__h52609,
	       leading__h7071,
	       x__h16033,
	       x__h16045,
	       x__h16057,
	       x__h16069,
	       x__h16081,
	       x__h16093,
	       x__h16105,
	       x__h16117,
	       x__h16129,
	       x__h16141,
	       x__h16153,
	       x__h41379,
	       x__h41391,
	       x__h41403,
	       x__h41415,
	       x__h41427,
	       x__h41439,
	       x__h41451,
	       x__h41463,
	       x__h41475,
	       x__h41487,
	       x__h41499,
	       x__h41511,
	       x__h41523,
	       x__h41535,
	       x__h41547,
	       x__h41559,
	       x__h41571,
	       x__h41583,
	       x__h41595,
	       x__h41607,
	       x__h41619,
	       x__h41631,
	       x__h41643,
	       x__h41655,
	       x__h41667,
	       x__h41679,
	       x__h41691,
	       x__h41703,
	       x__h41715,
	       x__h41727,
	       x__h41739,
	       x__h41751,
	       x__h41763,
	       x__h41775,
	       x__h41787,
	       x__h41799,
	       x__h41811,
	       x__h41823,
	       x__h41835,
	       x__h41847,
	       x__h41859,
	       x__h41871,
	       x__h41883,
	       x__h41895,
	       x__h41907,
	       x__h41919,
	       x__h41931,
	       x__h41943,
	       x__h41955,
	       x__h41967,
	       x__h41979,
	       x__h41991,
	       x__h42003,
	       x__h42015,
	       x__h42027,
	       x__h42039,
	       x__h42051,
	       x__h42063,
	       x__h42075,
	       x__h42087,
	       x__h42099,
	       x__h42111,
	       x__h42123,
	       y__h16034,
	       y__h16046,
	       y__h16058,
	       y__h16070,
	       y__h16082,
	       y__h16094,
	       y__h16106,
	       y__h16118,
	       y__h16130,
	       y__h16142,
	       y__h16154,
	       y__h41380,
	       y__h41392,
	       y__h41404,
	       y__h41416,
	       y__h41428,
	       y__h41440,
	       y__h41452,
	       y__h41464,
	       y__h41476,
	       y__h41488,
	       y__h41500,
	       y__h41512,
	       y__h41524,
	       y__h41536,
	       y__h41548,
	       y__h41560,
	       y__h41572,
	       y__h41584,
	       y__h41596,
	       y__h41608,
	       y__h41620,
	       y__h41632,
	       y__h41644,
	       y__h41656,
	       y__h41668,
	       y__h41680,
	       y__h41692,
	       y__h41704,
	       y__h41716,
	       y__h41728,
	       y__h41740,
	       y__h41752,
	       y__h41764,
	       y__h41776,
	       y__h41788,
	       y__h41800,
	       y__h41812,
	       y__h41824,
	       y__h41836,
	       y__h41848,
	       y__h41860,
	       y__h41872,
	       y__h41884,
	       y__h41896,
	       y__h41908,
	       y__h41920,
	       y__h41932,
	       y__h41944,
	       y__h41956,
	       y__h41968,
	       y__h41980,
	       y__h41992,
	       y__h42004,
	       y__h42016,
	       y__h42028,
	       y__h42040,
	       y__h42052,
	       y__h42064,
	       y__h42076,
	       y__h42088,
	       y__h42100,
	       y__h42112,
	       y__h42124;
  wire [5 : 0] baseExp__h7036,
	       exp__h32359,
	       exp__h7013,
	       i1__h64259,
	       i1__h64535,
	       i2__h64194,
	       i2__h64470,
	       rangeExp__h32381,
	       rangeExp__h7035,
	       shamt__h5945;
  wire [4 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2637,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2654,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2678,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2695,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2706,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2621,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2624,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2632,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2651,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2690,
	       IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2676,
	       IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2693,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2660,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2704,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2642,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2652,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2656,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2658,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2680,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2697,
	       _theResult___exc_code__h61934,
	       _theResult___fst__h32051,
	       _theResult___fst__h32058,
	       _theResult___fst__h6722,
	       _theResult___fst__h6729,
	       alu_outputs___1_exc_code__h62194,
	       alu_outputs___1_exc_code__h6371,
	       check__h30716,
	       check__h31012,
	       check__h31629,
	       check__h59354,
	       decoded_instr_rs2__h5316,
	       fv_out_trap_info_exc_code__h62452,
	       out__h59128,
	       trap__h32010,
	       trap__h6679;
  wire [3 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1857,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1864,
	       IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1804,
	       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897,
	       IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1840,
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1842,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1855,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1858,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1863,
	       IF_rg_cur_priv_9_EQ_0b11_810_OR_rg_cur_priv_9__ETC___d1836,
	       cur_verbosity__h1374;
  wire [2 : 0] x__h69179;
  wire [1 : 0] IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2183,
	       IF_csr_regfileread_misa_BIT_18_THEN_spp9958_E_ETC__q36,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2203,
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114,
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152,
	       IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108,
	       b__h64189,
	       b__h64465,
	       ms_spp__h3168,
	       ms_sxl__h3157,
	       ms_uxl__h3158,
	       spliced_bits__h70009,
	       spp__h69958,
	       x__h64184,
	       x__h64460;
  wire IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2176,
       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2196,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1446,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1475,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1481,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1489,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1497,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1719,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1745,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2175,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2666,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2882,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d917,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d922,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1406,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1680,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1860,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2850,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2851,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2856,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2862,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2863,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2875,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2876,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d462,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d902,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937,
       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3118,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1573,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1578,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1661,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1685,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1694,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2195,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2615,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2645,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2915,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d478,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d480,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d952,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d957,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d959,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1516,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1752,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2078,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2234,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2794,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2887,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1492,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1500,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1703,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1715,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1742,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1861,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2232,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2475,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2880,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2912,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d3131,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3045,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1403,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d453,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d899,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d1404,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2848,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2854,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2860,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2873,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d454,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d900,
       NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1224,
       NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d2220,
       NOT_0_CONCAT_near_mem_imem_instr__20_BIT_31_55_ETC___d709,
       NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d928,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2966,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2968,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1585,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1689,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2744,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2750,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2753,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1413,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1438,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1736,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274,
       NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260,
       NOT_near_mem_imem_exc__38_601_AND_IF_near_mem__ETC___d2060,
       NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614,
       NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1957,
       NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d2022,
       NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d2048,
       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1652,
       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2056,
       NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1551,
       NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1664,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1697,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1700,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2859,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2866,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2867,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2871,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2872,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2926,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2937,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2939,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3048,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3049,
       NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2942,
       NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2982,
       NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991,
       NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3043,
       NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3052,
       NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3054,
       NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3057,
       NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d3068,
       _0_CONCAT_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d2431,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1385,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1390,
       _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1367,
       _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1371,
       _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d852,
       _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856,
       _theResult___snd_tag__h63878,
       alu_outputs___1_addr_tag__h62791,
       alu_outputs___1_addr_tag__h62835,
       alu_outputs___1_val1_tag__h63923,
       alu_outputs___1_val2_tag__h69795,
       alu_outputs_addr_tag__h62850,
       alu_outputs_val2_tag__h69810,
       csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1612,
       global__h58175,
       global__h63931,
       gpr_regfile_RDY_server_reset_response_get__825_ETC___d2837,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2566,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2569,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2572,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2575,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2578,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2581,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2584,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2587,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2590,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2593,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2596,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262,
       near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_8_ETC___d1815,
       near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426,
       near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1631,
       near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1780,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1377,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1394,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d862,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d930,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d944,
       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d3003,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2979,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2980,
       output_stage2___1_bypass_rd_val_tag__h4612,
       rg_cur_priv_9_EQ_0b11_810_OR_rg_cur_priv_9_EQ__ETC___d1834,
       rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1437,
       rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249,
       rg_halt_931_OR_csr_regfile_interrupt_pending_r_ETC___d3074,
       rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3086,
       rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3099,
       rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3105,
       rg_state_7_EQ_2_842_AND_stage1_rg_full_16_AND__ETC___d3136,
       rg_state_7_EQ_2_842_AND_stage1_rg_full_16_OR_N_ETC___d2945,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1901,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1905,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1909,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1913,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1917,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1921,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1925,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1929,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1933,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1937,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2002,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2006,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2010,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2014,
       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333,
       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309,
       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332,
       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307,
       stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90;

  // action method hart0_server_reset_request_put
  assign RDY_hart0_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign CAN_FIRE_hart0_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign WILL_FIRE_hart0_server_reset_request_put =
	     EN_hart0_server_reset_request_put ;

  // action method hart0_server_reset_response_get
  assign RDY_hart0_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_hart0_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_hart0_server_reset_response_get =
	     EN_hart0_server_reset_response_get ;

  // value method imem_master_m_awvalid
  assign imem_master_awvalid = near_mem$imem_master_awvalid ;

  // value method imem_master_m_awaddr
  assign imem_master_awaddr = near_mem$imem_master_awaddr ;

  // value method imem_master_m_awprot
  assign imem_master_awprot = near_mem$imem_master_awprot ;

  // action method imem_master_m_awready
  assign CAN_FIRE_imem_master_m_awready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_awready = 1'd1 ;

  // value method imem_master_m_wvalid
  assign imem_master_wvalid = near_mem$imem_master_wvalid ;

  // value method imem_master_m_wdata
  assign imem_master_wdata = near_mem$imem_master_wdata ;

  // value method imem_master_m_wstrb
  assign imem_master_wstrb = near_mem$imem_master_wstrb ;

  // action method imem_master_m_wready
  assign CAN_FIRE_imem_master_m_wready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_wready = 1'd1 ;

  // action method imem_master_m_bvalid
  assign CAN_FIRE_imem_master_m_bvalid = 1'd1 ;
  assign WILL_FIRE_imem_master_m_bvalid = 1'd1 ;

  // value method imem_master_m_bready
  assign imem_master_bready = near_mem$imem_master_bready ;

  // value method imem_master_m_arvalid
  assign imem_master_arvalid = near_mem$imem_master_arvalid ;

  // value method imem_master_m_araddr
  assign imem_master_araddr = near_mem$imem_master_araddr ;

  // value method imem_master_m_arprot
  assign imem_master_arprot = near_mem$imem_master_arprot ;

  // action method imem_master_m_arready
  assign CAN_FIRE_imem_master_m_arready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_arready = 1'd1 ;

  // action method imem_master_m_rvalid
  assign CAN_FIRE_imem_master_m_rvalid = 1'd1 ;
  assign WILL_FIRE_imem_master_m_rvalid = 1'd1 ;

  // value method imem_master_m_rready
  assign imem_master_rready = near_mem$imem_master_rready ;

  // value method dmem_master_m_awvalid
  assign dmem_master_awvalid = near_mem$dmem_master_awvalid ;

  // value method dmem_master_m_awaddr
  assign dmem_master_awaddr = near_mem$dmem_master_awaddr ;

  // value method dmem_master_m_awprot
  assign dmem_master_awprot = near_mem$dmem_master_awprot ;

  // action method dmem_master_m_awready
  assign CAN_FIRE_dmem_master_m_awready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_awready = 1'd1 ;

  // value method dmem_master_m_wvalid
  assign dmem_master_wvalid = near_mem$dmem_master_wvalid ;

  // value method dmem_master_m_wdata
  assign dmem_master_wdata = near_mem$dmem_master_wdata ;

  // value method dmem_master_m_wstrb
  assign dmem_master_wstrb = near_mem$dmem_master_wstrb ;

  // action method dmem_master_m_wready
  assign CAN_FIRE_dmem_master_m_wready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_wready = 1'd1 ;

  // action method dmem_master_m_bvalid
  assign CAN_FIRE_dmem_master_m_bvalid = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_bvalid = 1'd1 ;

  // value method dmem_master_m_bready
  assign dmem_master_bready = near_mem$dmem_master_bready ;

  // value method dmem_master_m_arvalid
  assign dmem_master_arvalid = near_mem$dmem_master_arvalid ;

  // value method dmem_master_m_araddr
  assign dmem_master_araddr = near_mem$dmem_master_araddr ;

  // value method dmem_master_m_arprot
  assign dmem_master_arprot = near_mem$dmem_master_arprot ;

  // action method dmem_master_m_arready
  assign CAN_FIRE_dmem_master_m_arready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_arready = 1'd1 ;

  // action method dmem_master_m_rvalid
  assign CAN_FIRE_dmem_master_m_rvalid = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_rvalid = 1'd1 ;

  // value method dmem_master_m_rready
  assign dmem_master_rready = near_mem$dmem_master_rready ;

  // action method near_mem_slave_m_awvalid
  assign CAN_FIRE_near_mem_slave_m_awvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_awvalid = 1'd1 ;

  // value method near_mem_slave_m_awready
  assign near_mem_slave_awready = near_mem$near_mem_slave_awready ;

  // action method near_mem_slave_m_wvalid
  assign CAN_FIRE_near_mem_slave_m_wvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_wvalid = 1'd1 ;

  // value method near_mem_slave_m_wready
  assign near_mem_slave_wready = near_mem$near_mem_slave_wready ;

  // value method near_mem_slave_m_bvalid
  assign near_mem_slave_bvalid = near_mem$near_mem_slave_bvalid ;

  // value method near_mem_slave_m_bresp
  assign near_mem_slave_bresp = near_mem$near_mem_slave_bresp ;

  // action method near_mem_slave_m_bready
  assign CAN_FIRE_near_mem_slave_m_bready = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_bready = 1'd1 ;

  // action method near_mem_slave_m_arvalid
  assign CAN_FIRE_near_mem_slave_m_arvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_arvalid = 1'd1 ;

  // value method near_mem_slave_m_arready
  assign near_mem_slave_arready = near_mem$near_mem_slave_arready ;

  // value method near_mem_slave_m_rvalid
  assign near_mem_slave_rvalid = near_mem$near_mem_slave_rvalid ;

  // value method near_mem_slave_m_rresp
  assign near_mem_slave_rresp = near_mem$near_mem_slave_rresp ;

  // value method near_mem_slave_m_rdata
  assign near_mem_slave_rdata = near_mem$near_mem_slave_rdata ;

  // action method near_mem_slave_m_rready
  assign CAN_FIRE_near_mem_slave_m_rready = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_rready = 1'd1 ;

  // action method external_interrupt_req
  assign RDY_external_interrupt_req = csr_regfile$RDY_external_interrupt_req ;
  assign CAN_FIRE_external_interrupt_req =
	     csr_regfile$RDY_external_interrupt_req ;
  assign WILL_FIRE_external_interrupt_req = EN_external_interrupt_req ;

  // action method timer_interrupt_req
  assign RDY_timer_interrupt_req = csr_regfile$RDY_timer_interrupt_req ;
  assign CAN_FIRE_timer_interrupt_req = csr_regfile$RDY_timer_interrupt_req ;
  assign WILL_FIRE_timer_interrupt_req = EN_timer_interrupt_req ;

  // action method software_interrupt_req
  assign RDY_software_interrupt_req = csr_regfile$RDY_software_interrupt_req ;
  assign CAN_FIRE_software_interrupt_req =
	     csr_regfile$RDY_software_interrupt_req ;
  assign WILL_FIRE_software_interrupt_req = EN_software_interrupt_req ;

  // submodule csr_regfile
  mkCSR_RegFile csr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .csr_counter_read_fault_csr_addr(csr_regfile$csr_counter_read_fault_csr_addr),
			    .csr_counter_read_fault_priv(csr_regfile$csr_counter_read_fault_priv),
			    .csr_ret_actions_from_priv(csr_regfile$csr_ret_actions_from_priv),
			    .csr_trap_actions_exc_code(csr_regfile$csr_trap_actions_exc_code),
			    .csr_trap_actions_from_priv(csr_regfile$csr_trap_actions_from_priv),
			    .csr_trap_actions_interrupt(csr_regfile$csr_trap_actions_interrupt),
			    .csr_trap_actions_pc(csr_regfile$csr_trap_actions_pc),
			    .csr_trap_actions_xtval(csr_regfile$csr_trap_actions_xtval),
			    .external_interrupt_req_set_not_clear(csr_regfile$external_interrupt_req_set_not_clear),
			    .interrupt_pending_cur_priv(csr_regfile$interrupt_pending_cur_priv),
			    .mav_read_csr_csr_addr(csr_regfile$mav_read_csr_csr_addr),
			    .read_csr_cap_csr_addr(csr_regfile$read_csr_cap_csr_addr),
			    .read_csr_csr_addr(csr_regfile$read_csr_csr_addr),
			    .read_csr_port2_csr_addr(csr_regfile$read_csr_port2_csr_addr),
			    .software_interrupt_req_set_not_clear(csr_regfile$software_interrupt_req_set_not_clear),
			    .timer_interrupt_req_set_not_clear(csr_regfile$timer_interrupt_req_set_not_clear),
			    .write_csr_cap_cap_addr(csr_regfile$write_csr_cap_cap_addr),
			    .write_csr_cap_value(csr_regfile$write_csr_cap_value),
			    .write_csr_csr_addr(csr_regfile$write_csr_csr_addr),
			    .write_csr_word(csr_regfile$write_csr_word),
			    .EN_server_reset_request_put(csr_regfile$EN_server_reset_request_put),
			    .EN_server_reset_response_get(csr_regfile$EN_server_reset_response_get),
			    .EN_mav_read_csr(csr_regfile$EN_mav_read_csr),
			    .EN_write_csr_cap(csr_regfile$EN_write_csr_cap),
			    .EN_write_csr(csr_regfile$EN_write_csr),
			    .EN_csr_trap_actions(csr_regfile$EN_csr_trap_actions),
			    .EN_csr_ret_actions(csr_regfile$EN_csr_ret_actions),
			    .EN_csr_minstret_incr(csr_regfile$EN_csr_minstret_incr),
			    .EN_external_interrupt_req(csr_regfile$EN_external_interrupt_req),
			    .EN_timer_interrupt_req(csr_regfile$EN_timer_interrupt_req),
			    .EN_software_interrupt_req(csr_regfile$EN_software_interrupt_req),
			    .RDY_server_reset_request_put(csr_regfile$RDY_server_reset_request_put),
			    .RDY_server_reset_response_get(csr_regfile$RDY_server_reset_response_get),
			    .read_csr(csr_regfile$read_csr),
			    .read_csr_port2(),
			    .mav_read_csr(),
			    .read_csr_cap(csr_regfile$read_csr_cap),
			    .read_misa(csr_regfile$read_misa),
			    .read_mstatus(csr_regfile$read_mstatus),
			    .read_sstatus(csr_regfile$read_sstatus),
			    .read_satp(csr_regfile$read_satp),
			    .csr_trap_actions(csr_regfile$csr_trap_actions),
			    .RDY_csr_trap_actions(),
			    .csr_ret_actions(csr_regfile$csr_ret_actions),
			    .RDY_csr_ret_actions(),
			    .read_csr_minstret(csr_regfile$read_csr_minstret),
			    .read_csr_mcycle(csr_regfile$read_csr_mcycle),
			    .read_csr_mtime(),
			    .csr_counter_read_fault(csr_regfile$csr_counter_read_fault),
			    .read_csr_mip(),
			    .RDY_external_interrupt_req(csr_regfile$RDY_external_interrupt_req),
			    .RDY_timer_interrupt_req(csr_regfile$RDY_timer_interrupt_req),
			    .RDY_software_interrupt_req(csr_regfile$RDY_software_interrupt_req),
			    .interrupt_pending(csr_regfile$interrupt_pending),
			    .wfi_resume(csr_regfile$wfi_resume));

  // submodule f_reset_reqs
  FIFO20 #(.guarded(32'd1)) f_reset_reqs(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_reqs$ENQ),
					 .DEQ(f_reset_reqs$DEQ),
					 .CLR(f_reset_reqs$CLR),
					 .FULL_N(f_reset_reqs$FULL_N),
					 .EMPTY_N(f_reset_reqs$EMPTY_N));

  // submodule f_reset_rsps
  FIFO20 #(.guarded(32'd1)) f_reset_rsps(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_rsps$ENQ),
					 .DEQ(f_reset_rsps$DEQ),
					 .CLR(f_reset_rsps$CLR),
					 .FULL_N(f_reset_rsps$FULL_N),
					 .EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule gpr_regfile
  mkGPR_RegFile gpr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .clear_quarter_mask(gpr_regfile$clear_quarter_mask),
			    .clear_quarter_qid(gpr_regfile$clear_quarter_qid),
			    .read_rs1_port2_rs1(gpr_regfile$read_rs1_port2_rs1),
			    .read_rs1_rs1(gpr_regfile$read_rs1_rs1),
			    .read_rs2_rs2(gpr_regfile$read_rs2_rs2),
			    .write_rd_int_rd(gpr_regfile$write_rd_int_rd),
			    .write_rd_int_rd_val(gpr_regfile$write_rd_int_rd_val),
			    .write_rd_rd(gpr_regfile$write_rd_rd),
			    .write_rd_rd_val(gpr_regfile$write_rd_rd_val),
			    .EN_server_reset_request_put(gpr_regfile$EN_server_reset_request_put),
			    .EN_server_reset_response_get(gpr_regfile$EN_server_reset_response_get),
			    .EN_write_rd(gpr_regfile$EN_write_rd),
			    .EN_write_rd_int(gpr_regfile$EN_write_rd_int),
			    .EN_clear_quarter(gpr_regfile$EN_clear_quarter),
			    .RDY_server_reset_request_put(gpr_regfile$RDY_server_reset_request_put),
			    .RDY_server_reset_response_get(gpr_regfile$RDY_server_reset_response_get),
			    .read_rs1(gpr_regfile$read_rs1),
			    .read_rs1_port2(),
			    .read_rs2(gpr_regfile$read_rs2),
			    .is_busy(gpr_regfile$is_busy));

  // submodule near_mem
  mkNear_Mem near_mem(.CLK(CLK),
		      .RST_N(RST_N),
		      .dmem_master_arready(near_mem$dmem_master_arready),
		      .dmem_master_awready(near_mem$dmem_master_awready),
		      .dmem_master_bresp(near_mem$dmem_master_bresp),
		      .dmem_master_bvalid(near_mem$dmem_master_bvalid),
		      .dmem_master_rdata(near_mem$dmem_master_rdata),
		      .dmem_master_rresp(near_mem$dmem_master_rresp),
		      .dmem_master_rvalid(near_mem$dmem_master_rvalid),
		      .dmem_master_wready(near_mem$dmem_master_wready),
		      .dmem_req_addr(near_mem$dmem_req_addr),
		      .dmem_req_f3(near_mem$dmem_req_f3),
		      .dmem_req_mstatus_MXR(near_mem$dmem_req_mstatus_MXR),
		      .dmem_req_op(near_mem$dmem_req_op),
		      .dmem_req_priv(near_mem$dmem_req_priv),
		      .dmem_req_satp(near_mem$dmem_req_satp),
		      .dmem_req_sstatus_SUM(near_mem$dmem_req_sstatus_SUM),
		      .dmem_req_store_value(near_mem$dmem_req_store_value),
		      .imem_master_arready(near_mem$imem_master_arready),
		      .imem_master_awready(near_mem$imem_master_awready),
		      .imem_master_bresp(near_mem$imem_master_bresp),
		      .imem_master_bvalid(near_mem$imem_master_bvalid),
		      .imem_master_rdata(near_mem$imem_master_rdata),
		      .imem_master_rresp(near_mem$imem_master_rresp),
		      .imem_master_rvalid(near_mem$imem_master_rvalid),
		      .imem_master_wready(near_mem$imem_master_wready),
		      .imem_req_addr(near_mem$imem_req_addr),
		      .imem_req_f3(near_mem$imem_req_f3),
		      .imem_req_mstatus_MXR(near_mem$imem_req_mstatus_MXR),
		      .imem_req_priv(near_mem$imem_req_priv),
		      .imem_req_satp(near_mem$imem_req_satp),
		      .imem_req_sstatus_SUM(near_mem$imem_req_sstatus_SUM),
		      .imem_req_trap(near_mem$imem_req_trap),
		      .near_mem_slave_araddr(near_mem$near_mem_slave_araddr),
		      .near_mem_slave_arprot(near_mem$near_mem_slave_arprot),
		      .near_mem_slave_arvalid(near_mem$near_mem_slave_arvalid),
		      .near_mem_slave_awaddr(near_mem$near_mem_slave_awaddr),
		      .near_mem_slave_awprot(near_mem$near_mem_slave_awprot),
		      .near_mem_slave_awvalid(near_mem$near_mem_slave_awvalid),
		      .near_mem_slave_bready(near_mem$near_mem_slave_bready),
		      .near_mem_slave_rready(near_mem$near_mem_slave_rready),
		      .near_mem_slave_wdata(near_mem$near_mem_slave_wdata),
		      .near_mem_slave_wstrb(near_mem$near_mem_slave_wstrb),
		      .near_mem_slave_wvalid(near_mem$near_mem_slave_wvalid),
		      .server_fence_request_put(near_mem$server_fence_request_put),
		      .EN_server_reset_request_put(near_mem$EN_server_reset_request_put),
		      .EN_server_reset_response_get(near_mem$EN_server_reset_response_get),
		      .EN_imem_req(near_mem$EN_imem_req),
		      .EN_dmem_req(near_mem$EN_dmem_req),
		      .EN_server_fence_i_request_put(near_mem$EN_server_fence_i_request_put),
		      .EN_server_fence_i_response_get(near_mem$EN_server_fence_i_response_get),
		      .EN_server_fence_request_put(near_mem$EN_server_fence_request_put),
		      .EN_server_fence_response_get(near_mem$EN_server_fence_response_get),
		      .EN_sfence_vma(near_mem$EN_sfence_vma),
		      .RDY_server_reset_request_put(near_mem$RDY_server_reset_request_put),
		      .RDY_server_reset_response_get(near_mem$RDY_server_reset_response_get),
		      .imem_valid(near_mem$imem_valid),
		      .imem_pc(near_mem$imem_pc),
		      .imem_instr(near_mem$imem_instr),
		      .imem_exc(near_mem$imem_exc),
		      .imem_exc_code(near_mem$imem_exc_code),
		      .imem_master_awvalid(near_mem$imem_master_awvalid),
		      .imem_master_awaddr(near_mem$imem_master_awaddr),
		      .imem_master_awprot(near_mem$imem_master_awprot),
		      .imem_master_wvalid(near_mem$imem_master_wvalid),
		      .imem_master_wdata(near_mem$imem_master_wdata),
		      .imem_master_wstrb(near_mem$imem_master_wstrb),
		      .imem_master_bready(near_mem$imem_master_bready),
		      .imem_master_arvalid(near_mem$imem_master_arvalid),
		      .imem_master_araddr(near_mem$imem_master_araddr),
		      .imem_master_arprot(near_mem$imem_master_arprot),
		      .imem_master_rready(near_mem$imem_master_rready),
		      .dmem_valid(near_mem$dmem_valid),
		      .dmem_word64(near_mem$dmem_word64),
		      .dmem_st_amo_val(),
		      .dmem_exc(near_mem$dmem_exc),
		      .dmem_exc_code(near_mem$dmem_exc_code),
		      .dmem_master_awvalid(near_mem$dmem_master_awvalid),
		      .dmem_master_awaddr(near_mem$dmem_master_awaddr),
		      .dmem_master_awprot(near_mem$dmem_master_awprot),
		      .dmem_master_wvalid(near_mem$dmem_master_wvalid),
		      .dmem_master_wdata(near_mem$dmem_master_wdata),
		      .dmem_master_wstrb(near_mem$dmem_master_wstrb),
		      .dmem_master_bready(near_mem$dmem_master_bready),
		      .dmem_master_arvalid(near_mem$dmem_master_arvalid),
		      .dmem_master_araddr(near_mem$dmem_master_araddr),
		      .dmem_master_arprot(near_mem$dmem_master_arprot),
		      .dmem_master_rready(near_mem$dmem_master_rready),
		      .RDY_server_fence_i_request_put(near_mem$RDY_server_fence_i_request_put),
		      .RDY_server_fence_i_response_get(near_mem$RDY_server_fence_i_response_get),
		      .RDY_server_fence_request_put(near_mem$RDY_server_fence_request_put),
		      .RDY_server_fence_response_get(near_mem$RDY_server_fence_response_get),
		      .RDY_sfence_vma(),
		      .near_mem_slave_awready(near_mem$near_mem_slave_awready),
		      .near_mem_slave_wready(near_mem$near_mem_slave_wready),
		      .near_mem_slave_bvalid(near_mem$near_mem_slave_bvalid),
		      .near_mem_slave_bresp(near_mem$near_mem_slave_bresp),
		      .near_mem_slave_arready(near_mem$near_mem_slave_arready),
		      .near_mem_slave_rvalid(near_mem$near_mem_slave_rvalid),
		      .near_mem_slave_rresp(near_mem$near_mem_slave_rresp),
		      .near_mem_slave_rdata(near_mem$near_mem_slave_rdata));

  // submodule stage1_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage1_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage1_f_reset_reqs$ENQ),
						.DEQ(stage1_f_reset_reqs$DEQ),
						.CLR(stage1_f_reset_reqs$CLR),
						.FULL_N(stage1_f_reset_reqs$FULL_N),
						.EMPTY_N(stage1_f_reset_reqs$EMPTY_N));

  // submodule stage1_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage1_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage1_f_reset_rsps$ENQ),
						.DEQ(stage1_f_reset_rsps$DEQ),
						.CLR(stage1_f_reset_rsps$CLR),
						.FULL_N(stage1_f_reset_rsps$FULL_N),
						.EMPTY_N(stage1_f_reset_rsps$EMPTY_N));

  // submodule stage2_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage2_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage2_f_reset_reqs$ENQ),
						.DEQ(stage2_f_reset_reqs$DEQ),
						.CLR(stage2_f_reset_reqs$CLR),
						.FULL_N(stage2_f_reset_reqs$FULL_N),
						.EMPTY_N(stage2_f_reset_reqs$EMPTY_N));

  // submodule stage2_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage2_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage2_f_reset_rsps$ENQ),
						.DEQ(stage2_f_reset_rsps$DEQ),
						.CLR(stage2_f_reset_rsps$CLR),
						.FULL_N(stage2_f_reset_rsps$FULL_N),
						.EMPTY_N(stage2_f_reset_rsps$EMPTY_N));

  // submodule stage3_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage3_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage3_f_reset_reqs$ENQ),
						.DEQ(stage3_f_reset_reqs$DEQ),
						.CLR(stage3_f_reset_reqs$CLR),
						.FULL_N(stage3_f_reset_reqs$FULL_N),
						.EMPTY_N(stage3_f_reset_reqs$EMPTY_N));

  // submodule stage3_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage3_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage3_f_reset_rsps$ENQ),
						.DEQ(stage3_f_reset_rsps$DEQ),
						.CLR(stage3_f_reset_rsps$CLR),
						.FULL_N(stage3_f_reset_rsps$FULL_N),
						.EMPTY_N(stage3_f_reset_rsps$EMPTY_N));

  // rule RL_rl_show_pipe
  assign CAN_FIRE_RL_rl_show_pipe =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     rg_state != 3'd0 &&
	     rg_state != 3'd1 &&
	     rg_state != 3'd7 ;
  assign WILL_FIRE_RL_rl_show_pipe = CAN_FIRE_RL_rl_show_pipe ;

  // rule RL_rl_reset_complete
  assign CAN_FIRE_RL_rl_reset_complete =
	     gpr_regfile_RDY_server_reset_response_get__825_ETC___d2837 &&
	     rg_state == 3'd1 ;
  assign WILL_FIRE_RL_rl_reset_complete = CAN_FIRE_RL_rl_reset_complete ;

  // rule RL_rl_pipe
  assign CAN_FIRE_RL_rl_pipe =
	     rg_state_7_EQ_2_842_AND_stage1_rg_full_16_OR_N_ETC___d2945 &&
	     !gpr_regfile$is_busy ;
  assign WILL_FIRE_RL_rl_pipe = CAN_FIRE_RL_rl_pipe ;

  // rule RL_rl_stage1_restart_after_csrrx
  assign CAN_FIRE_RL_rl_stage1_restart_after_csrrx = rg_state == 3'd3 ;
  assign WILL_FIRE_RL_rl_stage1_restart_after_csrrx =
	     CAN_FIRE_RL_rl_stage1_restart_after_csrrx ;

  // rule RL_rl_stage2_nonpipe
  assign CAN_FIRE_RL_rl_stage2_nonpipe =
	     rg_state == 3'd2 && !stage3_rg_full &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd3 ;
  assign WILL_FIRE_RL_rl_stage2_nonpipe = CAN_FIRE_RL_rl_stage2_nonpipe ;

  // rule RL_rl_stage1_xRET
  assign CAN_FIRE_RL_rl_stage1_xRET =
	     rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3086 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599 &&
	     (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	      4'd5 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	      4'd6 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	      4'd7) ;
  assign WILL_FIRE_RL_rl_stage1_xRET = CAN_FIRE_RL_rl_stage1_xRET ;

  // rule RL_rl_stage1_FENCE_I
  assign CAN_FIRE_RL_rl_stage1_FENCE_I =
	     near_mem$RDY_server_fence_i_request_put &&
	     rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3099 ;
  assign WILL_FIRE_RL_rl_stage1_FENCE_I = CAN_FIRE_RL_rl_stage1_FENCE_I ;

  // rule RL_rl_finish_FENCE_I
  assign CAN_FIRE_RL_rl_finish_FENCE_I =
	     near_mem$RDY_server_fence_i_response_get && rg_state == 3'd4 ;
  assign WILL_FIRE_RL_rl_finish_FENCE_I = CAN_FIRE_RL_rl_finish_FENCE_I ;

  // rule RL_rl_stage1_FENCE
  assign CAN_FIRE_RL_rl_stage1_FENCE =
	     near_mem$RDY_server_fence_request_put &&
	     rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3105 ;
  assign WILL_FIRE_RL_rl_stage1_FENCE = CAN_FIRE_RL_rl_stage1_FENCE ;

  // rule RL_rl_finish_FENCE
  assign CAN_FIRE_RL_rl_finish_FENCE =
	     near_mem$RDY_server_fence_response_get && rg_state == 3'd5 ;
  assign WILL_FIRE_RL_rl_finish_FENCE = CAN_FIRE_RL_rl_finish_FENCE ;

  // rule RL_rl_stage1_SFENCE_VMA
  assign CAN_FIRE_RL_rl_stage1_SFENCE_VMA =
	     rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3086 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd4 ;
  assign WILL_FIRE_RL_rl_stage1_SFENCE_VMA =
	     CAN_FIRE_RL_rl_stage1_SFENCE_VMA ;

  // rule RL_rl_finish_SFENCE_VMA
  assign CAN_FIRE_RL_rl_finish_SFENCE_VMA = rg_state == 3'd6 ;
  assign WILL_FIRE_RL_rl_finish_SFENCE_VMA =
	     CAN_FIRE_RL_rl_finish_SFENCE_VMA ;

  // rule RL_rl_stage1_WFI
  assign CAN_FIRE_RL_rl_stage1_WFI =
	     rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3086 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd8 ;
  assign WILL_FIRE_RL_rl_stage1_WFI = CAN_FIRE_RL_rl_stage1_WFI ;

  // rule RL_rl_WFI_resume
  assign CAN_FIRE_RL_rl_WFI_resume =
	     rg_state == 3'd7 && csr_regfile$wfi_resume ;
  assign WILL_FIRE_RL_rl_WFI_resume = CAN_FIRE_RL_rl_WFI_resume ;

  // rule RL_rl_reset_from_WFI
  assign CAN_FIRE_RL_rl_reset_from_WFI =
	     rg_state == 3'd7 && f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_from_WFI =
	     CAN_FIRE_RL_rl_reset_from_WFI && !WILL_FIRE_RL_rl_WFI_resume ;

  // rule RL_rl_stage1_trap
  assign CAN_FIRE_RL_rl_stage1_trap =
	     rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3086 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd9 ;
  assign WILL_FIRE_RL_rl_stage1_trap =
	     CAN_FIRE_RL_rl_stage1_trap && !WILL_FIRE_RL_rl_pipe ;

  // rule RL_rl_stage1_interrupt
  assign CAN_FIRE_RL_rl_stage1_interrupt =
	     csr_regfile$interrupt_pending[5] &&
	     rg_state_7_EQ_2_842_AND_stage1_rg_full_16_AND__ETC___d3136 ;
  assign WILL_FIRE_RL_rl_stage1_interrupt =
	     CAN_FIRE_RL_rl_stage1_interrupt && !WILL_FIRE_RL_rl_pipe ;

  // rule RL_rl_reset_start
  assign CAN_FIRE_RL_rl_reset_start =
	     gpr_regfile$RDY_server_reset_request_put &&
	     near_mem$RDY_server_reset_request_put &&
	     csr_regfile$RDY_server_reset_request_put &&
	     stage1_f_reset_reqs$FULL_N &&
	     stage2_f_reset_reqs$FULL_N &&
	     stage3_f_reset_reqs$FULL_N &&
	     rg_state == 3'd0 ;
  assign WILL_FIRE_RL_rl_reset_start = CAN_FIRE_RL_rl_reset_start ;

  // rule RL_stage3_rl_reset
  assign CAN_FIRE_RL_stage3_rl_reset =
	     stage3_f_reset_reqs$EMPTY_N && stage3_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage3_rl_reset = CAN_FIRE_RL_stage3_rl_reset ;

  // rule RL_stage2_rl_reset
  assign CAN_FIRE_RL_stage2_rl_reset =
	     stage2_f_reset_reqs$EMPTY_N && stage2_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage2_rl_reset = CAN_FIRE_RL_stage2_rl_reset ;

  // rule RL_stage1_rl_reset
  assign CAN_FIRE_RL_stage1_rl_reset =
	     stage1_f_reset_reqs$EMPTY_N && stage1_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage1_rl_reset = CAN_FIRE_RL_stage1_rl_reset ;

  // inputs to muxes for submodule ports
  assign MUX_near_mem$imem_req_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3052 ;
  assign MUX_near_mem$imem_req_1__SEL_3 =
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ;
  assign MUX_near_mem$imem_req_1__SEL_4 =
	     WILL_FIRE_RL_rl_stage1_trap || WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_cur_priv$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_inum$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ;
  assign MUX_rg_inum$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_stage1_trap || WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_state$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3043 ;
  assign MUX_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ;
  assign MUX_rg_inum$write_1__VAL_1 = rg_inum + 64'd1 ;
  assign MUX_stage1_rg_full$write_1__VAL_11 =
	     (!rg_halt && !csr_regfile$interrupt_pending[5] &&
	      (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3045 ||
	       !stage1_rg_full)) ?
	       NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d3068 :
	       rg_halt_931_OR_csr_regfile_interrupt_pending_r_ETC___d3074 &&
	       stage1_rg_full ;
  assign MUX_stage2_rg_full$write_1__VAL_3 =
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3057 ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd2 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ;

  // register cfg_logdelay
  assign cfg_logdelay$D_IN = 64'h0 ;
  assign cfg_logdelay$EN = 1'b0 ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN =
	     TASK_testplusargs___d2819 ?
	       4'd2 :
	       (TASK_testplusargs___d2820 ? 4'd1 : 4'd0) ;
  assign cfg_verbosity$EN = CAN_FIRE_RL_rl_reset_start ;

  // register rg_cur_priv
  always@(MUX_rg_cur_priv$write_1__SEL_1 or
	  csr_regfile$csr_trap_actions or
	  WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or WILL_FIRE_RL_rl_reset_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_cur_priv$write_1__SEL_1:
	  rg_cur_priv$D_IN = csr_regfile$csr_trap_actions[1:0];
      WILL_FIRE_RL_rl_stage1_xRET:
	  rg_cur_priv$D_IN = csr_regfile$csr_ret_actions[65:64];
      WILL_FIRE_RL_rl_reset_start: rg_cur_priv$D_IN = 2'b11;
      default: rg_cur_priv$D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign rg_cur_priv$EN =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_halt
  assign rg_halt$D_IN = 1'd0 ;
  assign rg_halt$EN = CAN_FIRE_RL_rl_reset_start ;

  // register rg_inum
  always@(MUX_rg_inum$write_1__SEL_1 or
	  MUX_rg_inum$write_1__VAL_1 or
	  MUX_rg_inum$write_1__SEL_2 or WILL_FIRE_RL_rl_reset_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_inum$write_1__SEL_1: rg_inum$D_IN = MUX_rg_inum$write_1__VAL_1;
      MUX_rg_inum$write_1__SEL_2: rg_inum$D_IN = MUX_rg_inum$write_1__VAL_1;
      WILL_FIRE_RL_rl_reset_start: rg_inum$D_IN = 64'd1;
      default: rg_inum$D_IN = 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rg_inum$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_start_CPI_cycles
  assign rg_start_CPI_cycles$D_IN = csr_regfile$read_csr_mcycle ;
  assign rg_start_CPI_cycles$EN = CAN_FIRE_RL_rl_reset_complete ;

  // register rg_start_CPI_instrs
  assign rg_start_CPI_instrs$D_IN = csr_regfile$read_csr_minstret ;
  assign rg_start_CPI_instrs$EN = CAN_FIRE_RL_rl_reset_complete ;

  // register rg_state
  always@(MUX_rg_state$write_1__SEL_1 or
	  WILL_FIRE_RL_rl_reset_from_WFI or
	  WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_state$write_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_FENCE_I or
	  WILL_FIRE_RL_rl_stage1_FENCE or
	  WILL_FIRE_RL_rl_stage1_SFENCE_VMA or WILL_FIRE_RL_rl_stage1_WFI)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_state$write_1__SEL_1: rg_state$D_IN = 3'd3;
      WILL_FIRE_RL_rl_reset_from_WFI: rg_state$D_IN = 3'd0;
      WILL_FIRE_RL_rl_reset_start: rg_state$D_IN = 3'd1;
      MUX_rg_state$write_1__SEL_4: rg_state$D_IN = 3'd2;
      WILL_FIRE_RL_rl_stage1_FENCE_I: rg_state$D_IN = 3'd4;
      WILL_FIRE_RL_rl_stage1_FENCE: rg_state$D_IN = 3'd5;
      WILL_FIRE_RL_rl_stage1_SFENCE_VMA: rg_state$D_IN = 3'd6;
      WILL_FIRE_RL_rl_stage1_WFI: rg_state$D_IN = 3'd7;
      default: rg_state$D_IN = 3'b010 /* unspecified value */ ;
    endcase
  end
  assign rg_state$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3043 ||
	     WILL_FIRE_RL_rl_reset_from_WFI ||
	     WILL_FIRE_RL_rl_reset_start ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ||
	     WILL_FIRE_RL_rl_stage1_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_FENCE ||
	     WILL_FIRE_RL_rl_stage1_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_stage1_WFI ;

  // register stage1_rg_ddc
  assign stage1_rg_ddc$D_IN =
	     { alu_outputs_val2_tag__h69810,
	       alu_outputs_val2_capability__h69811 } ;
  assign stage1_rg_ddc$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991 &&
	     near_mem$imem_instr[6:0] == 7'b1011011 &&
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d3003 &&
	     alu_outputs_addr_capability__h62851[4:0] == 5'd1 ;

  // register stage1_rg_full
  always@(WILL_FIRE_RL_stage1_rl_reset or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  WILL_FIRE_RL_rl_stage1_trap or
	  WILL_FIRE_RL_rl_WFI_resume or
	  WILL_FIRE_RL_rl_finish_SFENCE_VMA or
	  WILL_FIRE_RL_rl_finish_FENCE or
	  WILL_FIRE_RL_rl_finish_FENCE_I or
	  WILL_FIRE_RL_rl_stage1_xRET or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  WILL_FIRE_RL_rl_stage1_restart_after_csrrx or
	  WILL_FIRE_RL_rl_pipe or
	  MUX_stage1_rg_full$write_1__VAL_11 or
	  WILL_FIRE_RL_rl_reset_complete)
  case (1'b1)
    WILL_FIRE_RL_stage1_rl_reset: stage1_rg_full$D_IN = 1'd0;
    WILL_FIRE_RL_rl_stage1_interrupt || WILL_FIRE_RL_rl_stage1_trap ||
    WILL_FIRE_RL_rl_WFI_resume ||
    WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
    WILL_FIRE_RL_rl_finish_FENCE ||
    WILL_FIRE_RL_rl_finish_FENCE_I ||
    WILL_FIRE_RL_rl_stage1_xRET ||
    WILL_FIRE_RL_rl_stage2_nonpipe ||
    WILL_FIRE_RL_rl_stage1_restart_after_csrrx:
	stage1_rg_full$D_IN = 1'd1;
    WILL_FIRE_RL_rl_pipe:
	stage1_rg_full$D_IN = MUX_stage1_rg_full$write_1__VAL_11;
    WILL_FIRE_RL_rl_reset_complete: stage1_rg_full$D_IN = 1'd1;
    default: stage1_rg_full$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign stage1_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_stage1_rl_reset ||
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ;

  // register stage1_rg_run_state
  assign stage1_rg_run_state$D_IN = 1'd1 ;
  assign stage1_rg_run_state$EN = CAN_FIRE_RL_stage1_rl_reset ;

  // register stage2_rg_f5
  assign stage2_rg_f5$D_IN = 5'h0 ;
  assign stage2_rg_f5$EN = 1'b0 ;

  // register stage2_rg_full
  assign stage2_rg_full$D_IN =
	     !WILL_FIRE_RL_stage2_rl_reset &&
	     !WILL_FIRE_RL_rl_stage2_nonpipe &&
	     MUX_stage2_rg_full$write_1__VAL_3 ;
  assign stage2_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_stage2_rl_reset ;

  // register stage2_rg_run_state
  assign stage2_rg_run_state$D_IN = 1'd1 ;
  assign stage2_rg_run_state$EN = CAN_FIRE_RL_stage2_rl_reset ;

  // register stage2_rg_stage2
  assign stage2_rg_stage2$D_IN =
	     { rg_cur_priv,
	       near_mem$imem_pc,
	       near_mem$imem_instr,
	       near_mem$imem_instr[6:0],
	       near_mem$imem_instr[11:7],
	       near_mem$imem_instr[19:15],
	       decoded_instr_rs2__h5316,
	       near_mem$imem_instr[31:27],
	       near_mem$imem_instr[31:20],
	       near_mem$imem_instr[14:12],
	       near_mem$imem_instr[31:27],
	       near_mem$imem_instr[31:25],
	       funct10__h6030,
	       near_mem$imem_instr[31:20],
	       near_mem$imem_instr[31:25],
	       near_mem$imem_instr[11:7],
	       near_mem$imem_instr[31],
	       near_mem$imem_instr[7],
	       near_mem$imem_instr[30:25],
	       near_mem$imem_instr[11:8],
	       1'b0,
	       near_mem$imem_instr[31:12],
	       near_mem$imem_instr[31],
	       near_mem$imem_instr[19:12],
	       near_mem$imem_instr[20],
	       near_mem$imem_instr[30:21],
	       1'b0,
	       near_mem$imem_instr[27:20],
	       near_mem$imem_instr[26:25],
	       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998,
	       fv_out_data_to_stage2_rd__h5766,
	       near_mem$imem_instr[6:0] == 7'b1110011 &&
	       near_mem$imem_instr[14:12] != 3'b0 &&
	       near_mem$imem_instr[14:12] != 3'b100 &&
	       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2056,
	       near_mem$imem_instr[6:0] == 7'b1011011 &&
	       near_mem$imem_instr[14:12] == 3'b0 &&
	       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d3003,
	       alu_outputs_addr_tag__h62850,
	       alu_outputs_addr_capability__h62851,
	       near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2462,
	       alu_outputs_val2_tag__h69810,
	       alu_outputs_val2_capability__h69811 } ;
  assign stage2_rg_stage2$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991 ;

  // register stage3_rg_full
  assign stage3_rg_full$D_IN =
	     !WILL_FIRE_RL_stage3_rl_reset &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ;
  assign stage3_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_stage3_rl_reset ;

  // register stage3_rg_run_state
  assign stage3_rg_run_state$D_IN = 1'd1 ;
  assign stage3_rg_run_state$EN = CAN_FIRE_RL_stage3_rl_reset ;

  // register stage3_rg_stage3
  assign stage3_rg_stage3$D_IN =
	     { stage2_rg_stage2[644:549],
	       stage2_rg_stage2[646:645],
	       stage2_rg_stage2[396:394] != 3'd3 &&
	       (stage2_rg_stage2[396:394] == 3'd0 ||
		near_mem$dmem_valid && !near_mem$dmem_exc),
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2[388],
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186,
	       stage2_rg_stage2[128:0] } ;
  assign stage3_rg_stage3$EN = MUX_rg_inum$write_1__SEL_1 ;

  // submodule csr_regfile
  assign csr_regfile$csr_counter_read_fault_csr_addr =
	     near_mem$imem_instr[31:20] ;
  assign csr_regfile$csr_counter_read_fault_priv = rg_cur_priv ;
  always@(IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897)
  begin
    case (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897)
      4'd5: csr_regfile$csr_ret_actions_from_priv = 2'b11;
      4'd6: csr_regfile$csr_ret_actions_from_priv = 2'b01;
      default: csr_regfile$csr_ret_actions_from_priv = 2'b0;
    endcase
  end
  always@(WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$interrupt_pending or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  near_mem$dmem_exc_code or
	  WILL_FIRE_RL_rl_stage1_trap or fv_out_trap_info_exc_code__h62452)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_interrupt:
	  csr_regfile$csr_trap_actions_exc_code =
	      csr_regfile$interrupt_pending[4:0];
      WILL_FIRE_RL_rl_stage2_nonpipe:
	  csr_regfile$csr_trap_actions_exc_code = near_mem$dmem_exc_code;
      WILL_FIRE_RL_rl_stage1_trap:
	  csr_regfile$csr_trap_actions_exc_code =
	      fv_out_trap_info_exc_code__h62452;
      default: csr_regfile$csr_trap_actions_exc_code =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign csr_regfile$csr_trap_actions_from_priv = rg_cur_priv ;
  assign csr_regfile$csr_trap_actions_interrupt =
	     !WILL_FIRE_RL_rl_stage2_nonpipe && !WILL_FIRE_RL_rl_stage1_trap ;
  assign csr_regfile$csr_trap_actions_pc =
	     WILL_FIRE_RL_rl_stage2_nonpipe ?
	       stage2_rg_stage2[644:581] :
	       near_mem$imem_pc ;
  always@(WILL_FIRE_RL_rl_stage1_interrupt or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  stage2_rg_stage2 or WILL_FIRE_RL_rl_stage1_trap or value__h62699)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_interrupt:
	  csr_regfile$csr_trap_actions_xtval = 64'd0;
      WILL_FIRE_RL_rl_stage2_nonpipe:
	  csr_regfile$csr_trap_actions_xtval = stage2_rg_stage2[321:258];
      WILL_FIRE_RL_rl_stage1_trap:
	  csr_regfile$csr_trap_actions_xtval = value__h62699;
      default: csr_regfile$csr_trap_actions_xtval =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign csr_regfile$external_interrupt_req_set_not_clear =
	     external_interrupt_req_set_not_clear ;
  assign csr_regfile$interrupt_pending_cur_priv = rg_cur_priv ;
  assign csr_regfile$mav_read_csr_csr_addr = 12'h0 ;
  assign csr_regfile$read_csr_cap_csr_addr = decoded_instr_rs2__h5316 ;
  assign csr_regfile$read_csr_csr_addr = near_mem$imem_instr[31:20] ;
  assign csr_regfile$read_csr_port2_csr_addr = 12'h0 ;
  assign csr_regfile$software_interrupt_req_set_not_clear =
	     software_interrupt_req_set_not_clear ;
  assign csr_regfile$timer_interrupt_req_set_not_clear =
	     timer_interrupt_req_set_not_clear ;
  assign csr_regfile$write_csr_cap_cap_addr =
	     alu_outputs_addr_capability__h62851[4:0] ;
  assign csr_regfile$write_csr_cap_value =
	     { alu_outputs_val2_tag__h69810,
	       alu_outputs_val2_capability__h69811 } ;
  assign csr_regfile$write_csr_csr_addr =
	     alu_outputs_addr_capability__h62851[11:0] ;
  assign csr_regfile$write_csr_word =
	     alu_outputs_val2_capability__h69811[63:0] ;
  assign csr_regfile$EN_server_reset_request_put =
	     CAN_FIRE_RL_rl_reset_start ;
  assign csr_regfile$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign csr_regfile$EN_mav_read_csr = 1'b0 ;
  assign csr_regfile$EN_write_csr_cap =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991 &&
	     near_mem$imem_instr[6:0] == 7'b1011011 &&
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d3003 &&
	     alu_outputs_addr_capability__h62851[4:0] != 5'd1 ;
  assign csr_regfile$EN_write_csr =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991 &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2056 ;
  assign csr_regfile$EN_csr_trap_actions =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_trap ;
  assign csr_regfile$EN_csr_ret_actions = CAN_FIRE_RL_rl_stage1_xRET ;
  assign csr_regfile$EN_csr_minstret_incr =
	     WILL_FIRE_RL_rl_pipe && stage3_rg_full &&
	     (!stage3_rg_stage3[270] ||
	      stage3_rg_stage3[269:258] != 12'hB02 &&
	      stage3_rg_stage3[269:258] != 12'hB82) ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign csr_regfile$EN_external_interrupt_req = EN_external_interrupt_req ;
  assign csr_regfile$EN_timer_interrupt_req = EN_timer_interrupt_req ;
  assign csr_regfile$EN_software_interrupt_req = EN_software_interrupt_req ;

  // submodule f_reset_reqs
  assign f_reset_reqs$ENQ = EN_hart0_server_reset_request_put ;
  assign f_reset_reqs$DEQ = 1'b0 ;
  assign f_reset_reqs$CLR = 1'b0 ;

  // submodule f_reset_rsps
  assign f_reset_rsps$ENQ = CAN_FIRE_RL_rl_reset_complete ;
  assign f_reset_rsps$DEQ = EN_hart0_server_reset_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule gpr_regfile
  assign gpr_regfile$clear_quarter_mask = 8'h0 ;
  assign gpr_regfile$clear_quarter_qid = 2'h0 ;
  assign gpr_regfile$read_rs1_port2_rs1 = 5'h0 ;
  assign gpr_regfile$read_rs1_rs1 = near_mem$imem_instr[19:15] ;
  assign gpr_regfile$read_rs2_rs2 = decoded_instr_rs2__h5316 ;
  assign gpr_regfile$write_rd_int_rd = 5'h0 ;
  assign gpr_regfile$write_rd_int_rd_val = 64'h0 ;
  assign gpr_regfile$write_rd_rd = stage3_rg_stage3[275:271] ;
  assign gpr_regfile$write_rd_rd_val = stage3_rg_stage3[257:129] ;
  assign gpr_regfile$EN_server_reset_request_put =
	     CAN_FIRE_RL_rl_reset_start ;
  assign gpr_regfile$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign gpr_regfile$EN_write_rd =
	     WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[276] ;
  assign gpr_regfile$EN_write_rd_int = 1'b0 ;
  assign gpr_regfile$EN_clear_quarter = 1'b0 ;

  // submodule near_mem
  assign near_mem$dmem_master_arready = dmem_master_arready ;
  assign near_mem$dmem_master_awready = dmem_master_awready ;
  assign near_mem$dmem_master_bresp = dmem_master_bresp ;
  assign near_mem$dmem_master_bvalid = dmem_master_bvalid ;
  assign near_mem$dmem_master_rdata = dmem_master_rdata ;
  assign near_mem$dmem_master_rresp = dmem_master_rresp ;
  assign near_mem$dmem_master_rvalid = dmem_master_rvalid ;
  assign near_mem$dmem_master_wready = dmem_master_wready ;
  assign near_mem$dmem_req_addr = alu_outputs_addr_capability__h62851[63:0] ;
  assign near_mem$dmem_req_f3 = near_mem$imem_instr[14:12] ;
  assign near_mem$dmem_req_mstatus_MXR = csr_regfile$read_mstatus[19] ;
  assign near_mem$dmem_req_op =
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 !=
	     3'd1 ;
  assign near_mem$dmem_req_priv =
	     csr_regfile$read_mstatus[17] ?
	       csr_regfile$read_mstatus[12:11] :
	       rg_cur_priv ;
  assign near_mem$dmem_req_satp = csr_regfile$read_satp ;
  assign near_mem$dmem_req_sstatus_SUM = csr_regfile$read_sstatus[18] ;
  assign near_mem$dmem_req_store_value =
	     alu_outputs_val2_capability__h69811[63:0] ;
  assign near_mem$imem_master_arready = imem_master_arready ;
  assign near_mem$imem_master_awready = imem_master_awready ;
  assign near_mem$imem_master_bresp = imem_master_bresp ;
  assign near_mem$imem_master_bvalid = imem_master_bvalid ;
  assign near_mem$imem_master_rdata = imem_master_rdata ;
  assign near_mem$imem_master_rresp = imem_master_rresp ;
  assign near_mem$imem_master_rvalid = imem_master_rvalid ;
  assign near_mem$imem_master_wready = imem_master_wready ;
  always@(WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or
	  MUX_near_mem$imem_req_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$csr_trap_actions or
	  WILL_FIRE_RL_rl_reset_complete or
	  pc_reset_value or
	  MUX_near_mem$imem_req_1__SEL_1 or
	  fv_out_next_pc__h5702 or MUX_near_mem$imem_req_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_xRET:
	  near_mem$imem_req_addr = csr_regfile$csr_ret_actions[129:66];
      MUX_near_mem$imem_req_1__SEL_4 || WILL_FIRE_RL_rl_stage1_interrupt:
	  near_mem$imem_req_addr = csr_regfile$csr_trap_actions[193:130];
      WILL_FIRE_RL_rl_reset_complete: near_mem$imem_req_addr = pc_reset_value;
      MUX_near_mem$imem_req_1__SEL_1:
	  near_mem$imem_req_addr = fv_out_next_pc__h5702;
      MUX_near_mem$imem_req_1__SEL_3:
	  near_mem$imem_req_addr = fv_out_next_pc__h5702;
      default: near_mem$imem_req_addr =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign near_mem$imem_req_f3 = 3'b010 ;
  assign near_mem$imem_req_mstatus_MXR =
	     (MUX_near_mem$imem_req_1__SEL_1 ||
	      WILL_FIRE_RL_rl_reset_complete ||
	      MUX_near_mem$imem_req_1__SEL_3 ||
	      MUX_near_mem$imem_req_1__SEL_4 ||
	      WILL_FIRE_RL_rl_stage1_xRET) ?
	       csr_regfile$read_mstatus[19] :
	       csr_regfile$csr_trap_actions[85] ;
  always@(WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or
	  MUX_near_mem$imem_req_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$csr_trap_actions or
	  MUX_near_mem$imem_req_1__SEL_1 or
	  WILL_FIRE_RL_rl_reset_complete or
	  MUX_near_mem$imem_req_1__SEL_3 or rg_cur_priv)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_xRET:
	  near_mem$imem_req_priv = csr_regfile$csr_ret_actions[65:64];
      MUX_near_mem$imem_req_1__SEL_4 || WILL_FIRE_RL_rl_stage1_interrupt:
	  near_mem$imem_req_priv = csr_regfile$csr_trap_actions[1:0];
      MUX_near_mem$imem_req_1__SEL_1 || WILL_FIRE_RL_rl_reset_complete ||
      MUX_near_mem$imem_req_1__SEL_3:
	  near_mem$imem_req_priv = rg_cur_priv;
      default: near_mem$imem_req_priv = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign near_mem$imem_req_satp = csr_regfile$read_satp ;
  assign near_mem$imem_req_sstatus_SUM =
	     (MUX_near_mem$imem_req_1__SEL_1 ||
	      WILL_FIRE_RL_rl_reset_complete ||
	      MUX_near_mem$imem_req_1__SEL_3 ||
	      MUX_near_mem$imem_req_1__SEL_4 ||
	      WILL_FIRE_RL_rl_stage1_xRET) ?
	       csr_regfile$read_sstatus[18] :
	       csr_regfile$csr_trap_actions[84] ;
  assign near_mem$imem_req_trap = !MUX_near_mem$imem_req_1__SEL_1 ;
  assign near_mem$near_mem_slave_araddr = near_mem_slave_araddr ;
  assign near_mem$near_mem_slave_arprot = near_mem_slave_arprot ;
  assign near_mem$near_mem_slave_arvalid = near_mem_slave_arvalid ;
  assign near_mem$near_mem_slave_awaddr = near_mem_slave_awaddr ;
  assign near_mem$near_mem_slave_awprot = near_mem_slave_awprot ;
  assign near_mem$near_mem_slave_awvalid = near_mem_slave_awvalid ;
  assign near_mem$near_mem_slave_bready = near_mem_slave_bready ;
  assign near_mem$near_mem_slave_rready = near_mem_slave_rready ;
  assign near_mem$near_mem_slave_wdata = near_mem_slave_wdata ;
  assign near_mem$near_mem_slave_wstrb = near_mem_slave_wstrb ;
  assign near_mem$near_mem_slave_wvalid = near_mem_slave_wvalid ;
  assign near_mem$server_fence_request_put =
	     8'b10101010 /* unspecified value */  ;
  assign near_mem$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_start ;
  assign near_mem$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign near_mem$EN_imem_req =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3052 ||
	     WILL_FIRE_RL_rl_reset_complete ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_xRET ;
  assign near_mem$EN_dmem_req =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991 &&
	     (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 ==
	      3'd1 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 ==
	      3'd2) ;
  assign near_mem$EN_server_fence_i_request_put =
	     CAN_FIRE_RL_rl_stage1_FENCE_I ;
  assign near_mem$EN_server_fence_i_response_get =
	     CAN_FIRE_RL_rl_finish_FENCE_I ;
  assign near_mem$EN_server_fence_request_put = CAN_FIRE_RL_rl_stage1_FENCE ;
  assign near_mem$EN_server_fence_response_get = CAN_FIRE_RL_rl_finish_FENCE ;
  assign near_mem$EN_sfence_vma = CAN_FIRE_RL_rl_stage1_SFENCE_VMA ;

  // submodule stage1_f_reset_reqs
  assign stage1_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage1_f_reset_reqs$DEQ = CAN_FIRE_RL_stage1_rl_reset ;
  assign stage1_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage1_f_reset_rsps
  assign stage1_f_reset_rsps$ENQ = CAN_FIRE_RL_stage1_rl_reset ;
  assign stage1_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage1_f_reset_rsps$CLR = 1'b0 ;

  // submodule stage2_f_reset_reqs
  assign stage2_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage2_f_reset_reqs$DEQ = CAN_FIRE_RL_stage2_rl_reset ;
  assign stage2_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage2_f_reset_rsps
  assign stage2_f_reset_rsps$ENQ = CAN_FIRE_RL_stage2_rl_reset ;
  assign stage2_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage2_f_reset_rsps$CLR = 1'b0 ;

  // submodule stage3_f_reset_reqs
  assign stage3_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage3_f_reset_reqs$DEQ = CAN_FIRE_RL_stage3_rl_reset ;
  assign stage3_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage3_f_reset_rsps
  assign stage3_f_reset_rsps$ENQ = CAN_FIRE_RL_stage3_rl_reset ;
  assign stage3_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage3_f_reset_rsps$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1215 =
	     rs2_val_bypassed_capability__h31293[62] ?
	       7'd1 :
	       (rs2_val_bypassed_capability__h31293[61] ?
		  7'd2 :
		  (rs2_val_bypassed_capability__h31293[60] ?
		     7'd3 :
		     (rs2_val_bypassed_capability__h31293[59] ?
			7'd4 :
			(rs2_val_bypassed_capability__h31293[58] ?
			   7'd5 :
			   (rs2_val_bypassed_capability__h31293[57] ?
			      7'd6 :
			      (rs2_val_bypassed_capability__h31293[56] ?
				 7'd7 :
				 (rs2_val_bypassed_capability__h31293[55] ?
				    7'd8 :
				    (rs2_val_bypassed_capability__h31293[54] ?
				       7'd9 :
				       (rs2_val_bypassed_capability__h31293[53] ?
					  7'd10 :
					  (rs2_val_bypassed_capability__h31293[52] ?
					     7'd11 :
					     (rs2_val_bypassed_capability__h31293[51] ?
						7'd12 :
						(rs2_val_bypassed_capability__h31293[50] ?
						   7'd13 :
						   (rs2_val_bypassed_capability__h31293[49] ?
						      7'd14 :
						      (rs2_val_bypassed_capability__h31293[48] ?
							 7'd15 :
							 (rs2_val_bypassed_capability__h31293[47] ?
							    7'd16 :
							    (rs2_val_bypassed_capability__h31293[46] ?
							       7'd17 :
							       (rs2_val_bypassed_capability__h31293[45] ?
								  7'd18 :
								  (rs2_val_bypassed_capability__h31293[44] ?
								     7'd19 :
								     (rs2_val_bypassed_capability__h31293[43] ?
									7'd20 :
									(rs2_val_bypassed_capability__h31293[42] ?
									   7'd21 :
									   (rs2_val_bypassed_capability__h31293[41] ?
									      7'd22 :
									      (rs2_val_bypassed_capability__h31293[40] ?
										 7'd23 :
										 (rs2_val_bypassed_capability__h31293[39] ?
										    7'd24 :
										    (rs2_val_bypassed_capability__h31293[38] ?
										       7'd25 :
										       (rs2_val_bypassed_capability__h31293[37] ?
											  7'd26 :
											  (rs2_val_bypassed_capability__h31293[36] ?
											     7'd27 :
											     (rs2_val_bypassed_capability__h31293[35] ?
												7'd28 :
												(rs2_val_bypassed_capability__h31293[34] ?
												   7'd29 :
												   (rs2_val_bypassed_capability__h31293[33] ?
												      7'd30 :
												      (rs2_val_bypassed_capability__h31293[32] ?
													 7'd31 :
													 (rs2_val_bypassed_capability__h31293[31] ?
													    7'd32 :
													    (rs2_val_bypassed_capability__h31293[30] ?
													       7'd33 :
													       (rs2_val_bypassed_capability__h31293[29] ?
														  7'd34 :
														  (rs2_val_bypassed_capability__h31293[28] ?
														     7'd35 :
														     (rs2_val_bypassed_capability__h31293[27] ?
															7'd36 :
															(rs2_val_bypassed_capability__h31293[26] ?
															   7'd37 :
															   (rs2_val_bypassed_capability__h31293[25] ?
															      7'd38 :
															      (rs2_val_bypassed_capability__h31293[24] ?
																 7'd39 :
																 (rs2_val_bypassed_capability__h31293[23] ?
																    7'd40 :
																    (rs2_val_bypassed_capability__h31293[22] ?
																       7'd41 :
																       (rs2_val_bypassed_capability__h31293[21] ?
																	  7'd42 :
																	  (rs2_val_bypassed_capability__h31293[20] ?
																	     7'd43 :
																	     (rs2_val_bypassed_capability__h31293[19] ?
																		7'd44 :
																		(rs2_val_bypassed_capability__h31293[18] ?
																		   7'd45 :
																		   (rs2_val_bypassed_capability__h31293[17] ?
																		      7'd46 :
																		      (rs2_val_bypassed_capability__h31293[16] ?
																			 7'd47 :
																			 (rs2_val_bypassed_capability__h31293[15] ?
																			    7'd48 :
																			    (rs2_val_bypassed_capability__h31293[14] ?
																			       7'd49 :
																			       (rs2_val_bypassed_capability__h31293[13] ?
																				  7'd50 :
																				  (rs2_val_bypassed_capability__h31293[12] ?
																				     7'd51 :
																				     (rs2_val_bypassed_capability__h31293[11] ?
																					7'd52 :
																					(rs2_val_bypassed_capability__h31293[10] ?
																					   7'd53 :
																					   (rs2_val_bypassed_capability__h31293[9] ?
																					      7'd54 :
																					      (rs2_val_bypassed_capability__h31293[8] ?
																						 7'd55 :
																						 (rs2_val_bypassed_capability__h31293[7] ?
																						    7'd56 :
																						    (rs2_val_bypassed_capability__h31293[6] ?
																						       7'd57 :
																						       (rs2_val_bypassed_capability__h31293[5] ?
																							  7'd58 :
																							  (rs2_val_bypassed_capability__h31293[4] ?
																							     7'd59 :
																							     (rs2_val_bypassed_capability__h31293[3] ?
																								7'd60 :
																								(rs2_val_bypassed_capability__h31293[2] ?
																								   7'd61 :
																								   (rs2_val_bypassed_capability__h31293[1] ?
																								      7'd62 :
																								      (rs2_val_bypassed_capability__h31293[0] ?
																									 7'd63 :
																									 7'd64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1857 =
	     rs2_val_bypassed_capability__h31293[104] ?
	       ((!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1385 ||
		 !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1390) ?
		  4'd9 :
		  4'd0) :
	       4'd0 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2176 =
	     x__h31491 < r__h64255 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2637 =
	     rs2_val_bypassed_capability__h31293[104] ?
	       5'd21 :
	       (IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937 ?
		  (b_capability__h31291[122] ? 5'd16 : 5'd20) :
		  5'd24) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2654 =
	     rs2_val_bypassed_capability__h31293[104] ?
	       ((!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1385 ||
		 !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1390) ?
		  5'd19 :
		  5'd2) :
	       5'd2 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2678 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2666 ?
	       ((rs1_val_bypassed_capability__h6632[114] ||
		 !rs2_val_bypassed_capability__h31293[114]) ?
		  5'd20 :
		  IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2676) :
	       5'd24 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2695 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2666 ?
	       ((rs1_val_bypassed_capability__h6632[114] ||
		 !rs2_val_bypassed_capability__h31293[114]) ?
		  5'd20 :
		  IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2693) :
	       5'd24 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2706 =
	     controller_capability__h59382[104] ?
	       5'd21 :
	       ((decoded_instr_rs2__h5316[3:2] == 2'b11) ?
		  5'd2 :
		  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2704) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2196 =
	     x__h57302 < r__h64531 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2621 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       ((rs1_val_bypassed_capability__h6632[104] ||
		 IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2615) ?
		  trap__h6679 :
		  5'd2) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2624 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       ((near_mem$imem_instr[19:15] == 5'd0 ||
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
		  5'd18 :
		  5'd16) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2632 =
	     (rs1_val_bypassed_capability__h6632[104] ||
	      rs2_val_bypassed_capability__h31293[104]) ?
	       5'd21 :
	       (b_capability__h31291[120] ?
		  ((!IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d917 ||
		    !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d922 ||
		    !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925) ?
		     5'd19 :
		     5'd16) :
		  5'd20) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2651 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       ((rs1_val_bypassed_capability__h6632[104] ||
		 IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2645) ?
		  trap__h32010 :
		  5'd2) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2690 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       (({ b_capability__h31291[95:84],
		   b_capability__h31291[75:64] } ==
		 b_capability__h6630[23:0]) ?
		  (b_capability__h6630[122] ? 5'd16 : 5'd20) :
		  5'd24) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d475 =
	     x__h57302 + 20'd1 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1446 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 :
	       !stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 =
	     x__h59625 == b__h59622 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1475 =
	     x__h59772 == b__h59622 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1481 =
	     x__h59988 == b__h59622 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1489 =
	     x__h60204 == b__h59622 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1497 =
	     x__h60420 == b__h59622 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1446 ||
	     controller_capability__h59382[104] ||
	     decoded_instr_rs2__h5316[3:2] == 2'b11 ||
	     (!decoded_instr_rs2__h5316[3] ||
	      decoded_instr_rs2__h5316[2:0] == 3'b101) &&
	     (!controller_capability__h59382[117] ||
	      !controller_capability__h59382[116]) ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1500 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1719 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
	       stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1745 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1719 &&
	     !controller_capability__h59382[104] &&
	     decoded_instr_rs2__h5316[3:2] != 2'b11 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1742 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2175 =
	     aMid__h64254 < r__h64255 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2183 =
	     b__h64189 +
	     ((IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2175 &&
	       !IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2176) ?
		2'd3 :
		((IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2176 &&
		  !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2175) ?
		   2'd1 :
		   2'd0)) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2409 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903 ||
	      rs2_val_bypassed_capability__h31293[63:0] ==
	      64'hFFFFFFFFFFFFFFFF) ?
	       rs1_val_bypassed_capability__h6632 :
	       { b_capability__h6630[127:105],
		 1'b1,
		 rs1_val_bypassed_capability__h6632[103:84],
		 b_capability__h31291[19:0],
		 rs1_val_bypassed_capability__h6632[63:0] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2666 =
	     rs2_val_bypassed_capability__h31293[83:64] ==
	     rs1_val_bypassed_capability__h6632[83:64] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2882 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 :
	       stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d917 =
	     x__h31416 == b__h31413 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d922 =
	     x__h31563 == b__h31413 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 =
	     rs2_val_bypassed_capability__h31293[63:0] <=
	     64'h00000000000FFFFF ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1406 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d1404 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d1404 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1406 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1680 =
	     b_capability__h31291[120] &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d917 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d922 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1860 =
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31293[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1680 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2850 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2848 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2851 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2848 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2850 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2856 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2854 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2854 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2856 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2862 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2860 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2863 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2860 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2862 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2875 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2873 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2876 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2873 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2875 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_capability__h4621 :
	       b_capability__h6618 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_capability__h4621 :
	       b_capability__h31279 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d462 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d454 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d454 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d462 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d902 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d900 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d900 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d902 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937 =
	     { b_capability__h6630[95:84], b_capability__h6630[75:64] } ==
	     b_capability__h31291[23:0] ;
  assign IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2676 =
	     (!IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d917 ||
	      x__h58673 != b__h31413) ?
	       5'd19 :
	       5'd26 ;
  assign IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2693 =
	     (!IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d917 ||
	      x__h58673 != b__h31413) ?
	       5'd19 :
	       out__h59128 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1864 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1438 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       4'd9 :
	       4'd0 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2422 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1438 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       { 125'd0, x__h69179 } :
	       ccsr_val_capability__h63997 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2660 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1438 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       alu_outputs___1_exc_code__h62194 :
	       5'd2 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2704 =
	     ((!decoded_instr_rs2__h5316[3] ||
	       decoded_instr_rs2__h5316[2:0] == 3'b101) &&
	      (!controller_capability__h59382[117] ||
	       !controller_capability__h59382[116])) ?
	       5'd20 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1500 ?
		  5'd19 :
		  5'd16) ;
  assign IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1804 =
	     NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 ?
	       4'd9 :
	       4'd0 ;
  assign IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 =
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ?
	       4'd9 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1895 ;
  assign IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3118 =
	     near_mem$imem_pc == csr_regfile$csr_trap_actions[193:130] ;
  assign IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529 =
	     csr_regfile$read_misa[20] ?
	       (csr_regfile$read_misa[13] ?
		  _theResult_____4__h69954 :
		  csr_val___2__h70038) :
	       csr_val___2__h70038 ;
  assign IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2546 =
	     { IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[31:13],
	       spliced_bits__h70009,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[10:9],
	       IF_csr_regfileread_misa_BIT_18_THEN_spp9958_E_ETC__q36[0],
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[7:0] } ;
  assign IF_csr_regfileread_misa_BIT_18_THEN_spp9958_E_ETC__q36 =
	     csr_regfile$read_misa[18] ? spp__h69958 : 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1840 =
	     near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_8_ETC___d1815 ?
	       4'd4 :
	       ((near_mem$imem_instr[11:7] == 5'd0 &&
		 near_mem$imem_instr[19:15] == 5'd0) ?
		  IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1838 :
		  4'd9) ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1842 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1840 :
	       ((near_mem$imem_instr[14:12] == 3'b100 ||
		 near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426) ?
		  4'd9 :
		  4'd0) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1573 =
	     x__h30729 == b__h57146 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1578 =
	     x__h30876 == b__h57146 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1661 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d478 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d480 &&
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d852 &&
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1685 =
	     rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31293[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937 &&
	     b_capability__h31291[122] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1694 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d957 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d959 &&
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1367 &&
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1371 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1573 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1578 &&
	     rs1_val_bypassed_capability__h6632[114] &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1855 =
	     near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1377 ?
	       4'd9 :
	       4'd0 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1858 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      rs1_val_bypassed_capability__h6632[104]) ?
	       4'd9 :
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1857 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1863 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       4'd9 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1861 ?
		  4'd0 :
		  4'd9) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2195 =
	     aMid__h64530 < r__h64531 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2203 =
	     b__h64465 +
	     ((IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2195 &&
	       !IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2196) ?
		2'd3 :
		((IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2196 &&
		  !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2195) ?
		   2'd1 :
		   2'd0)) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2615 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d478 ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d480 ||
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d852 ||
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2642 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (rs1_val_bypassed_capability__h6632[104] ? 5'd21 : 5'd2) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2645 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d957 ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d959 ||
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1367 ||
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1371 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2652 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2651 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2656 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (rs1_val_bypassed_capability__h6632[104] ?
		  5'd21 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2654) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2658 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1861 ?
		  5'd2 :
		  check__h31012) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2680 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903) ?
	       5'd18 :
	       ((!rs1_val_bypassed_capability__h6632[104] ||
		 !rs2_val_bypassed_capability__h31293[104]) ?
		  5'd22 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2678) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2697 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903) ?
	       5'd18 :
	       ((!rs1_val_bypassed_capability__h6632[104] ||
		 !rs2_val_bypassed_capability__h31293[104]) ?
		  5'd22 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2695) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2915 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1573 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1578 &&
	     rs1_val_bypassed_capability__h6632[114] &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 =
	     rs1_val_bypassed_capability__h6632[63:0] ==
	     rs2_val_bypassed_capability__h31293[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350 =
	     (rs1_val_bypassed_capability__h6632[63:0] ^
	      64'h8000000000000000) <
	     (rs2_val_bypassed_capability__h31293[63:0] ^
	      64'h8000000000000000) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 =
	     rs1_val_bypassed_capability__h6632[63:0] <
	     rs2_val_bypassed_capability__h31293[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 =
	     rs1_val_bypassed_capability__h6632[63:0] < old_lower__h6726 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d478 =
	     requested_top__h6725 <= old_top__h6727 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d480 =
	     requested_top__h6725 <=
	     rs1_val_bypassed_capability__h6632[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d952 =
	     rs1_val_bypassed_capability__h6632[104] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     rs2_val_bypassed_capability__h31293[63:0] != 64'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d957 =
	     requested_top__h32054 <= old_top__h6727 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d959 =
	     requested_top__h32054 <=
	     rs1_val_bypassed_capability__h6632[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1516 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1438 ||
	       decoded_instr_rs2__h5316 == 5'b0 &&
	       near_mem$imem_instr[19:15] != 5'd0 :
	       ((near_mem$imem_instr[31:25] == 7'b0) ?
		  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504 ||
		  decoded_instr_rs2__h5316[3] &&
		  decoded_instr_rs2__h5316[2:0] != 3'b101 &&
		  decoded_instr_rs2__h5316[2] &&
		  decoded_instr_rs2__h5316[1:0] != 2'b0 :
		  near_mem$imem_instr[31:25] != 7'b0100000) ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1752 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1715 &&
	       (decoded_instr_rs2__h5316 != 5'b0 ||
		near_mem$imem_instr[19:15] == 5'd0) :
	       ((near_mem$imem_instr[31:25] == 7'b0) ?
		  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1745 &&
		  (!decoded_instr_rs2__h5316[3] ||
		   decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		   !decoded_instr_rs2__h5316[2] ||
		   decoded_instr_rs2__h5316[1:0] == 2'b0) :
		  near_mem$imem_instr[31:25] == 7'b0100000) ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2078 =
	     (near_mem$imem_instr[31:25] == 7'b1111110) ?
	       decoded_instr_rs2__h5316 != 5'b0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407 :
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1719 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2234 =
	     (near_mem$imem_instr[31:25] == 7'b0010011) ?
	       rs2_val_bypassed_capability__h31293[63:0] != 64'b0 &&
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
	       near_mem$imem_instr[31:25] == 7'b0000001 &&
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2232 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2794 =
	     (near_mem$imem_instr[31:25] == 7'b1111111) ?
	       decoded_instr_rs2__h5316 == 5'b01100 &&
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787 :
	       near_mem$imem_instr[31:25] == 7'b1111110 &&
	       near_mem$imem_instr[24:20] == 5'h01 &&
	       rs2_val_bypassed_capability__h31293[1:0] != 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2887 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1715 &&
	       (decoded_instr_rs2__h5316 != 5'b0 ||
		near_mem$imem_instr[19:15] == 5'd0) :
	       ((near_mem$imem_instr[31:25] == 7'b0) ?
		  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2882 &&
		  !controller_capability__h59382[104] &&
		  decoded_instr_rs2__h5316[3:2] != 2'b11 &&
		  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1742 :
		  near_mem$imem_instr[31:25] == 7'b0100000) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1492 =
	     decoded_instr_rs2__h5316[1:0] == 2'b0 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1475 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b01 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1481 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b10 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1489 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1500 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1492 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b11 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1497 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       near_mem$imem_instr[14:12] != 3'b0 &&
	       near_mem$imem_instr[14:12] != 3'b001 &&
	       near_mem$imem_instr[14:12] != 3'b100 &&
	       near_mem$imem_instr[14:12] != 3'b101 &&
	       near_mem$imem_instr[14:12] != 3'b110 &&
	       near_mem$imem_instr[14:12] != 3'b111 ||
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 :
	       near_mem$imem_instr[6:0] == 7'b1101111 ||
	       near_mem$imem_instr[6:0] == 7'b1100111 ||
	       (near_mem$imem_instr[6:0] != 7'b0010011 &&
		near_mem$imem_instr[6:0] != 7'b0110011 ||
		near_mem$imem_instr[14:12] != 3'b001 &&
		near_mem$imem_instr[14:12] != 3'b101) &&
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1537 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1703 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903 ||
	     rs2_val_bypassed_capability__h31293[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31293[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1680 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1715 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      (decoded_instr_rs2__h5316[4:2] == 3'b001 ||
	       decoded_instr_rs2__h5316[4:2] == 3'b011 ||
	       decoded_instr_rs2__h5316[4:2] == 3'b111) &&
	      decoded_instr_rs2__h5316[1:0] != 2'b01) &&
	     !rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1437 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1742 =
	     (decoded_instr_rs2__h5316[3] &&
	      decoded_instr_rs2__h5316[2:0] != 3'b101 ||
	      controller_capability__h59382[117] &&
	      controller_capability__h59382[116]) &&
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1736 &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b11 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1497) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       (near_mem$imem_instr[14:12] == 3'b0 ||
		near_mem$imem_instr[14:12] == 3'b001 ||
		near_mem$imem_instr[14:12] == 3'b100 ||
		near_mem$imem_instr[14:12] == 3'b101 ||
		near_mem$imem_instr[14:12] == 3'b110 ||
		near_mem$imem_instr[14:12] == 3'b111) &&
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 :
	       near_mem$imem_instr[6:0] != 7'b1101111 &&
	       near_mem$imem_instr[6:0] != 7'b1100111 &&
	       ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		 near_mem$imem_instr[6:0] == 7'b0110011) &&
		(near_mem$imem_instr[14:12] == 3'b001 ||
		 near_mem$imem_instr[14:12] == 3'b101) ||
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1773) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1861 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903 ||
	     rs2_val_bypassed_capability__h31293[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1860 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2232 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1715 &&
	     (decoded_instr_rs2__h5316 != 5'b0 ||
	      near_mem$imem_instr[19:15] == 5'd0) &&
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      ((decoded_instr_rs2__h5316 == 5'b00001) ?
		 stage1_rg_ddc[128] :
		 csr_regfile$read_csr_cap[128])) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2460 =
	     ((near_mem$imem_instr[6:0] == 7'b0010011 ||
	       near_mem$imem_instr[6:0] == 7'b0110011) &&
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101)) ?
	       alu_outputs___1_val1_capability__h63840 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2475 =
	     (near_mem$imem_instr[6:0] == 7'b0100011) ?
	       decoded_instr_rs2__h5316 != 5'b0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407 :
	       near_mem$imem_instr[6:0] != 7'b1110011 &&
	       alu_outputs___1_val2_tag__h69795 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2801 =
	     (near_mem$imem_instr[6:0] == 7'b1110011 &&
	      near_mem$imem_instr[13:12] != 2'b0 &&
	      NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 ||
	      ((near_mem$imem_instr[6:0] == 7'b1100011) ?
		 near_mem$imem_instr[14:12] != 3'b0 &&
		 near_mem$imem_instr[14:12] != 3'b001 &&
		 near_mem$imem_instr[14:12] != 3'b100 &&
		 near_mem$imem_instr[14:12] != 3'b101 &&
		 near_mem$imem_instr[14:12] != 3'b110 &&
		 near_mem$imem_instr[14:12] != 3'b111 :
		 near_mem$imem_instr[6:0] != 7'b1101111 &&
		 near_mem$imem_instr[6:0] != 7'b1100111 &&
		 ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		    near_mem$imem_instr[14:12] != 3'b0 ||
		    near_mem$imem_instr[11:7] != 5'd0 ||
		    near_mem$imem_instr[19:15] != 5'd0 ||
		    near_mem$imem_instr[31:20] != 12'b0 &&
		    near_mem$imem_instr[31:20] != 12'b000000000001 :
		    near_mem$imem_instr[6:0] != 7'b1011011 ||
		    IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2782))) ?
	       { 32'd0, near_mem$imem_instr } :
	       (((near_mem$imem_instr[6:0] == 7'b1100011) ?
		   near_mem$imem_instr[14:12] == 3'b0 ||
		   near_mem$imem_instr[14:12] == 3'b001 ||
		   near_mem$imem_instr[14:12] == 3'b100 ||
		   near_mem$imem_instr[14:12] == 3'b101 ||
		   near_mem$imem_instr[14:12] == 3'b110 ||
		   near_mem$imem_instr[14:12] == 3'b111 :
		   near_mem$imem_instr[6:0] == 7'b1101111 ||
		   near_mem$imem_instr[6:0] == 7'b1100111 ||
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2794) ?
		  alu_outputs_addr_capability__h62851[63:0] :
		  64'b0) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2880 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2876 ||
	     rs2_val_bypassed_capability__h31293[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2863 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31293[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1680 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2912 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       (near_mem$imem_instr[14:12] == 3'b0 ||
		near_mem$imem_instr[14:12] == 3'b001 ||
		near_mem$imem_instr[14:12] == 3'b100 ||
		near_mem$imem_instr[14:12] == 3'b101 ||
		near_mem$imem_instr[14:12] == 3'b110 ||
		near_mem$imem_instr[14:12] == 3'b111) &&
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 :
	       near_mem$imem_instr[6:0] != 7'b1101111 &&
	       near_mem$imem_instr[6:0] != 7'b1100111 &&
	       ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		 near_mem$imem_instr[6:0] == 7'b0110011) &&
		(near_mem$imem_instr[14:12] == 3'b001 ||
		 near_mem$imem_instr[14:12] == 3'b101) ||
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2908) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d3131 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596 ;
  assign IF_near_mem_imem_instr__20_BIT_30_71_THEN_53_E_ETC___d700 =
	     near_mem$imem_instr[30] ?
	       7'd53 :
	       (near_mem$imem_instr[29] ?
		  7'd54 :
		  (near_mem$imem_instr[28] ?
		     7'd55 :
		     (near_mem$imem_instr[27] ?
			7'd56 :
			(near_mem$imem_instr[26] ?
			   7'd57 :
			   (near_mem$imem_instr[25] ?
			      7'd58 :
			      (near_mem$imem_instr[24] ?
				 7'd59 :
				 (near_mem$imem_instr[23] ?
				    7'd60 :
				    (near_mem$imem_instr[22] ?
				       7'd61 :
				       (near_mem$imem_instr[21] ?
					  7'd62 :
					  (near_mem$imem_instr[20] ?
					     7'd63 :
					     7'd64)))))))))) ;
  assign IF_rg_cur_priv_9_EQ_0b11_810_OR_rg_cur_priv_9__ETC___d1836 =
	     ((rg_cur_priv == 2'b11 ||
	       rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[22]) &&
	      near_mem$imem_instr[31:20] == 12'b000100000010) ?
	       4'd6 :
	       (rg_cur_priv_9_EQ_0b11_810_OR_rg_cur_priv_9_EQ__ETC___d1834 ?
		  4'd8 :
		  4'd9) ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 =
	     stage2_rg_full ?
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 :
	       2'd0 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 =
	     stage2_rg_full ?
	       IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 :
	       2'd0 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 =
	     stage2_rg_stage2[393:389] == near_mem$imem_instr[19:15] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231 =
	     stage2_rg_stage2[393:389] == decoded_instr_rs2__h5316 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	     2'd1 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ||
	     gpr_regfile$is_busy ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 =
	     x_out_bypass_rd_val_capability__h4621[9:8] ==
	     near_mem$imem_instr[19:18] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 =
	     x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5[near_mem$imem_instr[17:15]] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3045 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd2 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0) &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2980 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 =
	     x_out_bypass_rd_val_capability__h4621[9:8] ==
	     decoded_instr_rs2__h5316[4:3] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 =
	     x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5[decoded_instr_rs2__h5316[2:0]] ;
  assign IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108 =
	     (stage2_rg_stage2[393:389] == 5'd0) ?
	       2'd0 :
	       ((near_mem$dmem_valid && !near_mem$dmem_exc) ? 2'd2 : 2'd1) ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1403 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       stage3_rg_stage3[257] :
	       gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       stage3_rg_stage3[256:129] :
	       gpr_regfile$read_rs1[127:0] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       stage3_rg_stage3[256:129] :
	       gpr_regfile$read_rs2[127:0] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       stage3_rg_stage3[257] :
	       gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d453 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       !stage3_rg_stage3[257] :
	       !gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d899 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       !stage3_rg_stage3[257] :
	       !gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d1404 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) &&
	       gpr_regfile$read_rs2[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1403 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2848 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 ||
	       !gpr_regfile$read_rs1[128] :
	       !gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2854 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) &&
	       gpr_regfile$read_rs1[128] :
	       gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2860 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) &&
	       gpr_regfile$read_rs2[128] :
	       gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2873 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 ||
	       !gpr_regfile$read_rs2[128] :
	       !gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) &&
	       gpr_regfile$read_rs1[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d454 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 ||
	       !gpr_regfile$read_rs1[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d453 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d900 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 ||
	       !gpr_regfile$read_rs2[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d899 ;
  assign INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227 =
	     x__h52696 >>
	     _63_MINUS_IF_rs2_val_bypassed_capability1293_BI_ETC__q20[5:0] ;
  assign INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712 =
	     x__h26311 >>
	     _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q17[5:0] ;
  assign NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1224 =
	     x__h41379 + y__h41380 > 7'd1 ||
	     (rs1_val_bypassed_capability__h6632[63:0] & y__h43628) != 64'd0 ;
  assign NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d2220 =
	     result4176_PLUS_b_val4177__q33[63:0] >=
	     result4452_PLUS_b_val4453__q32[63:0] &&
	     _0_CONCAT_x4734_SL_rs2_val_bypassed_capability1_ETC__q34[63:0] <=
	     _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_19_ETC__q35[63:0] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign NOT_0_CONCAT_near_mem_imem_instr__20_BIT_31_55_ETC___d709 =
	     x__h16033 + y__h16034 > 7'd1 ||
	     (rs1_val_bypassed_capability__h6632[63:0] & y__h18282) != 64'd0 ;
  assign NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d928 =
	     !b_capability__h31291[120] ||
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d917 ||
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d922 ||
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 =
	     cur_verbosity__h1374 > 4'd1 ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2966 =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     (stage2_rg_stage2[396:394] == 3'd3 ||
	      stage2_rg_stage2[396:394] != 3'd0 &&
	      (!near_mem$dmem_valid || near_mem$dmem_exc)) ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2968 =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     stage2_rg_stage2[396:394] != 3'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd0 ||
	      near_mem$dmem_valid && !near_mem$dmem_exc) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1585 =
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1573 ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1578 ||
	     !rs1_val_bypassed_capability__h6632[114] ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1689 =
	     !rs1_val_bypassed_capability__h6632[104] ||
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs2_val_bypassed_capability__h31293[63:0] == 64'b0 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2744 =
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d478 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d480 &&
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d852 &&
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2750 =
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d957 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d959 &&
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1367 &&
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1371 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2753 =
	     !rs1_val_bypassed_capability__h6632[104] &&
	     (!rs2_val_bypassed_capability__h31293[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1385 &&
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1390) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1413 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407 &&
	     rs2_val_bypassed_capability__h31293[63:0] !=
	     64'hFFFFFFFFFFFFFFFF &&
	     (IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903 ||
	      rs1_val_bypassed_capability__h6632[104] ||
	      rs2_val_bypassed_capability__h31293[104] ||
	      NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d928) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1438 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     decoded_instr_rs2__h5316 != 5'b00001 &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b001 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b011 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b111 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) ||
	     rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1437 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1736 =
	     (decoded_instr_rs2__h5316[1:0] != 2'b0 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1475) &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b01 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1481) &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b10 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1471 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1489) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd3 ||
	      stage2_rg_stage2[396:394] != 3'd0 &&
	      (!near_mem$dmem_valid || near_mem$dmem_exc)) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd3 &&
	     stage2_rg_stage2[396:394] != 3'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd0 ||
	      near_mem$dmem_valid && !near_mem$dmem_exc) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 !=
	      2'd1 ||
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 &&
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) &&
	     !gpr_regfile$is_busy ;
  assign NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 =
	     !csr_regfile$read_csr[64] ||
	     rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 ||
	     csr_regfile$csr_counter_read_fault ||
	     (near_mem$imem_instr[13:12] == 2'b01 ||
	      near_mem$imem_instr[19:15] != 5'd0) &&
	     near_mem$imem_instr[31:30] == 2'b11 ;
  assign NOT_near_mem_imem_exc__38_601_AND_IF_near_mem__ETC___d2060 =
	     !near_mem$imem_exc &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2056 ;
  assign NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 =
	     !near_mem$imem_exc &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1612) ;
  assign NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1957 =
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd3 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd4 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd5 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd6 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd7 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd8 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd9 ;
  assign NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d2022 =
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 !=
	     3'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 !=
	     3'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 !=
	     3'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 !=
	     3'd3 ;
  assign NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d2048 =
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      near_mem$imem_instr[14:12] == 3'b100 ||
	      near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 ||
	      ((near_mem$imem_instr[13:12] == 2'd2) ?
		 near_mem$imem_instr[19:15] == 5'd0 :
		 near_mem$imem_instr[13:12] == 2'd3 &&
		 near_mem$imem_instr[19:15] == 5'd0)) ;
  assign NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1652 =
	     near_mem$imem_instr[13:12] != 2'b0 && csr_regfile$read_csr[64] &&
	     !rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 &&
	     !csr_regfile$csr_counter_read_fault &&
	     (near_mem$imem_instr[13:12] != 2'b01 &&
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      near_mem$imem_instr[31:30] != 2'b11) &&
	     (near_mem$imem_instr[31:20] != 12'h180 ||
	      !csr_regfile$read_mstatus[20]) ;
  assign NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2056 =
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1652 &&
	     ((near_mem$imem_instr[13:12] == 2'd2) ?
		near_mem$imem_instr[19:15] != 5'd0 :
		near_mem$imem_instr[13:12] != 2'd3 ||
		near_mem$imem_instr[19:15] != 5'd0) ;
  assign NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1551 =
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b001 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     near_mem$imem_instr[14:12] != 3'b101 &&
	     near_mem$imem_instr[14:12] != 3'b110 &&
	     near_mem$imem_instr[14:12] != 3'b111 ||
	     IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 &&
	     branch_target__h5843[1] ;
  assign NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 =
	     (near_mem$imem_instr[14:12] != 3'b0 ||
	      near_mem$imem_instr[6:0] == 7'b0110011 &&
	      near_mem$imem_instr[30]) &&
	     (near_mem$imem_instr[14:12] != 3'b0 ||
	      near_mem$imem_instr[6:0] != 7'b0110011 ||
	      !near_mem$imem_instr[30]) &&
	     near_mem$imem_instr[14:12] != 3'b010 &&
	     near_mem$imem_instr[14:12] != 3'b011 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     near_mem$imem_instr[14:12] != 3'b110 &&
	     near_mem$imem_instr[14:12] != 3'b111 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1664 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1661 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31293[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1680 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1407 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1685 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1697 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1694 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1700 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     (!rs2_val_bypassed_capability__h31293[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1385 &&
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1390) ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2859 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1661 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2866 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2863 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31293[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1680 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2867 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2863 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1685 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2871 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1694 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2872 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     (!rs2_val_bypassed_capability__h31293[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1385 &&
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1390) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2926 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2912 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2923) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2937 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596 ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2939 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3048 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	     2'd1 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3049 =
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3048 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596 ;
  assign NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2942 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] ||
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2937) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2939) ;
  assign NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2982 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd2 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0) &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2980 ;
  assign NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991 =
	     NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2982 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3043 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     !stage3_rg_full &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2980 &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 ;
  assign NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3052 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3045 ||
	      !stage1_rg_full) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3049 ||
	      near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0) ;
  assign NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3054 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3045 ||
	      !stage1_rg_full) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3049 ||
	      near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0) &&
	     cur_verbosity__h1374 != 4'd0 ;
  assign NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3057 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2980 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d3068 =
	     !stage1_rg_full ||
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3048 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596 ||
	     near_mem$imem_instr[6:0] != 7'b1110011 ||
	     near_mem$imem_instr[13:12] == 2'b0 ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ||
	     stage3_rg_full ;
  assign SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1566 =
	     { {52{near_memimem_instr_BITS_31_TO_20__q24[11]}},
	       near_memimem_instr_BITS_31_TO_20__q24 } ;
  assign _0_CONCAT_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d2431 =
	     top__h69237 <= old_top__h6727 &&
	     bot__h69238 >= old_lower__h6726 &&
	     perms__h60601 == 15'd0 ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_19_ETC__q35 =
	     { 45'd0,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d475 } <<
	     rs1_val_bypassed_capability__h6632[110:105] ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1385 =
	     x__h57149 == b__h57146 ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1390 =
	     x__h57373 == b__h57146 ;
  assign _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1367 =
	     top__h32364 <= old_top__h6727 ;
  assign _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1371 =
	     bot__h32365 < old_lower__h6726 ;
  assign _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d852 =
	     top__h7018 <= old_top__h6727 ;
  assign _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856 =
	     bot__h7019 < old_lower__h6726 ;
  assign _0_CONCAT_x4734_SL_rs2_val_bypassed_capability1_ETC__q34 =
	     { 45'd0, x__h64734 } <<
	     rs2_val_bypassed_capability__h31293[110:105] ;
  assign _44_MINUS_leading071__q12 = 7'd44 - leading__h7071 ;
  assign _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q17 =
	     7'd63 -
	     (near_mem$imem_instr[31] ?
		7'd52 :
		IF_near_mem_imem_instr__20_BIT_30_71_THEN_53_E_ETC___d700) ;
  assign _63_MINUS_IF_rs2_val_bypassed_capability1293_BI_ETC__q20 =
	     7'd63 -
	     (rs2_val_bypassed_capability__h31293[63] ?
		7'd0 :
		IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1215) ;
  assign _theResult_____1_snd__h61407 =
	     (near_mem$imem_instr[14:12] == 3'b0 &&
	      near_mem$imem_instr[6:0] == 7'b0110011 &&
	      near_mem$imem_instr[30]) ?
	       rd_val___1__h61402 :
	       _theResult_____1_snd__h61414 ;
  assign _theResult_____1_snd__h61442 =
	     rs1_val_bypassed_capability__h6632[63:0] &
	     _theResult___snd__h65436 ;
  assign _theResult_____4__h69954 =
	     csr_regfile$read_misa[18] ?
	       _theResult_____5__h69953 :
	       csr_val___2__h70053 ;
  assign _theResult_____5__h69953 =
	     (!csr_regfile$read_misa[18] && !csr_regfile$read_misa[5] &&
	      !csr_regfile$read_misa[3]) ?
	       csr_val___1__h70113 :
	       csr_val___2__h69952 ;
  assign _theResult____h76445 =
	     (delta_CPI_instrs__h76444 == 64'd0) ?
	       delta_CPI_instrs___1__h76480 :
	       delta_CPI_instrs__h76444 ;
  assign _theResult___exc_code__h61934 =
	     (near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      rs1_val_bypassed_capability__h6632[104]) ?
	       5'd21 :
	       5'd2 ;
  assign _theResult___fst__h32051 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       _theResult___fst__h32058 ;
  assign _theResult___fst__h32058 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2645 ?
	       5'd23 :
	       5'd16 ;
  assign _theResult___fst__h6722 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       _theResult___fst__h6729 ;
  assign _theResult___fst__h6729 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2615 ?
	       5'd23 :
	       5'd16 ;
  assign _theResult___snd__h61518 =
	     (near_mem$imem_instr[14:12] == 3'b001 &&
	      !near_mem$imem_instr[25]) ?
	       rd_val___1__h65585 :
	       _theResult___snd__h61525 ;
  assign _theResult___snd__h61525 =
	     near_mem$imem_instr[30] ?
	       rd_val___1__h65668 :
	       rd_val___1__h65639 ;
  assign _theResult___snd__h61631 =
	     { {32{rs1_val_bypassed_capability632_BITS_31_TO_0_SR_ETC__q9[31]}},
	       rs1_val_bypassed_capability632_BITS_31_TO_0_SR_ETC__q9 } ;
  assign _theResult___snd__h65436 =
	     (near_mem$imem_instr[6:0] == 7'b0010011) ?
	       SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1566 :
	       rs2_val_bypassed_capability__h31293[63:0] ;
  assign _theResult___snd_capability__h63879 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      rs1_val_bypassed_capability__h6632[104] ||
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 ||
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d478 ||
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d480) ?
	       128'd0 :
	       ret_capability__h63873 ;
  assign _theResult___snd_capability__h63948 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      rs1_val_bypassed_capability__h6632[104] ||
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 ||
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d957 ||
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d959) ?
	       128'd0 :
	       ret_capability__h63942 ;
  assign _theResult___snd_tag__h63878 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d478 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d480 ;
  assign aMid__h64254 =
	     rs2_val_bypassed_capability1293_BITS_63_TO_0_A_ETC__q7[19:0] ;
  assign aMid__h64530 =
	     rs1_val_bypassed_capability632_BITS_63_TO_0_AN_ETC__q14[19:0] ;
  assign alu_outputs___1_addr_capability__h62751 =
	     { 64'd0, new_offset__h63870 } ;
  assign alu_outputs___1_addr_capability__h62765 =
	     { 116'd0, near_mem$imem_instr[31:20] } ;
  assign alu_outputs___1_addr_capability__h62792 =
	     rs1_val_bypassed_capability__h6632 ;
  assign alu_outputs___1_addr_tag__h62791 = alu_outputs___1_val2_tag__h69795 ;
  assign alu_outputs___1_addr_tag__h62835 =
	     (near_mem$imem_instr[31:25] == 7'b1111111) ?
	       alu_outputs___1_addr_tag__h62791 :
	       near_mem$imem_instr[31:25] != 7'b0000001 &&
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2078 ;
  assign alu_outputs___1_exc_code__h62194 =
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1438 ?
	       5'd2 :
	       5'd20 ;
  assign alu_outputs___1_exc_code__h6371 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       (near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_8_ETC___d1815 ?
		  5'd2 :
		  ((near_mem$imem_instr[11:7] == 5'd0 &&
		    near_mem$imem_instr[19:15] == 5'd0) ?
		     CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q27 :
		     5'd2)) :
	       5'd2 ;
  assign alu_outputs___1_val1_capability__h63832 =
	     { 64'hFFFE7E0000011111, ret_pc__h5871 } ;
  assign alu_outputs___1_val1_capability__h63840 =
	     { 64'd0, new_addr__h63837 } ;
  assign alu_outputs___1_val1_capability__h63844 =
	     { 64'd0, new_addr__h63841 } ;
  assign alu_outputs___1_val1_capability__h63848 =
	     { 64'd0, new_addr__h63845 } ;
  assign alu_outputs___1_val1_capability__h63852 =
	     { 64'd0, new_addr__h63849 } ;
  assign alu_outputs___1_val1_capability__h63855 = { 64'd0, rd_val__h6051 } ;
  assign alu_outputs___1_val1_capability__h63858 = { 64'd0, rd_val__h6068 } ;
  assign alu_outputs___1_val1_capability__h63868 = { 64'd0, rd_val__h6357 } ;
  assign alu_outputs___1_val1_capability__h63911 = { 118'd0, x__h67604 } ;
  assign alu_outputs___1_val1_tag__h63923 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     decoded_instr_rs2__h5316 != 5'b00001 &&
	     decoded_instr_rs2__h5316 != 5'b00010 &&
	     decoded_instr_rs2__h5316 != 5'b00011 &&
	     decoded_instr_rs2__h5316 != 5'b00100 &&
	     decoded_instr_rs2__h5316 != 5'b00101 &&
	     decoded_instr_rs2__h5316 != 5'b00110 &&
	     decoded_instr_rs2__h5316 != 5'b01111 &&
	     ((decoded_instr_rs2__h5316 == 5'b01010) ?
		near_mem$imem_instr[19:15] != 5'd0 &&
		IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
		decoded_instr_rs2__h5316 == 5'b01100) ;
  assign alu_outputs___1_val2_capability__h69725 =
	     { 64'hFFFE7E0000011111, branch_target__h5843 } ;
  assign alu_outputs___1_val2_capability__h69741 =
	     { 64'd0, new_addr__h69736 } ;
  assign alu_outputs___1_val2_tag__h69795 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign alu_outputs___2_addr_capability__h62813 =
	     { 123'd0, decoded_instr_rs2__h5316 } ;
  assign alu_outputs_addr_capability__h62734 =
	     { 64'hFFFE7E0000011111, new_pc__h5854 } ;
  assign alu_outputs_addr_capability__h62738 =
	     { 64'hFFFE7E0000011111, next_pc__h5872 } ;
  assign alu_outputs_addr_capability__h62742 =
	     { 64'hFFFE7E0000011111, next_pc__h5895 } ;
  assign alu_outputs_addr_capability__h62754 = { 64'd0, eaddr__h6106 } ;
  assign alu_outputs_addr_tag__h62850 =
	     near_mem$imem_instr[6:0] == 7'b1100011 ||
	     near_mem$imem_instr[6:0] == 7'b1101111 ||
	     near_mem$imem_instr[6:0] == 7'b1100111 ||
	     near_mem$imem_instr[6:0] != 7'b0000011 &&
	     near_mem$imem_instr[6:0] != 7'b0100011 &&
	     near_mem$imem_instr[6:0] != 7'b1110011 &&
	     alu_outputs___1_addr_tag__h62835 ;
  assign alu_outputs_val2_tag__h69810 =
	     near_mem$imem_instr[6:0] == 7'b1100011 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2475 ;
  assign b__h31413 = { 44'd0, x__h31491 } ;
  assign b__h57146 = { 44'd0, x__h57302 } ;
  assign b__h59622 = { 44'd0, x__h59700 } ;
  assign b__h64189 =
	     rs2_val_bypassed_capability1293_AND_INV_0xFFFF_ETC__q6[1:0] ;
  assign b__h64465 =
	     rs1_val_bypassed_capability632_AND_INV_0xFFFFF_ETC__q11[1:0] ;
  assign b_capability__h31279 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       ((stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
		 stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) ?
		  128'd0 :
		  gpr_regfile$read_rs2[127:0]) :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340 ;
  assign b_capability__h31291 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       ((IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
		 IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) ?
		  128'd0 :
		  b_capability__h31279) :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344 ;
  assign b_capability__h6618 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       ((stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
		 stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) ?
		  128'd0 :
		  gpr_regfile$read_rs1[127:0]) :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317 ;
  assign b_capability__h6630 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       ((IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
		 IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) ?
		  128'd0 :
		  b_capability__h6618) :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322 ;
  assign b_val__h64177 = { 45'd0, x__h64406 } ;
  assign b_val__h64453 = { 45'd0, x__h6763 } ;
  assign baseExp__h7036 =
	     (rs1_val_bypassed_capability__h6632[63] ||
	      rs1_val_bypassed_capability__h6632[62] ||
	      rs1_val_bypassed_capability__h6632[61] ||
	      rs1_val_bypassed_capability__h6632[60] ||
	      rs1_val_bypassed_capability__h6632[59] ||
	      rs1_val_bypassed_capability__h6632[58] ||
	      rs1_val_bypassed_capability__h6632[57] ||
	      rs1_val_bypassed_capability__h6632[56] ||
	      rs1_val_bypassed_capability__h6632[55] ||
	      rs1_val_bypassed_capability__h6632[54] ||
	      rs1_val_bypassed_capability__h6632[53] ||
	      rs1_val_bypassed_capability__h6632[52] ||
	      rs1_val_bypassed_capability__h6632[51] ||
	      rs1_val_bypassed_capability__h6632[50] ||
	      rs1_val_bypassed_capability__h6632[49] ||
	      rs1_val_bypassed_capability__h6632[48] ||
	      rs1_val_bypassed_capability__h6632[47] ||
	      rs1_val_bypassed_capability__h6632[46] ||
	      rs1_val_bypassed_capability__h6632[45] ||
	      rs1_val_bypassed_capability__h6632[44] ||
	      rs1_val_bypassed_capability__h6632[43] ||
	      rs1_val_bypassed_capability__h6632[42] ||
	      rs1_val_bypassed_capability__h6632[41] ||
	      rs1_val_bypassed_capability__h6632[40] ||
	      rs1_val_bypassed_capability__h6632[39] ||
	      rs1_val_bypassed_capability__h6632[38] ||
	      rs1_val_bypassed_capability__h6632[37] ||
	      rs1_val_bypassed_capability__h6632[36] ||
	      rs1_val_bypassed_capability__h6632[35] ||
	      rs1_val_bypassed_capability__h6632[34] ||
	      rs1_val_bypassed_capability__h6632[33] ||
	      rs1_val_bypassed_capability__h6632[32] ||
	      rs1_val_bypassed_capability__h6632[31] ||
	      rs1_val_bypassed_capability__h6632[30] ||
	      rs1_val_bypassed_capability__h6632[29] ||
	      rs1_val_bypassed_capability__h6632[28] ||
	      rs1_val_bypassed_capability__h6632[27] ||
	      rs1_val_bypassed_capability__h6632[26] ||
	      rs1_val_bypassed_capability__h6632[25] ||
	      rs1_val_bypassed_capability__h6632[24] ||
	      rs1_val_bypassed_capability__h6632[23] ||
	      rs1_val_bypassed_capability__h6632[22] ||
	      rs1_val_bypassed_capability__h6632[21] ||
	      rs1_val_bypassed_capability__h6632[20]) ?
	       _44_MINUS_leading071__q12[5:0] :
	       6'd0 ;
  assign bot__h32365 = { 44'd0, x__h57025 } ;
  assign bot__h69238 = { 44'd0, x__h64406 } ;
  assign bot__h7019 = { 44'd0, x__h30640 } ;
  assign branch_target__h5843 =
	     near_mem$imem_pc +
	     { {51{near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1[12]}},
	       near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1 } ;
  assign check__h30716 =
	     (!IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1573 ||
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1578) ?
	       5'd19 :
	       (rs1_val_bypassed_capability__h6632[114] ?
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2624 :
		  5'd20) ;
  assign check__h31012 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903) ?
	       5'd18 :
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2632 ;
  assign check__h31629 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903) ?
	       5'd18 :
	       (rs1_val_bypassed_capability__h6632[104] ?
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2637 :
		  5'd22) ;
  assign check__h59354 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1446 ?
	       5'd18 :
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2706 ;
  assign controller_capability__h59382 =
	     decoded_instr_rs2__h5316[4] ?
	       rs1_val_bypassed_capability__h6632 :
	       stage1_rg_ddc[127:0] ;
  assign cpi__h76447 = x__h76446 / 64'd10 ;
  assign cpifrac__h76448 = x__h76446 % 64'd10 ;
  assign csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d3121 =
	     delta_CPI_cycles__h76443 * 64'd10 ;
  assign csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1612 =
	     csr_regfile$read_csr[64] &&
	     !rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 &&
	     !csr_regfile$csr_counter_read_fault &&
	     (near_mem$imem_instr[13:12] != 2'b01 &&
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      near_mem$imem_instr[31:30] != 2'b11) ;
  assign csr_val___1__h70113 =
	     { csr_val__h6361[63],
	       27'd0,
	       csr_val__h6361[35:32],
	       9'd0,
	       csr_val__h6361[22:15],
	       2'd0,
	       csr_val__h6361[12:11],
	       2'd0,
	       csr_val__h6361[8:7],
	       1'd0,
	       csr_val__h6361[5:3],
	       1'd0,
	       csr_val__h6361[1:0] } ;
  assign csr_val___2__h69952 =
	     { csr_val__h6361[63],
	       27'd0,
	       csr_val__h6361[35:32],
	       9'd0,
	       csr_val__h6361[22:11],
	       2'd0,
	       csr_val__h6361[8:7],
	       1'd0,
	       csr_val__h6361[5:3],
	       1'd0,
	       csr_val__h6361[1:0] } ;
  assign csr_val___2__h69961 =
	     { IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[63:36],
	       4'b1010,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2546 } ;
  assign csr_val___2__h70038 =
	     { _theResult_____4__h69954[63:5],
	       1'd0,
	       _theResult_____4__h69954[3:1],
	       1'd0 } ;
  assign csr_val___2__h70053 =
	     { _theResult_____5__h69953[63:9],
	       1'd0,
	       _theResult_____5__h69953[7:6],
	       1'd0,
	       _theResult_____5__h69953[4:2],
	       1'd0,
	       _theResult_____5__h69953[0] } ;
  assign csr_val__h63675 = csr_regfile$read_csr[63:0] | rs1_val__h6356 ;
  assign csr_val__h63680 = csr_regfile$read_csr[63:0] & y__h70183 ;
  assign ct_T__h57067 =
	     rs2_val_bypassed_capability__h31293[104] ?
	       { rs2_val_bypassed_capability__h31293[83:76], 12'h0 } :
	       rs2_val_bypassed_capability__h31293[83:64] ;
  assign cur_verbosity__h1374 =
	     (csr_regfile$read_csr_minstret < cfg_logdelay) ?
	       4'd0 :
	       cfg_verbosity ;
  assign decoded_instr_rs2__h5316 =
	     (near_mem$imem_instr[6:0] == 7'b1011011 &&
	      near_mem$imem_instr[31:25] == 7'b1111110) ?
	       near_mem$imem_instr[11:7] :
	       near_mem$imem_instr[24:20] ;
  assign delta_CPI_cycles__h76443 =
	     csr_regfile$read_csr_mcycle - rg_start_CPI_cycles ;
  assign delta_CPI_instrs___1__h76480 = delta_CPI_instrs__h76444 + 64'd1 ;
  assign delta_CPI_instrs__h76444 =
	     csr_regfile$read_csr_minstret - rg_start_CPI_instrs ;
  assign eaddr__h6106 =
	     rs1_val_bypassed_capability__h6632[63:0] +
	     { {52{near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10[11]}},
	       near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10 } ;
  assign exp__h32359 =
	     (baseExp__h7036 <= rangeExp__h32381) ?
	       rangeExp__h32381 :
	       baseExp__h7036 ;
  assign exp__h7013 =
	     (baseExp__h7036 <= rangeExp__h7035) ?
	       rangeExp__h7035 :
	       baseExp__h7036 ;
  assign funct10__h6030 =
	     { near_mem$imem_instr[31:25], near_mem$imem_instr[14:12] } ;
  assign fv_out_next_pc__h5702 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795 ?
	       alu_outputs_addr_capability__h62851[63:0] :
	       ret_pc__h5871 ;
  assign fv_out_trap_info_exc_code__h62452 =
	     near_mem$imem_exc ?
	       near_mem$imem_exc_code :
	       ((near_mem$imem_instr[6:0] == 7'b1110011 &&
		 near_mem$imem_instr[13:12] != 2'b0 &&
		 NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260) ?
		  5'd2 :
		  alu_outputs_exc_code__h60648) ;
  assign global__h58175 =
	     rs2_val_bypassed_capability__h31293[113] &
	     rs1_val_bypassed_capability__h6632[113] ;
  assign global__h63931 =
	     rs1_val_bypassed_capability__h6632[113] &
	     rs2_val_bypassed_capability__h31293[113] ;
  assign gpr_regfile_RDY_server_reset_response_get__825_ETC___d2837 =
	     gpr_regfile$RDY_server_reset_response_get &&
	     near_mem$RDY_server_reset_response_get &&
	     csr_regfile$RDY_server_reset_response_get &&
	     stage1_f_reset_rsps$EMPTY_N &&
	     stage2_f_reset_rsps$EMPTY_N &&
	     stage3_f_reset_rsps$EMPTY_N &&
	     f_reset_rsps$FULL_N ;
  assign i1__h64259 = 6'd19 + rs2_val_bypassed_capability__h31293[110:105] ;
  assign i1__h64535 = 6'd19 + rs1_val_bypassed_capability__h6632[110:105] ;
  assign i2__h64194 = 6'd20 + rs2_val_bypassed_capability__h31293[110:105] ;
  assign i2__h64470 = 6'd20 + rs1_val_bypassed_capability__h6632[110:105] ;
  assign increase2609_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q21 =
	     increase__h52609 +
	     { 1'd0,
	       _63_MINUS_IF_rs2_val_bypassed_capability1293_BI_ETC__q20[5:0] } ;
  assign increase6224_PLUS_0_CONCAT_63_MINUS_IF_near_me_ETC__q18 =
	     increase__h26224 +
	     { 1'd0,
	       _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q17[5:0] } ;
  assign increase__h26224 =
	     INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[0] ?
	       7'd0 :
	       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[1] ?
		  7'd1 :
		  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[2] ?
		     7'd2 :
		     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[3] ?
			7'd3 :
			(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[4] ?
			   7'd4 :
			   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[5] ?
			      7'd5 :
			      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[6] ?
				 7'd6 :
				 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[7] ?
				    7'd7 :
				    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[8] ?
				       7'd8 :
				       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[9] ?
					  7'd9 :
					  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[10] ?
					     7'd10 :
					     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[11] ?
						7'd11 :
						(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[12] ?
						   7'd12 :
						   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[13] ?
						      7'd13 :
						      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[14] ?
							 7'd14 :
							 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[15] ?
							    7'd15 :
							    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[16] ?
							       7'd16 :
							       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[17] ?
								  7'd17 :
								  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[18] ?
								     7'd18 :
								     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[19] ?
									7'd19 :
									(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[20] ?
									   7'd20 :
									   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[21] ?
									      7'd21 :
									      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[22] ?
										 7'd22 :
										 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[23] ?
										    7'd23 :
										    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[24] ?
										       7'd24 :
										       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[25] ?
											  7'd25 :
											  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[26] ?
											     7'd26 :
											     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[27] ?
												7'd27 :
												(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[28] ?
												   7'd28 :
												   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[29] ?
												      7'd29 :
												      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[30] ?
													 7'd30 :
													 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[31] ?
													    7'd31 :
													    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[32] ?
													       7'd32 :
													       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[33] ?
														  7'd33 :
														  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[34] ?
														     7'd34 :
														     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[35] ?
															7'd35 :
															(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[36] ?
															   7'd36 :
															   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[37] ?
															      7'd37 :
															      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[38] ?
																 7'd38 :
																 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[39] ?
																    7'd39 :
																    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[40] ?
																       7'd40 :
																       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[41] ?
																	  7'd41 :
																	  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[42] ?
																	     7'd42 :
																	     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[43] ?
																		7'd43 :
																		(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[44] ?
																		   7'd44 :
																		   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[45] ?
																		      7'd45 :
																		      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[46] ?
																			 7'd46 :
																			 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[47] ?
																			    7'd47 :
																			    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[48] ?
																			       7'd48 :
																			       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[49] ?
																				  7'd49 :
																				  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[50] ?
																				     7'd50 :
																				     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[51] ?
																					7'd51 :
																					(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[52] ?
																					   7'd52 :
																					   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[53] ?
																					      7'd53 :
																					      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[54] ?
																						 7'd54 :
																						 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[55] ?
																						    7'd55 :
																						    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[56] ?
																						       7'd56 :
																						       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[57] ?
																							  7'd57 :
																							  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[58] ?
																							     7'd58 :
																							     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[59] ?
																								7'd59 :
																								(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[60] ?
																								   7'd60 :
																								   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[61] ?
																								      7'd61 :
																								      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[62] ?
																									 7'd62 :
																									 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d712[63] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign increase__h52609 =
	     INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[0] ?
	       7'd0 :
	       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[1] ?
		  7'd1 :
		  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[2] ?
		     7'd2 :
		     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[3] ?
			7'd3 :
			(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[4] ?
			   7'd4 :
			   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[5] ?
			      7'd5 :
			      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[6] ?
				 7'd6 :
				 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[7] ?
				    7'd7 :
				    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[8] ?
				       7'd8 :
				       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[9] ?
					  7'd9 :
					  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[10] ?
					     7'd10 :
					     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[11] ?
						7'd11 :
						(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[12] ?
						   7'd12 :
						   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[13] ?
						      7'd13 :
						      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[14] ?
							 7'd14 :
							 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[15] ?
							    7'd15 :
							    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[16] ?
							       7'd16 :
							       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[17] ?
								  7'd17 :
								  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[18] ?
								     7'd18 :
								     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[19] ?
									7'd19 :
									(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[20] ?
									   7'd20 :
									   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[21] ?
									      7'd21 :
									      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[22] ?
										 7'd22 :
										 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[23] ?
										    7'd23 :
										    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[24] ?
										       7'd24 :
										       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[25] ?
											  7'd25 :
											  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[26] ?
											     7'd26 :
											     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[27] ?
												7'd27 :
												(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[28] ?
												   7'd28 :
												   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[29] ?
												      7'd29 :
												      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[30] ?
													 7'd30 :
													 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[31] ?
													    7'd31 :
													    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[32] ?
													       7'd32 :
													       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[33] ?
														  7'd33 :
														  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[34] ?
														     7'd34 :
														     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[35] ?
															7'd35 :
															(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[36] ?
															   7'd36 :
															   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[37] ?
															      7'd37 :
															      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[38] ?
																 7'd38 :
																 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[39] ?
																    7'd39 :
																    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[40] ?
																       7'd40 :
																       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[41] ?
																	  7'd41 :
																	  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[42] ?
																	     7'd42 :
																	     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[43] ?
																		7'd43 :
																		(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[44] ?
																		   7'd44 :
																		   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[45] ?
																		      7'd45 :
																		      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[46] ?
																			 7'd46 :
																			 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[47] ?
																			    7'd47 :
																			    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[48] ?
																			       7'd48 :
																			       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[49] ?
																				  7'd49 :
																				  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[50] ?
																				     7'd50 :
																				     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[51] ?
																					7'd51 :
																					(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[52] ?
																					   7'd52 :
																					   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[53] ?
																					      7'd53 :
																					      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[54] ?
																						 7'd54 :
																						 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[55] ?
																						    7'd55 :
																						    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[56] ?
																						       7'd56 :
																						       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[57] ?
																							  7'd57 :
																							  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[58] ?
																							     7'd58 :
																							     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[59] ?
																								7'd59 :
																								(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[60] ?
																								   7'd60 :
																								   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[61] ?
																								      7'd61 :
																								      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[62] ?
																									 7'd62 :
																									 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1227[63] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign leading__h7071 =
	     rs1_val_bypassed_capability__h6632[63] ?
	       7'd0 :
	       (rs1_val_bypassed_capability__h6632[62] ?
		  7'd1 :
		  (rs1_val_bypassed_capability__h6632[61] ?
		     7'd2 :
		     (rs1_val_bypassed_capability__h6632[60] ?
			7'd3 :
			(rs1_val_bypassed_capability__h6632[59] ?
			   7'd4 :
			   (rs1_val_bypassed_capability__h6632[58] ?
			      7'd5 :
			      (rs1_val_bypassed_capability__h6632[57] ?
				 7'd6 :
				 (rs1_val_bypassed_capability__h6632[56] ?
				    7'd7 :
				    (rs1_val_bypassed_capability__h6632[55] ?
				       7'd8 :
				       (rs1_val_bypassed_capability__h6632[54] ?
					  7'd9 :
					  (rs1_val_bypassed_capability__h6632[53] ?
					     7'd10 :
					     (rs1_val_bypassed_capability__h6632[52] ?
						7'd11 :
						(rs1_val_bypassed_capability__h6632[51] ?
						   7'd12 :
						   (rs1_val_bypassed_capability__h6632[50] ?
						      7'd13 :
						      (rs1_val_bypassed_capability__h6632[49] ?
							 7'd14 :
							 (rs1_val_bypassed_capability__h6632[48] ?
							    7'd15 :
							    (rs1_val_bypassed_capability__h6632[47] ?
							       7'd16 :
							       (rs1_val_bypassed_capability__h6632[46] ?
								  7'd17 :
								  (rs1_val_bypassed_capability__h6632[45] ?
								     7'd18 :
								     (rs1_val_bypassed_capability__h6632[44] ?
									7'd19 :
									(rs1_val_bypassed_capability__h6632[43] ?
									   7'd20 :
									   (rs1_val_bypassed_capability__h6632[42] ?
									      7'd21 :
									      (rs1_val_bypassed_capability__h6632[41] ?
										 7'd22 :
										 (rs1_val_bypassed_capability__h6632[40] ?
										    7'd23 :
										    (rs1_val_bypassed_capability__h6632[39] ?
										       7'd24 :
										       (rs1_val_bypassed_capability__h6632[38] ?
											  7'd25 :
											  (rs1_val_bypassed_capability__h6632[37] ?
											     7'd26 :
											     (rs1_val_bypassed_capability__h6632[36] ?
												7'd27 :
												(rs1_val_bypassed_capability__h6632[35] ?
												   7'd28 :
												   (rs1_val_bypassed_capability__h6632[34] ?
												      7'd29 :
												      (rs1_val_bypassed_capability__h6632[33] ?
													 7'd30 :
													 (rs1_val_bypassed_capability__h6632[32] ?
													    7'd31 :
													    (rs1_val_bypassed_capability__h6632[31] ?
													       7'd32 :
													       (rs1_val_bypassed_capability__h6632[30] ?
														  7'd33 :
														  (rs1_val_bypassed_capability__h6632[29] ?
														     7'd34 :
														     (rs1_val_bypassed_capability__h6632[28] ?
															7'd35 :
															(rs1_val_bypassed_capability__h6632[27] ?
															   7'd36 :
															   (rs1_val_bypassed_capability__h6632[26] ?
															      7'd37 :
															      (rs1_val_bypassed_capability__h6632[25] ?
																 7'd38 :
																 (rs1_val_bypassed_capability__h6632[24] ?
																    7'd39 :
																    (rs1_val_bypassed_capability__h6632[23] ?
																       7'd40 :
																       (rs1_val_bypassed_capability__h6632[22] ?
																	  7'd41 :
																	  (rs1_val_bypassed_capability__h6632[21] ?
																	     7'd42 :
																	     (rs1_val_bypassed_capability__h6632[20] ?
																		7'd43 :
																		(rs1_val_bypassed_capability__h6632[19] ?
																		   7'd44 :
																		   (rs1_val_bypassed_capability__h6632[18] ?
																		      7'd45 :
																		      (rs1_val_bypassed_capability__h6632[17] ?
																			 7'd46 :
																			 (rs1_val_bypassed_capability__h6632[16] ?
																			    7'd47 :
																			    (rs1_val_bypassed_capability__h6632[15] ?
																			       7'd48 :
																			       (rs1_val_bypassed_capability__h6632[14] ?
																				  7'd49 :
																				  (rs1_val_bypassed_capability__h6632[13] ?
																				     7'd50 :
																				     (rs1_val_bypassed_capability__h6632[12] ?
																					7'd51 :
																					(rs1_val_bypassed_capability__h6632[11] ?
																					   7'd52 :
																					   (rs1_val_bypassed_capability__h6632[10] ?
																					      7'd53 :
																					      (rs1_val_bypassed_capability__h6632[9] ?
																						 7'd54 :
																						 (rs1_val_bypassed_capability__h6632[8] ?
																						    7'd55 :
																						    (rs1_val_bypassed_capability__h6632[7] ?
																						       7'd56 :
																						       (rs1_val_bypassed_capability__h6632[6] ?
																							  7'd57 :
																							  (rs1_val_bypassed_capability__h6632[5] ?
																							     7'd58 :
																							     (rs1_val_bypassed_capability__h6632[4] ?
																								7'd59 :
																								(rs1_val_bypassed_capability__h6632[3] ?
																								   7'd60 :
																								   (rs1_val_bypassed_capability__h6632[2] ?
																								      7'd61 :
																								      (rs1_val_bypassed_capability__h6632[1] ?
																									 7'd62 :
																									 (rs1_val_bypassed_capability__h6632[0] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign lower__h57144 =
	     { 44'd0, rs2_val_bypassed_capability__h31293[83:64] } ;
  assign ms_spp__h3168 = csr_regfile$read_mstatus[8] ? 2'b01 : 2'b0 ;
  assign ms_sxl__h3157 =
	     csr_regfile$read_misa[18] ? csr_regfile$read_misa[27:26] : 2'd0 ;
  assign ms_uxl__h3158 =
	     csr_regfile$read_misa[20] ? csr_regfile$read_misa[27:26] : 2'd0 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2566 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd0 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2569 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd1 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2572 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd2 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2575 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd3 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2578 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd4 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2581 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd5 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2584 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd6 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2587 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd7 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2590 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd8 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2593 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd9 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2596 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd3 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd4 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd5 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd6 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd7 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd8 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 !=
	     4'd9 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 =
	     near_mem$imem_exc ||
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 &&
	     NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 ;
  assign near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_8_ETC___d1815 =
	     near_mem$imem_instr[11:7] == 5'd0 &&
	     (rg_cur_priv == 2'b11 ||
	      rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[20]) &&
	     near_mem$imem_instr[31:25] == 7'b0001001 ;
  assign near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 =
	     near_mem$imem_instr[13:12] == 2'b0 ||
	     !csr_regfile$read_csr[64] ||
	     rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 ||
	     csr_regfile$csr_counter_read_fault ||
	     (near_mem$imem_instr[13:12] == 2'b01 ||
	      near_mem$imem_instr[19:15] != 5'd0) &&
	     near_mem$imem_instr[31:30] == 2'b11 ||
	     near_mem$imem_instr[31:20] == 12'h180 &&
	     csr_regfile$read_mstatus[20] ;
  assign near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1631 =
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     (near_mem$imem_instr[6:0] != 7'b0110011 ||
	      !near_mem$imem_instr[30]) ||
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem$imem_instr[6:0] == 7'b0110011 &&
	     near_mem$imem_instr[30] ||
	     near_mem$imem_instr[14:12] == 3'b010 ||
	     near_mem$imem_instr[14:12] == 3'b011 ||
	     near_mem$imem_instr[14:12] == 3'b100 ||
	     near_mem$imem_instr[14:12] == 3'b110 ||
	     near_mem$imem_instr[14:12] == 3'b111 ;
  assign near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1780 =
	     (near_mem$imem_instr[14:12] == 3'b0 ||
	      near_mem$imem_instr[14:12] == 3'b001 ||
	      near_mem$imem_instr[14:12] == 3'b100 ||
	      near_mem$imem_instr[14:12] == 3'b101 ||
	      near_mem$imem_instr[14:12] == 3'b110 ||
	      near_mem$imem_instr[14:12] == 3'b111) &&
	     (IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 ||
	      !branch_target__h5843[1]) ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1377 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d957 ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d959 ||
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1367 ||
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1371 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1394 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     rs2_val_bypassed_capability__h31293[104] &&
	     (!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1385 ||
	      !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1390) ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d862 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d472 ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d478 ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d480 ||
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d852 ||
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d930 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903 ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     rs2_val_bypassed_capability__h31293[104] ||
	     NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d928 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d944 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903 ||
	     !rs1_val_bypassed_capability__h6632[104] ||
	     rs2_val_bypassed_capability__h31293[104] ||
	     !IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937 ||
	     !b_capability__h31291[122] ;
  assign near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d3003 =
	     near_mem$imem_instr[31:25] == 7'b0000001 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1715 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     near_mem$imem_instr[19:15] != 5'd0 ;
  assign near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2462 =
	     { near_mem$imem_instr[6:0] == 7'b1101111 ||
	       near_mem$imem_instr[6:0] == 7'b1100111 ||
	       near_mem$imem_instr[6:0] != 7'b0010011 &&
	       near_mem$imem_instr[6:0] != 7'b0110011 &&
	       near_mem$imem_instr[6:0] != 7'b0011011 &&
	       near_mem$imem_instr[6:0] != 7'b0111011 &&
	       near_mem$imem_instr[6:0] != 7'b0110111 &&
	       near_mem$imem_instr[6:0] != 7'b0010111 &&
	       near_mem$imem_instr[6:0] != 7'b1110011 &&
	       alu_outputs___1_val1_tag__h64025,
	       CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q37 } ;
  assign near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564 =
	     near_mem$imem_pc +
	     { {43{near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q23[20]}},
	       near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q23 } ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599 =
	     near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1541 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798 =
	     near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2979 =
	     near_mem$imem_valid &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 !=
	      2'd1 ||
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 &&
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2980 =
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2979 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) ;
  assign near_memimem_instr_BITS_31_TO_20__q24 = near_mem$imem_instr[31:20] ;
  assign near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10 =
	     { near_mem$imem_instr[31:25], near_mem$imem_instr[11:7] } ;
  assign near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1 =
	     { near_mem$imem_instr[31],
	       near_mem$imem_instr[7],
	       near_mem$imem_instr[30:25],
	       near_mem$imem_instr[11:8],
	       1'b0 } ;
  assign near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q23 =
	     { near_mem$imem_instr[31],
	       near_mem$imem_instr[19:12],
	       near_mem$imem_instr[20],
	       near_mem$imem_instr[30:21],
	       1'b0 } ;
  assign newVal__h30690 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       { 44'd0, rs1_val_bypassed_capability__h6632[83:64] } :
	       64'hFFFFFFFFFFFFFFFF ;
  assign newVal__h30696 =
	     64'b0000000000000000000000000000000000000000000000000000000000000001 <<
	     rs1_val_bypassed_capability__h6632[110:105] ;
  assign newVal__h30705 =
	     rs1_val_bypassed_capability__h6632[63:0] -
	     result4452_PLUS_b_val4453__q32[63:0] ;
  assign new_addr__h63837 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       rd_val__h65222 :
	       (near_mem$imem_instr[30] ? rd_val__h65338 : rd_val__h65316) ;
  assign new_addr__h63841 =
	     (near_mem$imem_instr[14:12] == 3'b0 &&
	      (near_mem$imem_instr[6:0] != 7'b0110011 ||
	       !near_mem$imem_instr[30])) ?
	       rd_val___1__h61394 :
	       _theResult_____1_snd__h61407 ;
  assign new_addr__h63845 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       rd_val___1__h65533 :
	       _theResult___snd__h61518 ;
  assign new_addr__h63966 =
	     rs1_val_bypassed_capability__h6632[63:0] -
	     result4176_PLUS_b_val4177__q33[63:0] ;
  assign new_addr__h64004 =
	     _0_CONCAT_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d2431 ?
	       64'b0000000000000000000000000000000000000000000000000000000000000001 :
	       64'b0 ;
  assign new_addr__h69736 =
	     (near_mem$imem_instr[31:20] == 12'h300) ?
	       csr_val___2__h69961 :
	       csr_val__h6361 ;
  assign new_curs__h31905 =
	     rs2_val_bypassed_capability__h31293[63:0] +
	     result4452_PLUS_b_val4453__q32[63:0] ;
  assign new_offset3870_BITS_31_TO_0__q25 = new_offset__h63870[31:0] ;
  assign new_offset__h63870 =
	     rs1_val_bypassed_capability__h6632[63:0] +
	     SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1566 ;
  assign new_pc__h5854 =
	     IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 ?
	       branch_target__h5843 :
	       ret_pc__h5871 ;
  assign new_pcc_capability__h58177 =
	     { rs2_val_bypassed_capability__h31293[127:114],
	       global__h58175,
	       rs2_val_bypassed_capability__h31293[112:105],
	       1'b0,
	       rs2_val_bypassed_capability__h31293[103:0] } ;
  assign newcap__h31871 =
	     { newperms__h31870, rs1_val_bypassed_capability__h6632[112:0] } ;
  assign newperms__h31870 =
	     rs2_val_bypassed_capability__h31293[14:0] &
	     rs1_val_bypassed_capability__h6632[127:113] ;
  assign next_pc__h5872 =
	     { near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564[63:1],
	       1'd0 } ;
  assign next_pc__h5895 = { new_offset__h63870[63:1], 1'd0 } ;
  assign old_lower__h6726 = { 44'd0, x__h6763 } ;
  assign old_top__h6727 = { 44'd0, x__h6884 } ;
  assign out__h59128 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d903 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (rs2_val_bypassed_capability__h31293[104] ?
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2690 :
		  5'd22) ;
  assign out_val_capability__h57183 =
	     { rs1_val_bypassed_capability__h6632[127:64], lower__h57144 } ;
  assign output_stage2___1_bypass_rd_val_capability__h4613 =
	     (stage2_rg_stage2[393:389] == 5'd0) ?
	       stage2_rg_stage2[256:129] :
	       { 64'd0, near_mem$dmem_word64 } ;
  assign output_stage2___1_bypass_rd_val_tag__h4612 =
	     stage2_rg_stage2[393:389] == 5'd0 && stage2_rg_stage2[257] ;
  assign pcc_capability__h58049 = { 64'hFFFE7E0000011111, near_mem$imem_pc } ;
  assign perms__h60601 =
	     rs2_val_bypassed_capability__h31293[127:113] & y__h64096 ;
  assign r__h64255 = x__h31491 - 20'd4096 ;
  assign r__h64531 = x__h57302 - 20'd4096 ;
  assign rangeExp__h32381 =
	     NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1224 ?
	       increase2609_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q21[5:0] :
	       _63_MINUS_IF_rs2_val_bypassed_capability1293_BI_ETC__q20[5:0] ;
  assign rangeExp__h7035 =
	     NOT_0_CONCAT_near_mem_imem_instr__20_BIT_31_55_ETC___d709 ?
	       increase6224_PLUS_0_CONCAT_63_MINUS_IF_near_me_ETC__q18[5:0] :
	       _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q17[5:0] ;
  assign range__h6677 = { 52'd0, near_mem$imem_instr[31:20] } ;
  assign rd_val___1__h61394 =
	     rs1_val_bypassed_capability__h6632[63:0] +
	     _theResult___snd__h65436 ;
  assign rd_val___1__h61402 =
	     rs1_val_bypassed_capability__h6632[63:0] -
	     _theResult___snd__h65436 ;
  assign rd_val___1__h61409 =
	     ((rs1_val_bypassed_capability__h6632[63:0] ^
	       64'h8000000000000000) <
	      (_theResult___snd__h65436 ^ 64'h8000000000000000)) ?
	       64'd1 :
	       64'd0 ;
  assign rd_val___1__h61416 =
	     (rs1_val_bypassed_capability__h6632[63:0] <
	      _theResult___snd__h65436) ?
	       64'd1 :
	       64'd0 ;
  assign rd_val___1__h61423 =
	     rs1_val_bypassed_capability__h6632[63:0] ^
	     _theResult___snd__h65436 ;
  assign rd_val___1__h61430 =
	     rs1_val_bypassed_capability__h6632[63:0] |
	     _theResult___snd__h65436 ;
  assign rd_val___1__h65533 =
	     { {32{new_offset3870_BITS_31_TO_0__q25[31]}},
	       new_offset3870_BITS_31_TO_0__q25 } ;
  assign rd_val___1__h65585 = { {32{x__h65588[31]}}, x__h65588 } ;
  assign rd_val___1__h65639 = { {32{x__h65642[31]}}, x__h65642 } ;
  assign rd_val___1__h65668 = { {32{tmp__h65667[31]}}, tmp__h65667 } ;
  assign rd_val___1__h65766 =
	     { {32{rs1_val_bypassed_capability632_BITS_31_TO_0_PL_ETC__q15[31]}},
	       rs1_val_bypassed_capability632_BITS_31_TO_0_PL_ETC__q15 } ;
  assign rd_val___1__h65854 =
	     { {32{rs1_val_bypassed_capability632_BITS_31_TO_0_MI_ETC__q16[31]}},
	       rs1_val_bypassed_capability632_BITS_31_TO_0_MI_ETC__q16 } ;
  assign rd_val___1__h65860 = { {32{x__h65863[31]}}, x__h65863 } ;
  assign rd_val___1__h65905 = { {32{x__h65908[31]}}, x__h65908 } ;
  assign rd_val__h6051 = { {32{v32__h6049[31]}}, v32__h6049 } ;
  assign rd_val__h6068 = near_mem$imem_pc + rd_val__h6051 ;
  assign rd_val__h6357 =
	     (near_mem$imem_instr[11:7] == 5'd0) ?
	       64'd0 :
	       csr_regfile$read_csr[63:0] ;
  assign rd_val__h65222 =
	     rs1_val_bypassed_capability__h6632[63:0] << shamt__h5945 ;
  assign rd_val__h65316 =
	     rs1_val_bypassed_capability__h6632[63:0] >> shamt__h5945 ;
  assign rd_val__h65338 =
	     rs1_val_bypassed_capability__h6632[63:0] >> shamt__h5945 |
	     ~(64'hFFFFFFFFFFFFFFFF >> shamt__h5945) &
	     {64{rs1_val_bypassed_capability632_BITS_63_TO_0__q13[63]}} ;
  assign requested_top__h32054 =
	     rs1_val_bypassed_capability__h6632[63:0] +
	     rs2_val_bypassed_capability__h31293[63:0] ;
  assign requested_top__h6725 =
	     rs1_val_bypassed_capability__h6632[63:0] + range__h6677 ;
  assign result4176_PLUS_b_val4177__q33 = result__h64176 + b_val__h64177 ;
  assign result4452_PLUS_b_val4453__q32 = result__h64452 + b_val__h64453 ;
  assign result__h64176 = { 63'd0, x__h64184 } ;
  assign result__h64452 = { 63'd0, x__h64460 } ;
  assign ret_capability__h63873 =
	     { rs1_val_bypassed_capability__h6632[127:111],
	       exp__h7013,
	       rs1_val_bypassed_capability__h6632[104],
	       rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q19[19:0],
	       rs1_val_bypassed_capability__h6632[83:0] } ;
  assign ret_capability__h63942 =
	     { rs1_val_bypassed_capability__h6632[127:111],
	       exp__h32359,
	       rs1_val_bypassed_capability__h6632[104],
	       rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q22[19:0],
	       rs1_val_bypassed_capability__h6632[83:0] } ;
  assign ret_pc__h5871 = near_mem$imem_pc + 64'd4 ;
  assign rg_cur_priv_9_EQ_0b11_810_OR_rg_cur_priv_9_EQ__ETC___d1834 =
	     (rg_cur_priv == 2'b11 ||
	      rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[21] ||
	      rg_cur_priv == 2'b0 && csr_regfile$read_misa[13]) &&
	     near_mem$imem_instr[31:20] == 12'b000100000101 ;
  assign rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1437 =
	     rg_cur_priv < decoded_instr_rs2__h5316[4:3] ;
  assign rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 =
	     rg_cur_priv < near_mem$imem_instr[29:28] ;
  assign rg_halt_931_OR_csr_regfile_interrupt_pending_r_ETC___d3074 =
	     rg_halt || csr_regfile$interrupt_pending[5] ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd2 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ||
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2937 ||
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) ;
  assign rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3086 =
	     rg_state == 3'd2 && !rg_halt &&
	     !csr_regfile$interrupt_pending[5] &&
	     !stage3_rg_full ;
  assign rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3099 =
	     rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3086 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd3 ;
  assign rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3105 =
	     rg_state_7_EQ_2_842_AND_NOT_rg_halt_931_932_AN_ETC___d3086 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd2 ;
  assign rg_state_7_EQ_2_842_AND_stage1_rg_full_16_AND__ETC___d3136 =
	     rg_state == 3'd2 && stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d3131 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     !stage3_rg_full ;
  assign rg_state_7_EQ_2_842_AND_stage1_rg_full_16_OR_N_ETC___d2945 =
	     rg_state == 3'd2 &&
	     (stage1_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) &&
	     (stage3_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd3) &&
	     (stage3_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      !stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2926) &&
	     (NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2942 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) ;
  assign rs1_val__h6356 =
	     near_mem$imem_instr[14] ?
	       { 59'd0, near_mem$imem_instr[19:15] } :
	       rs1_val_bypassed_capability__h6632[63:0] ;
  assign rs1_val_bypassed_capability632_AND_INV_0xFFFFF_ETC__q11 =
	     (rs1_val_bypassed_capability__h6632 &
	      ~(128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE << 63)) >>
	     i2__h64470 ;
  assign rs1_val_bypassed_capability632_BITS_31_TO_0_MI_ETC__q16 =
	     rs1_val_bypassed_capability__h6632[31:0] -
	     rs2_val_bypassed_capability__h31293[31:0] ;
  assign rs1_val_bypassed_capability632_BITS_31_TO_0_PL_ETC__q15 =
	     rs1_val_bypassed_capability__h6632[31:0] +
	     rs2_val_bypassed_capability__h31293[31:0] ;
  assign rs1_val_bypassed_capability632_BITS_31_TO_0_SR_ETC__q9 =
	     rs1_val_bypassed_capability__h6632[31:0] >>
	     rs2_val_bypassed_capability__h31293[4:0] |
	     ~(32'hFFFFFFFF >> rs2_val_bypassed_capability__h31293[4:0]) &
	     {32{rs1_val_bypassed_capability632_BITS_31_TO_0__q8[31]}} ;
  assign rs1_val_bypassed_capability632_BITS_31_TO_0__q8 =
	     rs1_val_bypassed_capability__h6632[31:0] ;
  assign rs1_val_bypassed_capability632_BITS_63_TO_0_AN_ETC__q14 =
	     (rs1_val_bypassed_capability__h6632[63:0] &
	      ~(64'hFFFFFFFFFFFFFFFE << i1__h64535)) >>
	     rs1_val_bypassed_capability__h6632[110:105] ;
  assign rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q19 =
	     rs1_val_bypassed_capability__h6632[63:0] >> exp__h7013 ;
  assign rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q22 =
	     rs1_val_bypassed_capability__h6632[63:0] >> exp__h32359 ;
  assign rs1_val_bypassed_capability632_BITS_63_TO_0__q13 =
	     rs1_val_bypassed_capability__h6632[63:0] ;
  assign rs1_val_bypassed_capability__h6632 =
	     (near_mem$imem_instr[19:15] == 5'd0) ?
	       128'd0 :
	       b_capability__h6630 ;
  assign rs2_val_bypassed_capability1293_AND_INV_0xFFFF_ETC__q6 =
	     (rs2_val_bypassed_capability__h31293 &
	      ~(128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE << 63)) >>
	     i2__h64194 ;
  assign rs2_val_bypassed_capability1293_BITS_63_TO_0_A_ETC__q7 =
	     (rs2_val_bypassed_capability__h31293[63:0] &
	      ~(64'hFFFFFFFFFFFFFFFE << i1__h64259)) >>
	     rs2_val_bypassed_capability__h31293[110:105] ;
  assign rs2_val_bypassed_capability__h31293 =
	     (decoded_instr_rs2__h5316 == 5'b0) ?
	       128'd0 :
	       b_capability__h31291 ;
  assign shamt__h5945 =
	     (near_mem$imem_instr[6:0] == 7'b0010011) ?
	       near_mem$imem_instr[25:20] :
	       rs2_val_bypassed_capability__h31293[5:0] ;
  assign spliced_bits__h70009 =
	     csr_regfile$read_misa[20] ?
	       (csr_regfile$read_misa[18] ?
		  ((IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[12:11] ==
		    2'b10) ?
		     2'b01 :
		     IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[12:11]) :
		  ((IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[12:11] ==
		    2'b11) ?
		     IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[12:11] :
		     2'b0)) :
	       2'b11 ;
  assign spp__h69958 =
	     { 1'd0,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2529[8] } ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1901 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd0 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1905 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd1 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1909 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd2 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1913 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd3 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1917 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd4 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1921 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd5 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1925 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd6 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1929 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd7 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1933 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd8 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1937 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1897 ==
	     4'd9 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2002 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 ==
	     3'd0 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2006 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 ==
	     3'd1 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2010 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 ==
	     3'd2 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2014 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1614 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1777 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 ==
	     3'd3 ;
  assign stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186 =
	     { (stage2_rg_stage2[396:394] == 3'd3 ||
		stage2_rg_stage2[396:394] == 3'd0) &&
	       stage2_rg_stage2[257],
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 } ;
  assign stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 =
	     stage3_rg_stage3_BITS_136_TO_129__q4[decoded_instr_rs2__h5316[2:0]] ;
  assign stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 =
	     stage3_rg_stage3_BITS_136_TO_129__q4[near_mem$imem_instr[17:15]] ;
  assign stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 =
	     stage3_rg_stage3[138:137] == decoded_instr_rs2__h5316[4:3] ;
  assign stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 =
	     stage3_rg_stage3[138:137] == near_mem$imem_instr[19:18] ;
  assign stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 =
	     stage3_rg_stage3[285:279] == 7'b1011011 &&
	     stage3_rg_stage3[293:291] == 3'b0 &&
	     (stage3_rg_stage3[303:299] == 5'h0D ||
	      stage3_rg_stage3[303:299] == 5'h10) &&
	     stage3_rg_stage3[310:304] == 7'b1111111 ;
  assign stage3_rg_stage3_BITS_136_TO_129__q4 = stage3_rg_stage3[136:129] ;
  assign tmp__h65667 =
	     rs1_val_bypassed_capability__h6632[31:0] >>
	     near_mem$imem_instr[24:20] |
	     ~(32'hFFFFFFFF >> near_mem$imem_instr[24:20]) &
	     {32{rs1_val_bypassed_capability632_BITS_31_TO_0__q8[31]}} ;
  assign top__h32364 = { 44'd0, x__h32375 } ;
  assign top__h69237 = { 44'd0, x__h69248 } ;
  assign top__h7018 = { 44'd0, x__h7029 } ;
  assign trap__h32010 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       _theResult___fst__h32051 ;
  assign trap__h6679 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       _theResult___fst__h6722 ;
  assign upper__h30725 = x__h30893 - 64'd1 ;
  assign upper__h31412 = x__h31580 - 64'd1 ;
  assign upper__h57145 = x__h57390 - 64'd1 ;
  assign upper__h58522 = x__h58690 - 64'd1 ;
  assign upper__h59621 = x__h59789 - 64'd1 ;
  assign upper__h59837 = x__h60005 - 64'd1 ;
  assign upper__h60053 = x__h60221 - 64'd1 ;
  assign upper__h60269 = x__h60437 - 64'd1 ;
  assign v32__h6049 = { near_mem$imem_instr[31:12], 12'h0 } ;
  assign value__h62699 =
	     near_mem$imem_exc ?
	       near_mem$imem_pc :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2801 ;
  assign x__h16033 = x__h16045 + y__h16046 ;
  assign x__h16045 = x__h16057 + y__h16058 ;
  assign x__h16057 = x__h16069 + y__h16070 ;
  assign x__h16069 = x__h16081 + y__h16082 ;
  assign x__h16081 = x__h16093 + y__h16094 ;
  assign x__h16093 = x__h16105 + y__h16106 ;
  assign x__h16105 = x__h16117 + y__h16118 ;
  assign x__h16117 = x__h16129 + y__h16130 ;
  assign x__h16129 = x__h16141 + y__h16142 ;
  assign x__h16141 = x__h16153 + y__h16154 ;
  assign x__h16153 = { 6'd0, near_mem$imem_instr[31] } ;
  assign x__h18283 =
	     64'hFFFFFFFFFFFFFFFF <<
	     _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q17[5:0] ;
  assign x__h26311 = ~x__h26312 ;
  assign x__h26312 =
	     rs1_val_bypassed_capability__h6632[63:0] | requested_top__h6725 ;
  assign x__h30640 =
	     rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q19[19:0] <<
	     exp__h7013 ;
  assign x__h30729 =
	     rs1_val_bypassed_capability__h6632[63:0] >>
	     rs1_val_bypassed_capability__h6632[110:105] ;
  assign x__h30876 =
	     upper__h30725 >> rs1_val_bypassed_capability__h6632[110:105] ;
  assign x__h30893 = rs1_val_bypassed_capability__h6632[63:0] + 64'd4 ;
  assign x__h31416 =
	     rs2_val_bypassed_capability__h31293[63:0] >>
	     rs2_val_bypassed_capability__h31293[110:105] ;
  assign x__h31491 =
	     rs2_val_bypassed_capability__h31293[104] ?
	       { rs2_val_bypassed_capability__h31293[103:96], 12'h0 } :
	       rs2_val_bypassed_capability__h31293[103:84] ;
  assign x__h31563 =
	     upper__h31412 >> rs2_val_bypassed_capability__h31293[110:105] ;
  assign x__h31580 = rs2_val_bypassed_capability__h31293[63:0] + 64'd1 ;
  assign x__h32375 =
	     rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q22[19:0] +
	     20'd1 <<
	     exp__h32359 ;
  assign x__h41379 = x__h41391 + y__h41392 ;
  assign x__h41391 = x__h41403 + y__h41404 ;
  assign x__h41403 = x__h41415 + y__h41416 ;
  assign x__h41415 = x__h41427 + y__h41428 ;
  assign x__h41427 = x__h41439 + y__h41440 ;
  assign x__h41439 = x__h41451 + y__h41452 ;
  assign x__h41451 = x__h41463 + y__h41464 ;
  assign x__h41463 = x__h41475 + y__h41476 ;
  assign x__h41475 = x__h41487 + y__h41488 ;
  assign x__h41487 = x__h41499 + y__h41500 ;
  assign x__h41499 = x__h41511 + y__h41512 ;
  assign x__h41511 = x__h41523 + y__h41524 ;
  assign x__h41523 = x__h41535 + y__h41536 ;
  assign x__h41535 = x__h41547 + y__h41548 ;
  assign x__h41547 = x__h41559 + y__h41560 ;
  assign x__h41559 = x__h41571 + y__h41572 ;
  assign x__h41571 = x__h41583 + y__h41584 ;
  assign x__h41583 = x__h41595 + y__h41596 ;
  assign x__h41595 = x__h41607 + y__h41608 ;
  assign x__h41607 = x__h41619 + y__h41620 ;
  assign x__h41619 = x__h41631 + y__h41632 ;
  assign x__h41631 = x__h41643 + y__h41644 ;
  assign x__h41643 = x__h41655 + y__h41656 ;
  assign x__h41655 = x__h41667 + y__h41668 ;
  assign x__h41667 = x__h41679 + y__h41680 ;
  assign x__h41679 = x__h41691 + y__h41692 ;
  assign x__h41691 = x__h41703 + y__h41704 ;
  assign x__h41703 = x__h41715 + y__h41716 ;
  assign x__h41715 = x__h41727 + y__h41728 ;
  assign x__h41727 = x__h41739 + y__h41740 ;
  assign x__h41739 = x__h41751 + y__h41752 ;
  assign x__h41751 = x__h41763 + y__h41764 ;
  assign x__h41763 = x__h41775 + y__h41776 ;
  assign x__h41775 = x__h41787 + y__h41788 ;
  assign x__h41787 = x__h41799 + y__h41800 ;
  assign x__h41799 = x__h41811 + y__h41812 ;
  assign x__h41811 = x__h41823 + y__h41824 ;
  assign x__h41823 = x__h41835 + y__h41836 ;
  assign x__h41835 = x__h41847 + y__h41848 ;
  assign x__h41847 = x__h41859 + y__h41860 ;
  assign x__h41859 = x__h41871 + y__h41872 ;
  assign x__h41871 = x__h41883 + y__h41884 ;
  assign x__h41883 = x__h41895 + y__h41896 ;
  assign x__h41895 = x__h41907 + y__h41908 ;
  assign x__h41907 = x__h41919 + y__h41920 ;
  assign x__h41919 = x__h41931 + y__h41932 ;
  assign x__h41931 = x__h41943 + y__h41944 ;
  assign x__h41943 = x__h41955 + y__h41956 ;
  assign x__h41955 = x__h41967 + y__h41968 ;
  assign x__h41967 = x__h41979 + y__h41980 ;
  assign x__h41979 = x__h41991 + y__h41992 ;
  assign x__h41991 = x__h42003 + y__h42004 ;
  assign x__h42003 = x__h42015 + y__h42016 ;
  assign x__h42015 = x__h42027 + y__h42028 ;
  assign x__h42027 = x__h42039 + y__h42040 ;
  assign x__h42039 = x__h42051 + y__h42052 ;
  assign x__h42051 = x__h42063 + y__h42064 ;
  assign x__h42063 = x__h42075 + y__h42076 ;
  assign x__h42075 = x__h42087 + y__h42088 ;
  assign x__h42087 = x__h42099 + y__h42100 ;
  assign x__h42099 = x__h42111 + y__h42112 ;
  assign x__h42111 = x__h42123 + y__h42124 ;
  assign x__h42123 = { 6'd0, rs2_val_bypassed_capability__h31293[63] } ;
  assign x__h43629 =
	     64'hFFFFFFFFFFFFFFFF <<
	     _63_MINUS_IF_rs2_val_bypassed_capability1293_BI_ETC__q20[5:0] ;
  assign x__h52696 = ~x__h52697 ;
  assign x__h52697 =
	     rs1_val_bypassed_capability__h6632[63:0] |
	     requested_top__h32054 ;
  assign x__h57025 =
	     rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q22[19:0] <<
	     exp__h32359 ;
  assign x__h57149 =
	     lower__h57144 >> rs1_val_bypassed_capability__h6632[110:105] ;
  assign x__h57302 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       { rs1_val_bypassed_capability__h6632[103:96], 12'h0 } :
	       rs1_val_bypassed_capability__h6632[103:84] ;
  assign x__h57373 =
	     upper__h57145 >> rs1_val_bypassed_capability__h6632[110:105] ;
  assign x__h57390 = lower__h57144 + 64'd1 ;
  assign x__h58673 =
	     upper__h58522 >> rs2_val_bypassed_capability__h31293[110:105] ;
  assign x__h58690 = rs2_val_bypassed_capability__h31293[63:0] + 64'd4 ;
  assign x__h59625 =
	     controller_capability__h59382[63:0] >>
	     controller_capability__h59382[110:105] ;
  assign x__h59700 =
	     controller_capability__h59382[104] ?
	       { controller_capability__h59382[103:96], 12'h0 } :
	       controller_capability__h59382[103:84] ;
  assign x__h59772 = upper__h59621 >> controller_capability__h59382[110:105] ;
  assign x__h59789 = controller_capability__h59382[63:0] + 64'd1 ;
  assign x__h59988 = upper__h59837 >> controller_capability__h59382[110:105] ;
  assign x__h60005 = controller_capability__h59382[63:0] + 64'd2 ;
  assign x__h60204 = upper__h60053 >> controller_capability__h59382[110:105] ;
  assign x__h60221 = controller_capability__h59382[63:0] + 64'd4 ;
  assign x__h60420 = upper__h60269 >> controller_capability__h59382[110:105] ;
  assign x__h60437 = controller_capability__h59382[63:0] + 64'd8 ;
  assign x__h64184 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2183 <<
	     i2__h64194 ;
  assign x__h64406 =
	     x__h31491 << rs2_val_bypassed_capability__h31293[110:105] ;
  assign x__h64460 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2203 <<
	     i2__h64470 ;
  assign x__h64734 = x__h31491 + 20'd1 ;
  assign x__h65588 =
	     rs1_val_bypassed_capability__h6632[31:0] <<
	     near_mem$imem_instr[24:20] ;
  assign x__h65642 =
	     rs1_val_bypassed_capability__h6632[31:0] >>
	     near_mem$imem_instr[24:20] ;
  assign x__h65863 =
	     rs1_val_bypassed_capability__h6632[31:0] <<
	     rs2_val_bypassed_capability__h31293[4:0] ;
  assign x__h65908 =
	     rs1_val_bypassed_capability__h6632[31:0] >>
	     rs2_val_bypassed_capability__h31293[4:0] ;
  assign x__h67604 =
	     { near_mem$imem_instr[19:15], near_mem$imem_instr[11:7] } ;
  assign x__h6763 = x__h57302 << rs1_val_bypassed_capability__h6632[110:105] ;
  assign x__h6884 =
	     IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d475 <<
	     rs1_val_bypassed_capability__h6632[110:105] ;
  assign x__h69179 =
	     { !rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1437,
	       1'd1,
	       decoded_instr_rs2__h5316 == 5'b0 ||
	       decoded_instr_rs2__h5316 == 5'b00001 ||
	       (decoded_instr_rs2__h5316[4:2] == 3'b001 ||
		decoded_instr_rs2__h5316[4:2] == 3'b011 ||
		decoded_instr_rs2__h5316[4:2] == 3'b111) &&
	       decoded_instr_rs2__h5316[1:0] != 2'b01 } ;
  assign x__h69248 =
	     x__h64734 << rs2_val_bypassed_capability__h31293[110:105] ;
  assign x__h7029 =
	     rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q19[19:0] +
	     20'd1 <<
	     exp__h7013 ;
  assign x__h76446 =
	     csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d3121[63:0] /
	     _theResult____h76445 ;
  assign x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5 =
	     x_out_bypass_rd_val_capability__h4621[7:0] ;
  assign y__h16034 = { 6'd0, near_mem$imem_instr[20] } ;
  assign y__h16046 = { 6'd0, near_mem$imem_instr[21] } ;
  assign y__h16058 = { 6'd0, near_mem$imem_instr[22] } ;
  assign y__h16070 = { 6'd0, near_mem$imem_instr[23] } ;
  assign y__h16082 = { 6'd0, near_mem$imem_instr[24] } ;
  assign y__h16094 = { 6'd0, near_mem$imem_instr[25] } ;
  assign y__h16106 = { 6'd0, near_mem$imem_instr[26] } ;
  assign y__h16118 = { 6'd0, near_mem$imem_instr[27] } ;
  assign y__h16130 = { 6'd0, near_mem$imem_instr[28] } ;
  assign y__h16142 = { 6'd0, near_mem$imem_instr[29] } ;
  assign y__h16154 = { 6'd0, near_mem$imem_instr[30] } ;
  assign y__h18282 = ~x__h18283 ;
  assign y__h41380 = { 6'd0, rs2_val_bypassed_capability__h31293[0] } ;
  assign y__h41392 = { 6'd0, rs2_val_bypassed_capability__h31293[1] } ;
  assign y__h41404 = { 6'd0, rs2_val_bypassed_capability__h31293[2] } ;
  assign y__h41416 = { 6'd0, rs2_val_bypassed_capability__h31293[3] } ;
  assign y__h41428 = { 6'd0, rs2_val_bypassed_capability__h31293[4] } ;
  assign y__h41440 = { 6'd0, rs2_val_bypassed_capability__h31293[5] } ;
  assign y__h41452 = { 6'd0, rs2_val_bypassed_capability__h31293[6] } ;
  assign y__h41464 = { 6'd0, rs2_val_bypassed_capability__h31293[7] } ;
  assign y__h41476 = { 6'd0, rs2_val_bypassed_capability__h31293[8] } ;
  assign y__h41488 = { 6'd0, rs2_val_bypassed_capability__h31293[9] } ;
  assign y__h41500 = { 6'd0, rs2_val_bypassed_capability__h31293[10] } ;
  assign y__h41512 = { 6'd0, rs2_val_bypassed_capability__h31293[11] } ;
  assign y__h41524 = { 6'd0, rs2_val_bypassed_capability__h31293[12] } ;
  assign y__h41536 = { 6'd0, rs2_val_bypassed_capability__h31293[13] } ;
  assign y__h41548 = { 6'd0, rs2_val_bypassed_capability__h31293[14] } ;
  assign y__h41560 = { 6'd0, rs2_val_bypassed_capability__h31293[15] } ;
  assign y__h41572 = { 6'd0, rs2_val_bypassed_capability__h31293[16] } ;
  assign y__h41584 = { 6'd0, rs2_val_bypassed_capability__h31293[17] } ;
  assign y__h41596 = { 6'd0, rs2_val_bypassed_capability__h31293[18] } ;
  assign y__h41608 = { 6'd0, rs2_val_bypassed_capability__h31293[19] } ;
  assign y__h41620 = { 6'd0, rs2_val_bypassed_capability__h31293[20] } ;
  assign y__h41632 = { 6'd0, rs2_val_bypassed_capability__h31293[21] } ;
  assign y__h41644 = { 6'd0, rs2_val_bypassed_capability__h31293[22] } ;
  assign y__h41656 = { 6'd0, rs2_val_bypassed_capability__h31293[23] } ;
  assign y__h41668 = { 6'd0, rs2_val_bypassed_capability__h31293[24] } ;
  assign y__h41680 = { 6'd0, rs2_val_bypassed_capability__h31293[25] } ;
  assign y__h41692 = { 6'd0, rs2_val_bypassed_capability__h31293[26] } ;
  assign y__h41704 = { 6'd0, rs2_val_bypassed_capability__h31293[27] } ;
  assign y__h41716 = { 6'd0, rs2_val_bypassed_capability__h31293[28] } ;
  assign y__h41728 = { 6'd0, rs2_val_bypassed_capability__h31293[29] } ;
  assign y__h41740 = { 6'd0, rs2_val_bypassed_capability__h31293[30] } ;
  assign y__h41752 = { 6'd0, rs2_val_bypassed_capability__h31293[31] } ;
  assign y__h41764 = { 6'd0, rs2_val_bypassed_capability__h31293[32] } ;
  assign y__h41776 = { 6'd0, rs2_val_bypassed_capability__h31293[33] } ;
  assign y__h41788 = { 6'd0, rs2_val_bypassed_capability__h31293[34] } ;
  assign y__h41800 = { 6'd0, rs2_val_bypassed_capability__h31293[35] } ;
  assign y__h41812 = { 6'd0, rs2_val_bypassed_capability__h31293[36] } ;
  assign y__h41824 = { 6'd0, rs2_val_bypassed_capability__h31293[37] } ;
  assign y__h41836 = { 6'd0, rs2_val_bypassed_capability__h31293[38] } ;
  assign y__h41848 = { 6'd0, rs2_val_bypassed_capability__h31293[39] } ;
  assign y__h41860 = { 6'd0, rs2_val_bypassed_capability__h31293[40] } ;
  assign y__h41872 = { 6'd0, rs2_val_bypassed_capability__h31293[41] } ;
  assign y__h41884 = { 6'd0, rs2_val_bypassed_capability__h31293[42] } ;
  assign y__h41896 = { 6'd0, rs2_val_bypassed_capability__h31293[43] } ;
  assign y__h41908 = { 6'd0, rs2_val_bypassed_capability__h31293[44] } ;
  assign y__h41920 = { 6'd0, rs2_val_bypassed_capability__h31293[45] } ;
  assign y__h41932 = { 6'd0, rs2_val_bypassed_capability__h31293[46] } ;
  assign y__h41944 = { 6'd0, rs2_val_bypassed_capability__h31293[47] } ;
  assign y__h41956 = { 6'd0, rs2_val_bypassed_capability__h31293[48] } ;
  assign y__h41968 = { 6'd0, rs2_val_bypassed_capability__h31293[49] } ;
  assign y__h41980 = { 6'd0, rs2_val_bypassed_capability__h31293[50] } ;
  assign y__h41992 = { 6'd0, rs2_val_bypassed_capability__h31293[51] } ;
  assign y__h42004 = { 6'd0, rs2_val_bypassed_capability__h31293[52] } ;
  assign y__h42016 = { 6'd0, rs2_val_bypassed_capability__h31293[53] } ;
  assign y__h42028 = { 6'd0, rs2_val_bypassed_capability__h31293[54] } ;
  assign y__h42040 = { 6'd0, rs2_val_bypassed_capability__h31293[55] } ;
  assign y__h42052 = { 6'd0, rs2_val_bypassed_capability__h31293[56] } ;
  assign y__h42064 = { 6'd0, rs2_val_bypassed_capability__h31293[57] } ;
  assign y__h42076 = { 6'd0, rs2_val_bypassed_capability__h31293[58] } ;
  assign y__h42088 = { 6'd0, rs2_val_bypassed_capability__h31293[59] } ;
  assign y__h42100 = { 6'd0, rs2_val_bypassed_capability__h31293[60] } ;
  assign y__h42112 = { 6'd0, rs2_val_bypassed_capability__h31293[61] } ;
  assign y__h42124 = { 6'd0, rs2_val_bypassed_capability__h31293[62] } ;
  assign y__h43628 = ~x__h43629 ;
  assign y__h64096 = ~rs1_val_bypassed_capability__h6632[127:113] ;
  assign y__h70183 = ~rs1_val__h6356 ;
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011,
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0110011,
      7'b0110111,
      7'b0111011,
      7'b1100111,
      7'b1101111:
	  fv_out_data_to_stage2_rd__h5766 = near_mem$imem_instr[11:7];
      7'b1100011: fv_out_data_to_stage2_rd__h5766 = 5'd0;
      default: fv_out_data_to_stage2_rd__h5766 = near_mem$imem_instr[11:7];
    endcase
  end
  always@(stage2_rg_stage2)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd1: x_out_data_to_stage3_rd__h4794 = stage2_rg_stage2[393:389];
      3'd3: x_out_data_to_stage3_rd__h4794 = 5'd0;
      default: x_out_data_to_stage3_rd__h4794 = 5'd0;
    endcase
  end
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0, 3'b001, 3'b100, 3'b101, 3'b110, 3'b111:
	  alu_outputs___1_exc_code__h5858 = 5'd0;
      default: alu_outputs___1_exc_code__h5858 = 5'd2;
    endcase
  end
  always@(stage2_rg_stage2 or output_stage2___1_bypass_rd_val_tag__h4612)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3: x_out_bypass_rd_val_tag__h4620 = stage2_rg_stage2[257];
      default: x_out_bypass_rd_val_tag__h4620 =
		   output_stage2___1_bypass_rd_val_tag__h4612;
    endcase
  end
  always@(stage2_rg_stage2 or
	  output_stage2___1_bypass_rd_val_capability__h4613)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  x_out_bypass_rd_val_capability__h4621 = stage2_rg_stage2[256:129];
      default: x_out_bypass_rd_val_capability__h4621 =
		   output_stage2___1_bypass_rd_val_capability__h4613;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  csr_regfile$read_csr_cap or pcc_capability__h58049 or stage1_rg_ddc)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0: ccsr_val_capability__h63997 = pcc_capability__h58049;
      5'b00001: ccsr_val_capability__h63997 = stage1_rg_ddc[127:0];
      default: ccsr_val_capability__h63997 = csr_regfile$read_csr_cap[127:0];
    endcase
  end
  always@(stage2_rg_stage2 or
	  IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd2;
      3'd1:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 =
	      IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108;
      3'd3: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd3;
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd0;
    endcase
  end
  always@(stage2_rg_stage2 or near_mem$dmem_valid or near_mem$dmem_exc)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 = 2'd2;
      default: IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 =
		   near_mem$dmem_valid ?
		     (near_mem$dmem_exc ? 2'd3 : 2'd2) :
		     2'd1;
    endcase
  end
  always@(stage2_rg_stage2 or near_mem$dmem_word64)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 =
	      stage2_rg_stage2[256:129];
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 =
		   { 64'd0, near_mem$dmem_word64 };
    endcase
  end
  always@(near_mem$imem_instr or
	  controller_capability__h59382 or
	  alu_outputs___2_addr_capability__h62813 or
	  new_pcc_capability__h58177 or
	  alu_outputs___1_addr_capability__h62792)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  alu_outputs___1_addr_capability__h62836 =
	      alu_outputs___2_addr_capability__h62813;
      7'b1111110:
	  alu_outputs___1_addr_capability__h62836 =
	      new_pcc_capability__h58177;
      7'b1111111:
	  alu_outputs___1_addr_capability__h62836 =
	      alu_outputs___1_addr_capability__h62792;
      default: alu_outputs___1_addr_capability__h62836 =
		   controller_capability__h59382;
    endcase
  end
  always@(near_mem$imem_instr or
	  csr_regfile$read_csr or
	  rs1_val__h6356 or csr_val__h63675 or csr_val__h63680)
  begin
    case (near_mem$imem_instr[13:12])
      2'd0: csr_val__h6361 = csr_regfile$read_csr[63:0];
      2'b01: csr_val__h6361 = rs1_val__h6356;
      2'd2: csr_val__h6361 = csr_val__h63675;
      2'd3: csr_val__h6361 = csr_val__h63680;
    endcase
  end
  always@(funct10__h6030 or
	  _theResult___snd__h61631 or
	  rd_val___1__h65766 or
	  rd_val___1__h65860 or rd_val___1__h65905 or rd_val___1__h65854)
  begin
    case (funct10__h6030)
      10'b0: new_addr__h63849 = rd_val___1__h65766;
      10'b0000000001: new_addr__h63849 = rd_val___1__h65860;
      10'b0000000101: new_addr__h63849 = rd_val___1__h65905;
      10'b0100000000: new_addr__h63849 = rd_val___1__h65854;
      default: new_addr__h63849 = _theResult___snd__h61631;
    endcase
  end
  always@(stage2_rg_stage2)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 =
	      !stage2_rg_stage2[257];
      default: IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 =
		   stage2_rg_stage2[393:389] != 5'd0 ||
		   !stage2_rg_stage2[257];
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1516 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1394 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1413)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1519 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1394;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1519 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1413;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1519 =
		   near_mem$imem_instr[31:25] != 7'b0010010 &&
		   near_mem$imem_instr[31:25] != 7'b0010011 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1516;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1519 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1377 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d930 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d944 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d952 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1377;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d930;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d944;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      rs1_val_bypassed_capability__h6632[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 =
	      rs1_val_bypassed_capability__h6632[104] &&
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d952;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 =
	      decoded_instr_rs2__h5316 != 5'b0 &&
	      decoded_instr_rs2__h5316 != 5'b00001 &&
	      decoded_instr_rs2__h5316 != 5'b00010 &&
	      decoded_instr_rs2__h5316 != 5'b00011 &&
	      decoded_instr_rs2__h5316 != 5'b00100 &&
	      decoded_instr_rs2__h5316 != 5'b00101 &&
	      decoded_instr_rs2__h5316 != 5'b00110 &&
	      decoded_instr_rs2__h5316 != 5'b01111 &&
	      decoded_instr_rs2__h5316 != 5'b01011 &&
	      decoded_instr_rs2__h5316 != 5'b01010 &&
	      decoded_instr_rs2__h5316 != 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 =
		   near_mem$imem_instr[31:25] != 7'b0011101 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1519;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b100:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b101:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b110:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
		   near_mem$imem_instr[14:12] == 3'b111 &&
		   !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_addr_capability__h62836 or
	  alu_outputs___1_addr_capability__h62751 or
	  alu_outputs_addr_capability__h62754 or
	  alu_outputs_addr_capability__h62734 or
	  alu_outputs_addr_capability__h62742 or
	  alu_outputs_addr_capability__h62738 or
	  alu_outputs___1_addr_capability__h62765)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011:
	  alu_outputs_addr_capability__h62851 =
	      alu_outputs___1_addr_capability__h62751;
      7'b0100011:
	  alu_outputs_addr_capability__h62851 =
	      alu_outputs_addr_capability__h62754;
      7'b1100011:
	  alu_outputs_addr_capability__h62851 =
	      alu_outputs_addr_capability__h62734;
      7'b1100111:
	  alu_outputs_addr_capability__h62851 =
	      alu_outputs_addr_capability__h62742;
      7'b1101111:
	  alu_outputs_addr_capability__h62851 =
	      alu_outputs_addr_capability__h62738;
      7'b1110011:
	  alu_outputs_addr_capability__h62851 =
	      alu_outputs___1_addr_capability__h62765;
      default: alu_outputs_addr_capability__h62851 =
		   alu_outputs___1_addr_capability__h62836;
    endcase
  end
  always@(near_mem$imem_instr or
	  _theResult_____1_snd__h61442 or
	  rd_val___1__h61409 or
	  rd_val___1__h61416 or rd_val___1__h61423 or rd_val___1__h61430)
  begin
    case (near_mem$imem_instr[14:12])
      3'b010: _theResult_____1_snd__h61414 = rd_val___1__h61409;
      3'b011: _theResult_____1_snd__h61414 = rd_val___1__h61416;
      3'b100: _theResult_____1_snd__h61414 = rd_val___1__h61423;
      3'b110: _theResult_____1_snd__h61414 = rd_val___1__h61430;
      default: _theResult_____1_snd__h61414 = _theResult_____1_snd__h61442;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_val_bypassed_capability__h6632 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d862)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1530 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      rs1_val_bypassed_capability__h6632[104];
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1530 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d862;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1530 =
		   near_mem$imem_instr[14:12] != 3'b0 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1527;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b100:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b101:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b110:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 =
		   near_mem$imem_instr[14:12] != 3'b111 ||
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
    endcase
  end
  always@(near_mem$imem_instr or
	  near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1530 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1537 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1537 =
	      near_mem$imem_instr[14:12] != 3'b0 &&
	      (near_mem$imem_instr[14:12] != 3'b001 ||
	       near_mem$imem_instr[25]) &&
	      (near_mem$imem_instr[14:12] != 3'b101 ||
	       near_mem$imem_instr[25]);
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1537 =
	      funct10__h6030 != 10'b0 && funct10__h6030 != 10'b0100000000 &&
	      funct10__h6030 != 10'b0000000001 &&
	      funct10__h6030 != 10'b0000000101 &&
	      funct10__h6030 != 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1537 =
		   near_mem$imem_instr[6:0] != 7'b0110111 &&
		   near_mem$imem_instr[6:0] != 7'b0010111 &&
		   near_mem$imem_instr[6:0] != 7'b0000011 &&
		   near_mem$imem_instr[6:0] != 7'b0100011 &&
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] == 3'b0 ||
		      near_mem$imem_instr[14:12] == 3'b100 ||
		      near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 :
		      near_mem$imem_instr[6:0] != 7'b1011011 ||
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1530);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1585 or
	  b_capability__h6630 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1551 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557 or
	  new_offset__h63870 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1551 ||
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1557;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596 =
	      new_offset__h63870[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596 =
	      near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1596 =
		   near_mem$imem_instr[6:0] != 7'b1011011 ||
		   near_mem$imem_instr[14:12] != 3'b0 ||
		   near_mem$imem_instr[31:25] != 7'b1111111 ||
		   decoded_instr_rs2__h5316 != 5'b01100 ||
		   NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1585 ||
		   b_capability__h6630[1:0] != 2'b0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1752 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1700 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1703)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1755 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1700;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1755 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1703;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1755 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1752;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1755 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1697 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1689 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1697;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_val_bypassed_capability__h6632[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 =
	      !rs1_val_bypassed_capability__h6632[104] ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 =
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1689;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 =
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      decoded_instr_rs2__h5316 == 5'b00010 ||
	      decoded_instr_rs2__h5316 == 5'b00011 ||
	      decoded_instr_rs2__h5316 == 5'b00100 ||
	      decoded_instr_rs2__h5316 == 5'b00101 ||
	      decoded_instr_rs2__h5316 == 5'b00110 ||
	      decoded_instr_rs2__h5316 == 5'b01111 ||
	      decoded_instr_rs2__h5316 == 5'b01011 ||
	      decoded_instr_rs2__h5316 == 5'b01010 ||
	      decoded_instr_rs2__h5316 == 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1755;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  rs1_val_bypassed_capability__h6632 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1664)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1766 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      !rs1_val_bypassed_capability__h6632[104];
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1766 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1664;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1766 =
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1763;
    endcase
  end
  always@(near_mem$imem_instr or
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1652 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1766 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1631 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1773 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1631;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1773 =
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101) &&
	      !near_mem$imem_instr[25];
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1773 =
	      funct10__h6030 == 10'b0 || funct10__h6030 == 10'b0100000000 ||
	      funct10__h6030 == 10'b0000000001 ||
	      funct10__h6030 == 10'b0000000101 ||
	      funct10__h6030 == 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1773 =
		   near_mem$imem_instr[6:0] == 7'b0110111 ||
		   near_mem$imem_instr[6:0] == 7'b0010111 ||
		   near_mem$imem_instr[6:0] == 7'b0000011 ||
		   near_mem$imem_instr[6:0] == 7'b0100011 ||
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] != 3'b0 &&
		      near_mem$imem_instr[14:12] != 3'b100 &&
		      NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1652 :
		      near_mem$imem_instr[6:0] == 7'b1011011 &&
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1766);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787 or
	  b_capability__h6630 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1780 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h63870 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1780 &&
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795 =
	      !new_offset__h63870[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795 =
	      !near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1795 =
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   near_mem$imem_instr[31:25] == 7'b1111111 &&
		   decoded_instr_rs2__h5316 == 5'b01100 &&
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787 &&
		   b_capability__h6630[1:0] == 2'b0;
    endcase
  end
  always@(rg_cur_priv)
  begin
    case (rg_cur_priv)
      2'b0: CASE_rg_cur_priv_0b0_8_0b1_9_11__q26 = 5'd8;
      2'b01: CASE_rg_cur_priv_0b0_8_0b1_9_11__q26 = 5'd9;
      default: CASE_rg_cur_priv_0b0_8_0b1_9_11__q26 = 5'd11;
    endcase
  end
  always@(near_mem$imem_instr or CASE_rg_cur_priv_0b0_8_0b1_9_11__q26)
  begin
    case (near_mem$imem_instr[31:20])
      12'b0:
	  CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q27 =
	      CASE_rg_cur_priv_0b0_8_0b1_9_11__q26;
      12'b000000000001:
	  CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q27 = 5'd3;
      default: CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q27 = 5'd2;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787 or
	  b_capability__h6630)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01101,
      5'b01111:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q28 = 4'd0;
      5'b01100:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q28 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787 ?
		((b_capability__h6630[1:0] == 2'b0) ? 4'd1 : 4'd9) :
		4'd9;
      default: CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q28 = 4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504 or
	  decoded_instr_rs2__h5316 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1864 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1855 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d952 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1858 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1863 or
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q28)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504 ?
		4'd9 :
		((!decoded_instr_rs2__h5316[3] ||
		  decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		  !decoded_instr_rs2__h5316[2] ||
		  decoded_instr_rs2__h5316[1:0] == 2'b0) ?
		   4'd0 :
		   4'd9);
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1864;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1855;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682 ?
		4'd0 :
		4'd9;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686 ?
		4'd0 :
		4'd9;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	       rs1_val_bypassed_capability__h6632[104]) ?
		4'd9 :
		4'd0;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      (rs1_val_bypassed_capability__h6632[104] &&
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446) ?
		4'd9 :
		4'd0;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d952 ?
		4'd9 :
		4'd0;
      7'b0010010, 7'b0010011, 7'b0011101, 7'b0100000:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 = 4'd0;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1858;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1863;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 = 4'd9;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
	      CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q28;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  rg_cur_priv or
	  IF_rg_cur_priv_9_EQ_0b11_810_OR_rg_cur_priv_9__ETC___d1836)
  begin
    case (near_mem$imem_instr[31:20])
      12'b0, 12'b000000000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1838 = 4'd9;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1838 =
		   (rg_cur_priv == 2'b11 &&
		    near_mem$imem_instr[31:20] == 12'b001100000010) ?
		     4'd5 :
		     IF_rg_cur_priv_9_EQ_0b11_810_OR_rg_cur_priv_9__ETC___d1836;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_val_bypassed_capability__h6632 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d862)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1884 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1881;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1884 =
	      (near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	       rs1_val_bypassed_capability__h6632[104]) ?
		4'd9 :
		4'd0;
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1884 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d862 ?
		4'd9 :
		4'd0;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1884 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q29 = 4'd2;
      3'b001: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q29 = 4'd3;
      default: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q29 = 4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q29 or
	  IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1804 or
	  funct10__h6030 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1884 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1842)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011, 7'b0010111, 7'b0100011, 7'b0110111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 = 4'd0;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 =
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q29;
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 =
	      IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1804;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 =
	      (near_mem$imem_instr[14:12] != 3'b0 &&
	       (near_mem$imem_instr[14:12] != 3'b001 ||
		near_mem$imem_instr[25]) &&
	       (near_mem$imem_instr[14:12] != 3'b101 ||
		near_mem$imem_instr[25])) ?
		4'd9 :
		4'd0;
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 =
	      (funct10__h6030 != 10'b0 && funct10__h6030 != 10'b0100000000 &&
	       funct10__h6030 != 10'b0000000001 &&
	       funct10__h6030 != 10'b0000000101 &&
	       funct10__h6030 != 10'b0100000101) ?
		4'd9 :
		4'd0;
      7'b1011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 =
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1884;
      7'b1110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 =
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1842;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1551 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h63870 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1895 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1551 ?
		4'd9 :
		(IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 ?
		   4'd1 :
		   4'd0);
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1895 =
	      new_offset__h63870[1] ? 4'd9 : 4'd1;
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1895 =
	      near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564[1] ?
		4'd9 :
		4'd1;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1895 =
		   ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		     near_mem$imem_instr[6:0] == 7'b0110011) &&
		    (near_mem$imem_instr[14:12] == 3'b001 ||
		     near_mem$imem_instr[14:12] == 3'b101)) ?
		     4'd0 :
		     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1891;
    endcase
  end
  always@(decoded_instr_rs2__h5316)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01100,
      5'b01111:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q30 = 3'd0;
      5'b01101:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q30 = 3'd3;
      default: CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q30 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504 or
	  decoded_instr_rs2__h5316 or
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q30)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1989 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504 ?
		3'd0 :
		((!decoded_instr_rs2__h5316[3] ||
		  decoded_instr_rs2__h5316[2:0] == 3'b101) ?
		   3'd1 :
		   ((!decoded_instr_rs2__h5316[2] ||
		     decoded_instr_rs2__h5316[1:0] == 2'b0) ?
		      3'd2 :
		      3'd0));
      7'b0000001,
      7'b0001000,
      7'b0001001,
      7'b0001011,
      7'b0001100,
      7'b0001101,
      7'b0001111,
      7'b0010001,
      7'b0010010,
      7'b0010011,
      7'b0011101,
      7'b0011110,
      7'b0011111,
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1989 = 3'd0;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1989 =
	      CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q30;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1989 =
		   3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1989)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q31 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1989;
      3'b001, 3'b010:
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q31 = 3'd0;
      default: CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q31 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q31)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 = 3'd1;
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0110011,
      7'b0110111,
      7'b0111011,
      7'b1100011,
      7'b1100111,
      7'b1101111,
      7'b1110011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 = 3'd0;
      7'b0100011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 = 3'd2;
      default: IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1998 =
		   CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q31;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  alu_outputs___1_val1_capability__h63911 or
	  rs1_val_bypassed_capability__h6632 or
	  newVal__h30690 or
	  result4452_PLUS_b_val4453__q32 or
	  newVal__h30696 or
	  near_mem$imem_instr or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  newVal__h30705 or alu_outputs___1_val1_capability__h63832)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0:
	  alu_outputs___1_val1_capability__h63924 =
	      { 113'd0, rs1_val_bypassed_capability__h6632[127:113] };
      5'b00001:
	  alu_outputs___1_val1_capability__h63924 = { 64'd0, newVal__h30690 };
      5'b00010:
	  alu_outputs___1_val1_capability__h63924 =
	      { 64'd0, result4452_PLUS_b_val4453__q32[63:0] };
      5'b00011:
	  alu_outputs___1_val1_capability__h63924 = { 64'd0, newVal__h30696 };
      5'b00100:
	  alu_outputs___1_val1_capability__h63924 =
	      { 127'd0,
		near_mem$imem_instr[19:15] != 5'd0 &&
		IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 };
      5'b00101:
	  alu_outputs___1_val1_capability__h63924 =
	      { 127'd0, rs1_val_bypassed_capability__h6632[104] };
      5'b00110:
	  alu_outputs___1_val1_capability__h63924 = { 64'd0, newVal__h30705 };
      5'b01010, 5'b01011:
	  alu_outputs___1_val1_capability__h63924 =
	      rs1_val_bypassed_capability__h6632;
      5'b01100:
	  alu_outputs___1_val1_capability__h63924 =
	      alu_outputs___1_val1_capability__h63832;
      5'b01111:
	  alu_outputs___1_val1_capability__h63924 =
	      { 64'd0, rs1_val_bypassed_capability__h6632[63:0] };
      default: alu_outputs___1_val1_capability__h63924 =
		   alu_outputs___1_val1_capability__h63911;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2234 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  perms__h60601 or
	  NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d2220 or
	  rs2_val_bypassed_capability__h31293)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001, 7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2241 =
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0001111, 7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2241 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2241 =
	      perms__h60601 != 15'd0 &&
	      NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d2220;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2241 =
	      rs2_val_bypassed_capability__h31293[104] &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2241 =
		   near_mem$imem_instr[31:25] != 7'b0010010 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2234;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2241 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  alu_outputs___1_val1_tag__h63923)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001011, 7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2245 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2245 =
	      alu_outputs___1_val1_tag__h63923;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2245 =
		   near_mem$imem_instr[31:25] == 7'b0001101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2241;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2245 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  _theResult___snd_tag__h63878)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  alu_outputs___1_val1_tag__h64025 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      3'b010: alu_outputs___1_val1_tag__h64025 = _theResult___snd_tag__h63878;
      default: alu_outputs___1_val1_tag__h64025 =
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2245;
    endcase
  end
  always@(near_mem$imem_instr or
	  new_addr__h64004 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2422 or
	  _theResult___snd_capability__h63948 or
	  b_capability__h6630 or
	  rs1_val_bypassed_capability__h6632 or
	  b_capability__h31291 or
	  global__h63931 or
	  newcap__h31871 or
	  new_curs__h31905 or
	  requested_top__h32054 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  new_addr__h63966 or
	  rs2_val_bypassed_capability__h31293 or
	  x__h31491 or
	  ct_T__h57067 or
	  out_val_capability__h57183 or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2409 or
	  alu_outputs___1_val1_capability__h63924)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2422;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      _theResult___snd_capability__h63948;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      { b_capability__h6630[127:105],
		1'b1,
		rs1_val_bypassed_capability__h6632[103:84],
		b_capability__h31291[19:0],
		rs1_val_bypassed_capability__h6632[63:0] };
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      { b_capability__h6630[127:114],
		global__h63931,
		b_capability__h6630[112:105],
		1'b0,
		b_capability__h6630[103:0] };
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      newcap__h31871;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      { rs1_val_bypassed_capability__h6632[127:64],
		new_curs__h31905 };
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      { rs1_val_bypassed_capability__h6632[127:64],
		requested_top__h32054 };
      7'b0010010:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
		128'd0 :
		{ 64'd0, new_addr__h63966 };
      7'b0010011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      (rs2_val_bypassed_capability__h31293[63:0] == 64'b0) ?
		128'h00007E00000FFFFF0000000000000000 :
		{ rs1_val_bypassed_capability__h6632[127:64],
		  rs2_val_bypassed_capability__h31293[63:0] };
      7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      { rs2_val_bypassed_capability__h31293[127:113],
		2'b0,
		rs2_val_bypassed_capability__h31293[110:105],
		1'b0,
		x__h31491,
		ct_T__h57067,
		rs2_val_bypassed_capability__h31293[63:0] };
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      rs2_val_bypassed_capability__h31293[104] ?
		out_val_capability__h57183 :
		128'h0000000000000000FFFFFFFFFFFFFFFF;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2409;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
	      alu_outputs___1_val1_capability__h63924;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 =
		   { 64'd0, new_addr__h64004 };
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448 or
	  rs1_val_bypassed_capability__h6632 or
	  new_offset__h63870 or _theResult___snd_capability__h63879)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  alu_outputs___1_val1_capability__h64026 =
	      { rs1_val_bypassed_capability__h6632[127:64],
		new_offset__h63870 };
      3'b010:
	  alu_outputs___1_val1_capability__h64026 =
	      _theResult___snd_capability__h63879;
      default: alu_outputs___1_val1_capability__h64026 =
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2448;
    endcase
  end
  always@(near_mem$imem_instr or
	  rs1_val_bypassed_capability__h6632 or
	  rs2_val_bypassed_capability__h31293 or
	  alu_outputs___1_val2_capability__h69725 or
	  alu_outputs___1_val2_capability__h69741)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0100011:
	  alu_outputs_val2_capability__h69811 =
	      rs2_val_bypassed_capability__h31293;
      7'b1100011:
	  alu_outputs_val2_capability__h69811 =
	      alu_outputs___1_val2_capability__h69725;
      7'b1110011:
	  alu_outputs_val2_capability__h69811 =
	      alu_outputs___1_val2_capability__h69741;
      default: alu_outputs_val2_capability__h69811 =
		   rs1_val_bypassed_capability__h6632;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2680 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2697)
  begin
    case (near_mem$imem_instr[24:20])
      5'h0:
	  check__h58128 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2680;
      5'h01:
	  check__h58128 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2697;
      5'h1F: check__h58128 = 5'd25;
      default: check__h58128 = 5'd2;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787 or
	  check__h30716)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01111:
	  alu_outputs___1_exc_code__h31002 = 5'd2;
      5'b01100:
	  alu_outputs___1_exc_code__h31002 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1787 ?
		5'd0 :
		check__h30716;
      default: alu_outputs___1_exc_code__h31002 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2680 or
	  rs2_val_bypassed_capability__h31293 or check__h58128)
  begin
    case (near_mem$imem_instr[24:20])
      5'h0:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2702 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2680;
      5'h01:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2702 =
	      (rs2_val_bypassed_capability__h31293[1:0] == 2'b0) ?
		check__h58128 :
		5'd0;
      5'h1F:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2702 = 5'd25;
      default: IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2702 =
		   5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504 or
	  check__h59354 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2660 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2652 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682 or
	  check__h31012 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686 or
	  check__h31629 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2642 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d952 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2656 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2658 or
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2702 or
	  alu_outputs___1_exc_code__h31002)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1504 ?
		check__h59354 :
		5'd2;
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2660;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2652;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682 ?
		5'd2 :
		check__h31012;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686 ?
		5'd2 :
		check__h31629;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2642;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      (rs1_val_bypassed_capability__h6632[104] &&
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446) ?
		5'd21 :
		5'd2;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d952 ?
		5'd21 :
		5'd2;
      7'b0010010, 7'b0010011, 7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 = 5'd2;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2656;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2658;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2702;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
	      alu_outputs___1_exc_code__h31002;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 =
		   5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722 or
	  _theResult___exc_code__h61934 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2621)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  alu_outputs___1_exc_code__h60624 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2722;
      3'b001:
	  alu_outputs___1_exc_code__h60624 = _theResult___exc_code__h61934;
      3'b010:
	  alu_outputs___1_exc_code__h60624 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
		5'd18 :
		IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2621;
      default: alu_outputs___1_exc_code__h60624 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_exc_code__h60624 or
	  alu_outputs___1_exc_code__h5858 or alu_outputs___1_exc_code__h6371)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011,
      7'b0001111,
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0100011,
      7'b0110011,
      7'b0110111,
      7'b0111011:
	  alu_outputs_exc_code__h60648 = 5'd2;
      7'b1011011:
	  alu_outputs_exc_code__h60648 = alu_outputs___1_exc_code__h60624;
      7'b1100011:
	  alu_outputs_exc_code__h60648 = alu_outputs___1_exc_code__h5858;
      7'b1100111, 7'b1101111: alu_outputs_exc_code__h60648 = 5'd0;
      7'b1110011:
	  alu_outputs_exc_code__h60648 = alu_outputs___1_exc_code__h6371;
      default: alu_outputs_exc_code__h60648 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1745 or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1719 or
	  controller_capability__h59382 or
	  decoded_instr_rs2__h5316 or
	  rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1437)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2768 =
	      decoded_instr_rs2__h5316 != 5'b0 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1437;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2768 =
	      near_mem$imem_instr[24:20] != 5'h01 &&
	      near_mem$imem_instr[24:20] != 5'h1F &&
	      near_mem$imem_instr[24:20] != 5'h0;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2768 =
		   near_mem$imem_instr[31:25] != 7'b0 ||
		   IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1745 ||
		   IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1719 &&
		   !controller_capability__h59382[104] &&
		   decoded_instr_rs2__h5316[3:2] == 2'b11;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2768 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2753 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1703)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2771 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2753;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2771 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1703;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2771 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2768;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2771 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_val_bypassed_capability__h6632 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2750 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1689 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_val_bypassed_capability__h6632[104] &&
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2750;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1682;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1686;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_val_bypassed_capability__h6632[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 =
	      !rs1_val_bypassed_capability__h6632[104] ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 =
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1689;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 =
	      decoded_instr_rs2__h5316 != 5'b01100;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2771;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2744)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2782 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      !rs1_val_bypassed_capability__h6632[104];
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2782 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_val_bypassed_capability__h6632[104] &&
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2744;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2782 =
		   near_mem$imem_instr[14:12] != 3'b0 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2779;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2887 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2872 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2880)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2890 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2872;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2890 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2880;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2890 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2887;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2890 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2871 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2866 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2867 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2851 or
	  rs2_val_bypassed_capability__h31293 or decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2871;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2866;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2867;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2857 &&
	      !rs1_val_bypassed_capability__h6632[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 =
	      !rs1_val_bypassed_capability__h6632[104] ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2851;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 =
	      !rs1_val_bypassed_capability__h6632[104] ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2851 ||
	      rs2_val_bypassed_capability__h31293[63:0] == 64'b0;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 =
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      decoded_instr_rs2__h5316 == 5'b00010 ||
	      decoded_instr_rs2__h5316 == 5'b00011 ||
	      decoded_instr_rs2__h5316 == 5'b00100 ||
	      decoded_instr_rs2__h5316 == 5'b00101 ||
	      decoded_instr_rs2__h5316 == 5'b00110 ||
	      decoded_instr_rs2__h5316 == 5'b01111 ||
	      decoded_instr_rs2__h5316 == 5'b01011 ||
	      decoded_instr_rs2__h5316 == 5'b01010 ||
	      decoded_instr_rs2__h5316 == 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2890;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2851 or
	  rs1_val_bypassed_capability__h6632 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2859)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2901 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2851 ||
	      !rs1_val_bypassed_capability__h6632[104];
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2901 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2859;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2901 =
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2898;
    endcase
  end
  always@(near_mem$imem_instr or
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1652 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2901 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1631 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2908 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1631;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2908 =
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101) &&
	      !near_mem$imem_instr[25];
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2908 =
	      funct10__h6030 == 10'b0 || funct10__h6030 == 10'b0100000000 ||
	      funct10__h6030 == 10'b0000000001 ||
	      funct10__h6030 == 10'b0000000101 ||
	      funct10__h6030 == 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2908 =
		   near_mem$imem_instr[6:0] == 7'b0110111 ||
		   near_mem$imem_instr[6:0] == 7'b0010111 ||
		   near_mem$imem_instr[6:0] == 7'b0000011 ||
		   near_mem$imem_instr[6:0] == 7'b0100011 ||
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] != 3'b0 &&
		      near_mem$imem_instr[14:12] != 3'b100 &&
		      NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1652 :
		      near_mem$imem_instr[6:0] == 7'b1011011 &&
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2901);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2915 or
	  b_capability__h6630 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1780 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h63870 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2923 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1780 &&
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2923 =
	      !new_offset__h63870[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2923 =
	      !near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1564[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2923 =
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   near_mem$imem_instr[31:25] == 7'b1111111 &&
		   decoded_instr_rs2__h5316 == 5'b01100 &&
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2915 &&
		   b_capability__h6630[1:0] == 2'b0;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_val1_capability__h64026 or
	  alu_outputs___1_val1_capability__h63844 or
	  alu_outputs___1_val1_capability__h63858 or
	  alu_outputs___1_val1_capability__h63848 or
	  alu_outputs___1_val1_capability__h63855 or
	  alu_outputs___1_val1_capability__h63852 or
	  alu_outputs___1_val1_capability__h63868)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 =
	      alu_outputs___1_val1_capability__h63844;
      7'b0010111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 =
	      alu_outputs___1_val1_capability__h63858;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 =
	      alu_outputs___1_val1_capability__h63848;
      7'b0110111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 =
	      alu_outputs___1_val1_capability__h63855;
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 =
	      alu_outputs___1_val1_capability__h63852;
      7'b1110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 =
	      alu_outputs___1_val1_capability__h63868;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 =
		   alu_outputs___1_val1_capability__h64026;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2460 or
	  alu_outputs___1_val1_capability__h63832)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100111, 7'b1101111:
	  CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q37 =
	      alu_outputs___1_val1_capability__h63832;
      default: CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q37 =
		   IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2460;
    endcase
  end
  always@(stage2_rg_stage2 or
	  output_stage2___1_bypass_rd_val_tag__h4612 or
	  output_stage2___1_bypass_rd_val_capability__h4613)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q38 =
	      stage2_rg_stage2[257:129];
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q38 =
		   { output_stage2___1_bypass_rd_val_tag__h4612,
		     output_stage2___1_bypass_rd_val_capability__h4613 };
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_logdelay <= `BSV_ASSIGNMENT_DELAY 64'd0;
	cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_halt <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_state <= `BSV_ASSIGNMENT_DELAY 3'd0;
	stage1_rg_ddc <= `BSV_ASSIGNMENT_DELAY
	    129'h1FFFE7E00000111110000000000000000;
	stage1_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage1_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
	stage2_rg_f5 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	stage2_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage2_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
	stage3_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage3_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
      end
    else
      begin
        if (cfg_logdelay$EN)
	  cfg_logdelay <= `BSV_ASSIGNMENT_DELAY cfg_logdelay$D_IN;
	if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (rg_halt$EN) rg_halt <= `BSV_ASSIGNMENT_DELAY rg_halt$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
	if (stage1_rg_ddc$EN)
	  stage1_rg_ddc <= `BSV_ASSIGNMENT_DELAY stage1_rg_ddc$D_IN;
	if (stage1_rg_full$EN)
	  stage1_rg_full <= `BSV_ASSIGNMENT_DELAY stage1_rg_full$D_IN;
	if (stage1_rg_run_state$EN)
	  stage1_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage1_rg_run_state$D_IN;
	if (stage2_rg_f5$EN)
	  stage2_rg_f5 <= `BSV_ASSIGNMENT_DELAY stage2_rg_f5$D_IN;
	if (stage2_rg_full$EN)
	  stage2_rg_full <= `BSV_ASSIGNMENT_DELAY stage2_rg_full$D_IN;
	if (stage2_rg_run_state$EN)
	  stage2_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage2_rg_run_state$D_IN;
	if (stage3_rg_full$EN)
	  stage3_rg_full <= `BSV_ASSIGNMENT_DELAY stage3_rg_full$D_IN;
	if (stage3_rg_run_state$EN)
	  stage3_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage3_rg_run_state$D_IN;
      end
    if (rg_cur_priv$EN) rg_cur_priv <= `BSV_ASSIGNMENT_DELAY rg_cur_priv$D_IN;
    if (rg_inum$EN) rg_inum <= `BSV_ASSIGNMENT_DELAY rg_inum$D_IN;
    if (rg_start_CPI_cycles$EN)
      rg_start_CPI_cycles <= `BSV_ASSIGNMENT_DELAY rg_start_CPI_cycles$D_IN;
    if (rg_start_CPI_instrs$EN)
      rg_start_CPI_instrs <= `BSV_ASSIGNMENT_DELAY rg_start_CPI_instrs$D_IN;
    if (stage2_rg_stage2$EN)
      stage2_rg_stage2 <= `BSV_ASSIGNMENT_DELAY stage2_rg_stage2$D_IN;
    if (stage3_rg_stage3$EN)
      stage3_rg_stage3 <= `BSV_ASSIGNMENT_DELAY stage3_rg_stage3$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_logdelay = 64'hAAAAAAAAAAAAAAAA;
    cfg_verbosity = 4'hA;
    rg_cur_priv = 2'h2;
    rg_halt = 1'h0;
    rg_inum = 64'hAAAAAAAAAAAAAAAA;
    rg_start_CPI_cycles = 64'hAAAAAAAAAAAAAAAA;
    rg_start_CPI_instrs = 64'hAAAAAAAAAAAAAAAA;
    rg_state = 3'h2;
    stage1_rg_ddc = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage1_rg_full = 1'h0;
    stage1_rg_run_state = 1'h0;
    stage2_rg_f5 = 5'h0A;
    stage2_rg_full = 1'h0;
    stage2_rg_run_state = 1'h0;
    stage2_rg_stage2 =
	647'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage3_rg_full = 1'h0;
    stage3_rg_run_state = 1'h0;
    stage3_rg_stage3 =
	375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("================================================================");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("%0d: Pipeline State:  inum:%0d  cur_priv:%0d  mstatus:%0x",
		 csr_regfile$read_csr_mcycle,
		 rg_inum,
		 rg_cur_priv,
		 csr_regfile$read_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write("MStatus{",
	       "sd:%0d",
	       csr_regfile$read_mstatus[16:15] == 2'h3 ||
	       csr_regfile$read_mstatus[14:13] == 2'h3);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" sxl:%0d", ms_sxl__h3157);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" uxl:%0d", ms_uxl__h3158);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tsr:%0d", csr_regfile$read_mstatus[22]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tw:%0d", csr_regfile$read_mstatus[21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tvm:%0d", csr_regfile$read_mstatus[20]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mxr:%0d", csr_regfile$read_mstatus[19]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" sum:%0d", csr_regfile$read_mstatus[18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mprv:%0d", csr_regfile$read_mstatus[17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" xs:%0d", csr_regfile$read_mstatus[16:15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" fs:%0d", csr_regfile$read_mstatus[14:13]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mpp:%0d", csr_regfile$read_mstatus[12:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" spp:%0d", ms_spp__h3168);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" pies:%0d_%0d%0d",
	       csr_regfile$read_mstatus[7],
	       csr_regfile$read_misa[18] && csr_regfile$read_mstatus[5],
	       csr_regfile$read_misa[13] && csr_regfile$read_mstatus[4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" ies:%0d_%0d%0d",
	       csr_regfile$read_mstatus[3],
	       csr_regfile$read_misa[18] && csr_regfile$read_mstatus[1],
	       csr_regfile$read_misa[13] && csr_regfile$read_mstatus[0]);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    Bypass S1 <= S3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Bypass {");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  (stage3_rg_stage3[285:279] != 7'b1011011 ||
	   stage3_rg_stage3[293:291] != 3'b0 ||
	   stage3_rg_stage3[303:299] != 5'h0D &&
	   stage3_rg_stage3[303:299] != 5'h10 ||
	   stage3_rg_stage3[310:304] != 7'b1111111) &&
	  (!stage3_rg_full || !stage3_rg_stage3[276]))
	$write("Rd -");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  (stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ||
	   stage3_rg_full && stage3_rg_stage3[276]))
	$write("Rd %0d ",
	       stage3_rg_stage3[275:271],
	       "rd_val:%h",
	       stage3_rg_stage3[257:129]);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    S3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Output_Stage3");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage3_rg_full) $write(" PIPE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage3_rg_full) $write(" EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    Bypass S1 <= S2: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Bypass {");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd0)
	$write("Rd -");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd0)
	$write("Rd %0d ", stage2_rg_stage2[393:389]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd1)
	$write("-");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd1)
	$write("rd_val:%h",
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q38);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("    S2: pc 0x%08h instr 0x%08h priv %0d",
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("Output_Stage2", " EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("Output_Stage2", " BUSY: pc:%0h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Output_Stage2", " NONPIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("Output_Stage2", " PIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("data_to_Stage3 {pc:%h  instr:%h  priv:%0d\n",
	       stage2_rg_stage2[644:581],
	       stage2_rg_stage2[580:549],
	       stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("        rd_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write(" rd:%0d  rd_val:%h\n",
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("        csr_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3 &&
	  !stage2_rg_stage2[388])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3 &&
	  stage2_rg_stage2[388])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write(" csr:%h  csr_val:%h",
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2[128:0],
	       "}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", near_mem$dmem_exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[321:258], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", near_mem$dmem_exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[321:258], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("    S1: pc 0x%08h instr 0x%08h priv %0d",
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("Output_Stage1", " BUSY pc:%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("Output_Stage1", " NONPIPE: pc:%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("Output_Stage1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full)
	$write("Output_Stage1", " EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write(" PIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1901)
	$write("CONTROL_STRAIGHT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1905)
	$write("CONTROL_BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1909)
	$write("CONTROL_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1913)
	$write("CONTROL_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1917)
	$write("CONTROL_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1921)
	$write("CONTROL_MRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1925)
	$write("CONTROL_SRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1929)
	$write("CONTROL_URET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1933)
	$write("CONTROL_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1937)
	$write("CONTROL_TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d1957)
	$write("CONTROL_CLEAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("data_to_Stage 2 {pc:%h  instr:%h  priv:%0d\n",
	       near_mem$imem_pc,
	       near_mem$imem_instr,
	       rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("            op_stage2:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2002)
	$write("OP_Stage2_ALU");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2006)
	$write("OP_Stage2_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2010)
	$write("OP_Stage2_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2014)
	$write("OP_Stage2_CLR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d2022)
	$write("OP_Stage2_CRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("  rd:%0d  csr_valid:", fv_out_data_to_stage2_rd__h5766);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_601_AND_NOT_near_mem_ETC___d2048)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_601_AND_IF_near_mem__ETC___d2060)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("            addr:%h  val1:%h  val2:%h}",
	       { alu_outputs_addr_tag__h62850,
		 alu_outputs_addr_capability__h62851 },
	       near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2462,
	       { alu_outputs_val2_tag__h69810,
		 alu_outputs_val2_capability__h69811 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2566)
	$write("CONTROL_STRAIGHT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2569)
	$write("CONTROL_BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2572)
	$write("CONTROL_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2575)
	$write("CONTROL_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2578)
	$write("CONTROL_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2581)
	$write("CONTROL_MRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2584)
	$write("CONTROL_SRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2587)
	$write("CONTROL_URET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2590)
	$write("CONTROL_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2593)
	$write("CONTROL_TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2596)
	$write("CONTROL_CLEAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("'h%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("'h%h", fv_out_trap_info_exc_code__h62452);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1599)
	$write("'h%h", value__h62699, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1798)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274)
	$write(" next_pc 0x%08h", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", pc_reset_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete && cur_verbosity__h1374 != 4'd0)
	$display("    restart with PC = 0x%0h", pc_reset_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[276] &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S3.fa_deq: write Rd 0x%0h, rd_val 0x%0h",
		 stage3_rg_stage3[275:271],
		 stage3_rg_stage3[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("    S3.enq: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("data_to_Stage3 {pc:%h  instr:%h  priv:%0d\n",
	       stage2_rg_stage2[644:581],
	       stage2_rg_stage2[580:549],
	       stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("        rd_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2966)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2968)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write(" rd:%0d  rd_val:%h\n",
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("        csr_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	  !stage2_rg_stage2[388])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	  stage2_rg_stage2[388])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write(" csr:%h  csr_val:%h",
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2[128:0],
	       "}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991 &&
	  near_mem$imem_instr[6:0] == 7'b1110011 &&
	  near_mem$imem_instr[14:12] != 3'b0 &&
	  near_mem$imem_instr[14:12] != 3'b100 &&
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2056 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S1: write CSR 0x%0h, val 0x%0h",
		 alu_outputs_addr_capability__h62851[11:0],
		 alu_outputs_val2_capability__h69811[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d2991 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S2.enq (Data_Stage1_to_Stage2)");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_931_932_AND_NOT_csr_regfile_interr_ETC___d3054)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_restart_after_csrrx &&
	  cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_restart_after_csrrx &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: rl_stage1_restart_after_csrrx: inum:%0d  pc:%0x  cur_priv:%0d",
		 csr_regfile$read_csr_mcycle,
		 rg_inum,
		 fv_out_next_pc__h5702,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage2_nonpipe", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 != 4'd0)
	$display("    mcause:0x%0h  epc 0x%0h  tval:0x%0h  new pc 0x%0h, new mstatus 0x%0h",
		 csr_regfile$csr_trap_actions[65:2],
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[321:258],
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_ret_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 != 4'd0)
	$display("    xRET: next_pc:0x%0h  new mstatus:0x%0h  new priv:%0d",
		 csr_regfile$csr_ret_actions[129:66],
		 csr_regfile$csr_ret_actions[63:0],
		 csr_regfile$csr_ret_actions[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_FENCE_I &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_FENCE_I", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_FENCE &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_FENCE", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_SFENCE_VMA &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_SFENCE_VMA",
		 csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_WFI && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_WFI &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_stage1_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_WFI_resume && cur_verbosity__h1374 != 4'd0)
	$display("    WFI resume: inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_WFI_resume && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3118)
	$display("%0d: CPU.rl_stage1_trap: Tight infinite trap loop: pc 0x%0x instr 0x%08x",
		 csr_regfile$read_csr_mcycle,
		 csr_regfile$csr_trap_actions[193:130],
		 near_mem$imem_instr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3118)
	$display("CPI: %0d.%0d = (%0d/%0d) since last 'continue'",
		 cpi__h76447,
		 cpifrac__h76448,
		 delta_CPI_cycles__h76443,
		 _theResult____h76445);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3118)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_stage1_trap: priv:%0d  mcause:0x%0h  epc:0x%0h",
		 csr_regfile$read_csr_mcycle,
		 rg_cur_priv,
		 csr_regfile$csr_trap_actions[65:2],
		 near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("    tval:0x%0h  new pc:0x%0h  new mstatus:0x%0h",
		 value__h62699,
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_stage1_interrupt: epc 0x%0h  next PC 0x%0h  new_priv %0d  new mstatus 0x%0h",
		 csr_regfile$read_csr_mcycle,
		 near_mem$imem_pc,
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[1:0],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start)
	begin
	  TASK_testplusargs___d2820 = $test$plusargs("v1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start)
	begin
	  TASK_testplusargs___d2819 = $test$plusargs("v2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_reset_start", csr_regfile$read_csr_mcycle);
  end
  // synopsys translate_on
endmodule  // mkCPU

