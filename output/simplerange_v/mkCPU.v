//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Tue Apr 23 10:49:25 BST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_hart0_server_reset_request_put  O     1 reg
// RDY_hart0_server_reset_response_get  O     1 reg
// imem_master_awvalid            O     1
// imem_master_awaddr             O    64 reg
// imem_master_awprot             O     3 reg
// imem_master_wvalid             O     1
// imem_master_wdata              O    64 reg
// imem_master_wstrb              O     8 reg
// imem_master_bready             O     1
// imem_master_arvalid            O     1
// imem_master_araddr             O    64 reg
// imem_master_arprot             O     3 reg
// imem_master_rready             O     1
// dmem_master_awvalid            O     1
// dmem_master_awaddr             O    64 reg
// dmem_master_awprot             O     3 reg
// dmem_master_wvalid             O     1
// dmem_master_wdata              O    64 reg
// dmem_master_wstrb              O     8 reg
// dmem_master_bready             O     1
// dmem_master_arvalid            O     1
// dmem_master_araddr             O    64 reg
// dmem_master_arprot             O     3 reg
// dmem_master_rready             O     1
// near_mem_slave_awready         O     1 const
// near_mem_slave_wready          O     1 const
// near_mem_slave_bvalid          O     1 const
// near_mem_slave_bresp           O     2 const
// near_mem_slave_arready         O     1 const
// near_mem_slave_rvalid          O     1 const
// near_mem_slave_rresp           O     2 const
// near_mem_slave_rdata           O    64 const
// RDY_external_interrupt_req     O     1 reg
// RDY_timer_interrupt_req        O     1 reg
// RDY_software_interrupt_req     O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// imem_master_awready            I     1
// imem_master_wready             I     1
// imem_master_bvalid             I     1
// imem_master_bresp              I     2 reg
// imem_master_arready            I     1
// imem_master_rvalid             I     1
// imem_master_rresp              I     2 reg
// imem_master_rdata              I    64 reg
// dmem_master_awready            I     1
// dmem_master_wready             I     1
// dmem_master_bvalid             I     1
// dmem_master_bresp              I     2 reg
// dmem_master_arready            I     1
// dmem_master_rvalid             I     1
// dmem_master_rresp              I     2 reg
// dmem_master_rdata              I    64 reg
// near_mem_slave_awvalid         I     1 unused
// near_mem_slave_awaddr          I    64 unused
// near_mem_slave_awprot          I     3 unused
// near_mem_slave_wvalid          I     1 unused
// near_mem_slave_wdata           I    64 unused
// near_mem_slave_wstrb           I     8 unused
// near_mem_slave_bready          I     1 unused
// near_mem_slave_arvalid         I     1 unused
// near_mem_slave_araddr          I    64 unused
// near_mem_slave_arprot          I     3 unused
// near_mem_slave_rready          I     1 unused
// external_interrupt_req_set_not_clear  I     1 reg
// timer_interrupt_req_set_not_clear  I     1 reg
// software_interrupt_req_set_not_clear  I     1 reg
// EN_hart0_server_reset_request_put  I     1
// EN_hart0_server_reset_response_get  I     1
// EN_external_interrupt_req      I     1
// EN_timer_interrupt_req         I     1
// EN_software_interrupt_req      I     1
//
// Combinational paths from inputs to outputs:
//   (imem_master_awready, imem_master_wready) -> imem_master_bready
//   (imem_master_awready,
//    imem_master_wready,
//    imem_master_arready,
//    dmem_master_awready,
//    dmem_master_wready) -> imem_master_rready
//   (imem_master_awready,
//    imem_master_wready,
//    dmem_master_awready,
//    dmem_master_wready,
//    dmem_master_arready) -> dmem_master_rready
//   (dmem_master_awready, dmem_master_wready) -> dmem_master_bready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCPU(CLK,
	     RST_N,

	     EN_hart0_server_reset_request_put,
	     RDY_hart0_server_reset_request_put,

	     EN_hart0_server_reset_response_get,
	     RDY_hart0_server_reset_response_get,

	     imem_master_awvalid,

	     imem_master_awaddr,

	     imem_master_awprot,

	     imem_master_awready,

	     imem_master_wvalid,

	     imem_master_wdata,

	     imem_master_wstrb,

	     imem_master_wready,

	     imem_master_bvalid,
	     imem_master_bresp,

	     imem_master_bready,

	     imem_master_arvalid,

	     imem_master_araddr,

	     imem_master_arprot,

	     imem_master_arready,

	     imem_master_rvalid,
	     imem_master_rresp,
	     imem_master_rdata,

	     imem_master_rready,

	     dmem_master_awvalid,

	     dmem_master_awaddr,

	     dmem_master_awprot,

	     dmem_master_awready,

	     dmem_master_wvalid,

	     dmem_master_wdata,

	     dmem_master_wstrb,

	     dmem_master_wready,

	     dmem_master_bvalid,
	     dmem_master_bresp,

	     dmem_master_bready,

	     dmem_master_arvalid,

	     dmem_master_araddr,

	     dmem_master_arprot,

	     dmem_master_arready,

	     dmem_master_rvalid,
	     dmem_master_rresp,
	     dmem_master_rdata,

	     dmem_master_rready,

	     near_mem_slave_awvalid,
	     near_mem_slave_awaddr,
	     near_mem_slave_awprot,

	     near_mem_slave_awready,

	     near_mem_slave_wvalid,
	     near_mem_slave_wdata,
	     near_mem_slave_wstrb,

	     near_mem_slave_wready,

	     near_mem_slave_bvalid,

	     near_mem_slave_bresp,

	     near_mem_slave_bready,

	     near_mem_slave_arvalid,
	     near_mem_slave_araddr,
	     near_mem_slave_arprot,

	     near_mem_slave_arready,

	     near_mem_slave_rvalid,

	     near_mem_slave_rresp,

	     near_mem_slave_rdata,

	     near_mem_slave_rready,

	     external_interrupt_req_set_not_clear,
	     EN_external_interrupt_req,
	     RDY_external_interrupt_req,

	     timer_interrupt_req_set_not_clear,
	     EN_timer_interrupt_req,
	     RDY_timer_interrupt_req,

	     software_interrupt_req_set_not_clear,
	     EN_software_interrupt_req,
	     RDY_software_interrupt_req);
  parameter [63 : 0] pc_reset_value = 64'b0;
  input  CLK;
  input  RST_N;

  // action method hart0_server_reset_request_put
  input  EN_hart0_server_reset_request_put;
  output RDY_hart0_server_reset_request_put;

  // action method hart0_server_reset_response_get
  input  EN_hart0_server_reset_response_get;
  output RDY_hart0_server_reset_response_get;

  // value method imem_master_m_awvalid
  output imem_master_awvalid;

  // value method imem_master_m_awaddr
  output [63 : 0] imem_master_awaddr;

  // value method imem_master_m_awprot
  output [2 : 0] imem_master_awprot;

  // value method imem_master_m_awuser

  // action method imem_master_m_awready
  input  imem_master_awready;

  // value method imem_master_m_wvalid
  output imem_master_wvalid;

  // value method imem_master_m_wdata
  output [63 : 0] imem_master_wdata;

  // value method imem_master_m_wstrb
  output [7 : 0] imem_master_wstrb;

  // action method imem_master_m_wready
  input  imem_master_wready;

  // action method imem_master_m_bvalid
  input  imem_master_bvalid;
  input  [1 : 0] imem_master_bresp;

  // value method imem_master_m_bready
  output imem_master_bready;

  // value method imem_master_m_arvalid
  output imem_master_arvalid;

  // value method imem_master_m_araddr
  output [63 : 0] imem_master_araddr;

  // value method imem_master_m_arprot
  output [2 : 0] imem_master_arprot;

  // value method imem_master_m_aruser

  // action method imem_master_m_arready
  input  imem_master_arready;

  // action method imem_master_m_rvalid
  input  imem_master_rvalid;
  input  [1 : 0] imem_master_rresp;
  input  [63 : 0] imem_master_rdata;

  // value method imem_master_m_rready
  output imem_master_rready;

  // value method dmem_master_m_awvalid
  output dmem_master_awvalid;

  // value method dmem_master_m_awaddr
  output [63 : 0] dmem_master_awaddr;

  // value method dmem_master_m_awprot
  output [2 : 0] dmem_master_awprot;

  // value method dmem_master_m_awuser

  // action method dmem_master_m_awready
  input  dmem_master_awready;

  // value method dmem_master_m_wvalid
  output dmem_master_wvalid;

  // value method dmem_master_m_wdata
  output [63 : 0] dmem_master_wdata;

  // value method dmem_master_m_wstrb
  output [7 : 0] dmem_master_wstrb;

  // action method dmem_master_m_wready
  input  dmem_master_wready;

  // action method dmem_master_m_bvalid
  input  dmem_master_bvalid;
  input  [1 : 0] dmem_master_bresp;

  // value method dmem_master_m_bready
  output dmem_master_bready;

  // value method dmem_master_m_arvalid
  output dmem_master_arvalid;

  // value method dmem_master_m_araddr
  output [63 : 0] dmem_master_araddr;

  // value method dmem_master_m_arprot
  output [2 : 0] dmem_master_arprot;

  // value method dmem_master_m_aruser

  // action method dmem_master_m_arready
  input  dmem_master_arready;

  // action method dmem_master_m_rvalid
  input  dmem_master_rvalid;
  input  [1 : 0] dmem_master_rresp;
  input  [63 : 0] dmem_master_rdata;

  // value method dmem_master_m_rready
  output dmem_master_rready;

  // action method near_mem_slave_m_awvalid
  input  near_mem_slave_awvalid;
  input  [63 : 0] near_mem_slave_awaddr;
  input  [2 : 0] near_mem_slave_awprot;

  // value method near_mem_slave_m_awready
  output near_mem_slave_awready;

  // action method near_mem_slave_m_wvalid
  input  near_mem_slave_wvalid;
  input  [63 : 0] near_mem_slave_wdata;
  input  [7 : 0] near_mem_slave_wstrb;

  // value method near_mem_slave_m_wready
  output near_mem_slave_wready;

  // value method near_mem_slave_m_bvalid
  output near_mem_slave_bvalid;

  // value method near_mem_slave_m_bresp
  output [1 : 0] near_mem_slave_bresp;

  // value method near_mem_slave_m_buser

  // action method near_mem_slave_m_bready
  input  near_mem_slave_bready;

  // action method near_mem_slave_m_arvalid
  input  near_mem_slave_arvalid;
  input  [63 : 0] near_mem_slave_araddr;
  input  [2 : 0] near_mem_slave_arprot;

  // value method near_mem_slave_m_arready
  output near_mem_slave_arready;

  // value method near_mem_slave_m_rvalid
  output near_mem_slave_rvalid;

  // value method near_mem_slave_m_rresp
  output [1 : 0] near_mem_slave_rresp;

  // value method near_mem_slave_m_rdata
  output [63 : 0] near_mem_slave_rdata;

  // value method near_mem_slave_m_ruser

  // action method near_mem_slave_m_rready
  input  near_mem_slave_rready;

  // action method external_interrupt_req
  input  external_interrupt_req_set_not_clear;
  input  EN_external_interrupt_req;
  output RDY_external_interrupt_req;

  // action method timer_interrupt_req
  input  timer_interrupt_req_set_not_clear;
  input  EN_timer_interrupt_req;
  output RDY_timer_interrupt_req;

  // action method software_interrupt_req
  input  software_interrupt_req_set_not_clear;
  input  EN_software_interrupt_req;
  output RDY_software_interrupt_req;

  // signals for module outputs
  wire [63 : 0] dmem_master_araddr,
		dmem_master_awaddr,
		dmem_master_wdata,
		imem_master_araddr,
		imem_master_awaddr,
		imem_master_wdata,
		near_mem_slave_rdata;
  wire [7 : 0] dmem_master_wstrb, imem_master_wstrb;
  wire [2 : 0] dmem_master_arprot,
	       dmem_master_awprot,
	       imem_master_arprot,
	       imem_master_awprot;
  wire [1 : 0] near_mem_slave_bresp, near_mem_slave_rresp;
  wire RDY_external_interrupt_req,
       RDY_hart0_server_reset_request_put,
       RDY_hart0_server_reset_response_get,
       RDY_software_interrupt_req,
       RDY_timer_interrupt_req,
       dmem_master_arvalid,
       dmem_master_awvalid,
       dmem_master_bready,
       dmem_master_rready,
       dmem_master_wvalid,
       imem_master_arvalid,
       imem_master_awvalid,
       imem_master_bready,
       imem_master_rready,
       imem_master_wvalid,
       near_mem_slave_arready,
       near_mem_slave_awready,
       near_mem_slave_bvalid,
       near_mem_slave_rvalid,
       near_mem_slave_wready;

  // register cfg_logdelay
  reg [63 : 0] cfg_logdelay;
  wire [63 : 0] cfg_logdelay$D_IN;
  wire cfg_logdelay$EN;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register rg_cur_priv
  reg [1 : 0] rg_cur_priv;
  reg [1 : 0] rg_cur_priv$D_IN;
  wire rg_cur_priv$EN;

  // register rg_halt
  reg rg_halt;
  wire rg_halt$D_IN, rg_halt$EN;

  // register rg_inum
  reg [63 : 0] rg_inum;
  reg [63 : 0] rg_inum$D_IN;
  wire rg_inum$EN;

  // register rg_start_CPI_cycles
  reg [63 : 0] rg_start_CPI_cycles;
  wire [63 : 0] rg_start_CPI_cycles$D_IN;
  wire rg_start_CPI_cycles$EN;

  // register rg_start_CPI_instrs
  reg [63 : 0] rg_start_CPI_instrs;
  wire [63 : 0] rg_start_CPI_instrs$D_IN;
  wire rg_start_CPI_instrs$EN;

  // register rg_state
  reg [2 : 0] rg_state;
  reg [2 : 0] rg_state$D_IN;
  wire rg_state$EN;

  // register stage1_rg_ddc
  reg [128 : 0] stage1_rg_ddc;
  wire [128 : 0] stage1_rg_ddc$D_IN;
  wire stage1_rg_ddc$EN;

  // register stage1_rg_full
  reg stage1_rg_full;
  reg stage1_rg_full$D_IN;
  wire stage1_rg_full$EN;

  // register stage1_rg_run_state
  reg stage1_rg_run_state;
  wire stage1_rg_run_state$D_IN, stage1_rg_run_state$EN;

  // register stage2_rg_f5
  reg [4 : 0] stage2_rg_f5;
  wire [4 : 0] stage2_rg_f5$D_IN;
  wire stage2_rg_f5$EN;

  // register stage2_rg_full
  reg stage2_rg_full;
  wire stage2_rg_full$D_IN, stage2_rg_full$EN;

  // register stage2_rg_run_state
  reg stage2_rg_run_state;
  wire stage2_rg_run_state$D_IN, stage2_rg_run_state$EN;

  // register stage2_rg_stage2
  reg [646 : 0] stage2_rg_stage2;
  wire [646 : 0] stage2_rg_stage2$D_IN;
  wire stage2_rg_stage2$EN;

  // register stage3_rg_full
  reg stage3_rg_full;
  wire stage3_rg_full$D_IN, stage3_rg_full$EN;

  // register stage3_rg_run_state
  reg stage3_rg_run_state;
  wire stage3_rg_run_state$D_IN, stage3_rg_run_state$EN;

  // register stage3_rg_stage3
  reg [374 : 0] stage3_rg_stage3;
  wire [374 : 0] stage3_rg_stage3$D_IN;
  wire stage3_rg_stage3$EN;

  // ports of submodule csr_regfile
  reg [63 : 0] csr_regfile$csr_trap_actions_xtval;
  reg [4 : 0] csr_regfile$csr_trap_actions_exc_code;
  reg [1 : 0] csr_regfile$csr_ret_actions_from_priv;
  wire [193 : 0] csr_regfile$csr_trap_actions;
  wire [129 : 0] csr_regfile$csr_ret_actions;
  wire [128 : 0] csr_regfile$read_csr_cap, csr_regfile$write_csr_cap_value;
  wire [64 : 0] csr_regfile$read_csr;
  wire [63 : 0] csr_regfile$csr_trap_actions_pc,
		csr_regfile$read_csr_mcycle,
		csr_regfile$read_csr_minstret,
		csr_regfile$read_mstatus,
		csr_regfile$read_satp,
		csr_regfile$read_sstatus,
		csr_regfile$write_csr_word;
  wire [27 : 0] csr_regfile$read_misa;
  wire [11 : 0] csr_regfile$csr_counter_read_fault_csr_addr,
		csr_regfile$mav_read_csr_csr_addr,
		csr_regfile$read_csr_csr_addr,
		csr_regfile$read_csr_port2_csr_addr,
		csr_regfile$write_csr_csr_addr;
  wire [5 : 0] csr_regfile$interrupt_pending;
  wire [4 : 0] csr_regfile$read_csr_cap_csr_addr,
	       csr_regfile$write_csr_cap_cap_addr;
  wire [1 : 0] csr_regfile$csr_counter_read_fault_priv,
	       csr_regfile$csr_trap_actions_from_priv,
	       csr_regfile$interrupt_pending_cur_priv;
  wire csr_regfile$EN_csr_minstret_incr,
       csr_regfile$EN_csr_ret_actions,
       csr_regfile$EN_csr_trap_actions,
       csr_regfile$EN_external_interrupt_req,
       csr_regfile$EN_mav_read_csr,
       csr_regfile$EN_server_reset_request_put,
       csr_regfile$EN_server_reset_response_get,
       csr_regfile$EN_software_interrupt_req,
       csr_regfile$EN_timer_interrupt_req,
       csr_regfile$EN_write_csr,
       csr_regfile$EN_write_csr_cap,
       csr_regfile$RDY_external_interrupt_req,
       csr_regfile$RDY_server_reset_request_put,
       csr_regfile$RDY_server_reset_response_get,
       csr_regfile$RDY_software_interrupt_req,
       csr_regfile$RDY_timer_interrupt_req,
       csr_regfile$csr_counter_read_fault,
       csr_regfile$csr_trap_actions_interrupt,
       csr_regfile$external_interrupt_req_set_not_clear,
       csr_regfile$software_interrupt_req_set_not_clear,
       csr_regfile$timer_interrupt_req_set_not_clear,
       csr_regfile$wfi_resume;

  // ports of submodule f_reset_reqs
  wire f_reset_reqs$CLR,
       f_reset_reqs$DEQ,
       f_reset_reqs$EMPTY_N,
       f_reset_reqs$ENQ,
       f_reset_reqs$FULL_N;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule gpr_regfile
  wire [128 : 0] gpr_regfile$read_rs1,
		 gpr_regfile$read_rs2,
		 gpr_regfile$write_rd_rd_val;
  wire [63 : 0] gpr_regfile$write_rd_int_rd_val;
  wire [7 : 0] gpr_regfile$clear_quarter_mask;
  wire [4 : 0] gpr_regfile$read_rs1_port2_rs1,
	       gpr_regfile$read_rs1_rs1,
	       gpr_regfile$read_rs2_rs2,
	       gpr_regfile$write_rd_int_rd,
	       gpr_regfile$write_rd_rd;
  wire [1 : 0] gpr_regfile$clear_quarter_qid;
  wire gpr_regfile$EN_clear_quarter,
       gpr_regfile$EN_server_reset_request_put,
       gpr_regfile$EN_server_reset_response_get,
       gpr_regfile$EN_write_rd,
       gpr_regfile$EN_write_rd_int,
       gpr_regfile$RDY_server_reset_request_put,
       gpr_regfile$RDY_server_reset_response_get,
       gpr_regfile$is_busy;

  // ports of submodule near_mem
  reg [63 : 0] near_mem$imem_req_addr;
  reg [1 : 0] near_mem$imem_req_priv;
  wire [63 : 0] near_mem$dmem_master_araddr,
		near_mem$dmem_master_awaddr,
		near_mem$dmem_master_rdata,
		near_mem$dmem_master_wdata,
		near_mem$dmem_req_addr,
		near_mem$dmem_req_satp,
		near_mem$dmem_req_store_value,
		near_mem$dmem_word64,
		near_mem$imem_master_araddr,
		near_mem$imem_master_awaddr,
		near_mem$imem_master_rdata,
		near_mem$imem_master_wdata,
		near_mem$imem_pc,
		near_mem$imem_req_satp,
		near_mem$near_mem_slave_araddr,
		near_mem$near_mem_slave_awaddr,
		near_mem$near_mem_slave_rdata,
		near_mem$near_mem_slave_wdata;
  wire [31 : 0] near_mem$imem_instr;
  wire [7 : 0] near_mem$dmem_master_wstrb,
	       near_mem$imem_master_wstrb,
	       near_mem$near_mem_slave_wstrb,
	       near_mem$server_fence_request_put;
  wire [4 : 0] near_mem$dmem_exc_code, near_mem$imem_exc_code;
  wire [2 : 0] near_mem$dmem_master_arprot,
	       near_mem$dmem_master_awprot,
	       near_mem$dmem_req_f3,
	       near_mem$imem_master_arprot,
	       near_mem$imem_master_awprot,
	       near_mem$imem_req_f3,
	       near_mem$near_mem_slave_arprot,
	       near_mem$near_mem_slave_awprot;
  wire [1 : 0] near_mem$dmem_master_bresp,
	       near_mem$dmem_master_rresp,
	       near_mem$dmem_req_priv,
	       near_mem$imem_master_bresp,
	       near_mem$imem_master_rresp,
	       near_mem$near_mem_slave_bresp,
	       near_mem$near_mem_slave_rresp;
  wire near_mem$EN_dmem_req,
       near_mem$EN_imem_req,
       near_mem$EN_server_fence_i_request_put,
       near_mem$EN_server_fence_i_response_get,
       near_mem$EN_server_fence_request_put,
       near_mem$EN_server_fence_response_get,
       near_mem$EN_server_reset_request_put,
       near_mem$EN_server_reset_response_get,
       near_mem$EN_sfence_vma,
       near_mem$RDY_server_fence_i_request_put,
       near_mem$RDY_server_fence_i_response_get,
       near_mem$RDY_server_fence_request_put,
       near_mem$RDY_server_fence_response_get,
       near_mem$RDY_server_reset_request_put,
       near_mem$RDY_server_reset_response_get,
       near_mem$dmem_exc,
       near_mem$dmem_master_arready,
       near_mem$dmem_master_arvalid,
       near_mem$dmem_master_awready,
       near_mem$dmem_master_awvalid,
       near_mem$dmem_master_bready,
       near_mem$dmem_master_bvalid,
       near_mem$dmem_master_rready,
       near_mem$dmem_master_rvalid,
       near_mem$dmem_master_wready,
       near_mem$dmem_master_wvalid,
       near_mem$dmem_req_mstatus_MXR,
       near_mem$dmem_req_op,
       near_mem$dmem_req_sstatus_SUM,
       near_mem$dmem_valid,
       near_mem$imem_exc,
       near_mem$imem_master_arready,
       near_mem$imem_master_arvalid,
       near_mem$imem_master_awready,
       near_mem$imem_master_awvalid,
       near_mem$imem_master_bready,
       near_mem$imem_master_bvalid,
       near_mem$imem_master_rready,
       near_mem$imem_master_rvalid,
       near_mem$imem_master_wready,
       near_mem$imem_master_wvalid,
       near_mem$imem_req_mstatus_MXR,
       near_mem$imem_req_sstatus_SUM,
       near_mem$imem_req_trap,
       near_mem$imem_valid,
       near_mem$near_mem_slave_arready,
       near_mem$near_mem_slave_arvalid,
       near_mem$near_mem_slave_awready,
       near_mem$near_mem_slave_awvalid,
       near_mem$near_mem_slave_bready,
       near_mem$near_mem_slave_bvalid,
       near_mem$near_mem_slave_rready,
       near_mem$near_mem_slave_rvalid,
       near_mem$near_mem_slave_wready,
       near_mem$near_mem_slave_wvalid;

  // ports of submodule stage1_f_reset_reqs
  wire stage1_f_reset_reqs$CLR,
       stage1_f_reset_reqs$DEQ,
       stage1_f_reset_reqs$EMPTY_N,
       stage1_f_reset_reqs$ENQ,
       stage1_f_reset_reqs$FULL_N;

  // ports of submodule stage1_f_reset_rsps
  wire stage1_f_reset_rsps$CLR,
       stage1_f_reset_rsps$DEQ,
       stage1_f_reset_rsps$EMPTY_N,
       stage1_f_reset_rsps$ENQ,
       stage1_f_reset_rsps$FULL_N;

  // ports of submodule stage2_f_reset_reqs
  wire stage2_f_reset_reqs$CLR,
       stage2_f_reset_reqs$DEQ,
       stage2_f_reset_reqs$EMPTY_N,
       stage2_f_reset_reqs$ENQ,
       stage2_f_reset_reqs$FULL_N;

  // ports of submodule stage2_f_reset_rsps
  wire stage2_f_reset_rsps$CLR,
       stage2_f_reset_rsps$DEQ,
       stage2_f_reset_rsps$EMPTY_N,
       stage2_f_reset_rsps$ENQ,
       stage2_f_reset_rsps$FULL_N;

  // ports of submodule stage3_f_reset_reqs
  wire stage3_f_reset_reqs$CLR,
       stage3_f_reset_reqs$DEQ,
       stage3_f_reset_reqs$EMPTY_N,
       stage3_f_reset_reqs$ENQ,
       stage3_f_reset_reqs$FULL_N;

  // ports of submodule stage3_f_reset_rsps
  wire stage3_f_reset_rsps$CLR,
       stage3_f_reset_rsps$DEQ,
       stage3_f_reset_rsps$EMPTY_N,
       stage3_f_reset_rsps$ENQ,
       stage3_f_reset_rsps$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_WFI_resume,
       CAN_FIRE_RL_rl_finish_FENCE,
       CAN_FIRE_RL_rl_finish_FENCE_I,
       CAN_FIRE_RL_rl_finish_SFENCE_VMA,
       CAN_FIRE_RL_rl_pipe,
       CAN_FIRE_RL_rl_reset_complete,
       CAN_FIRE_RL_rl_reset_from_WFI,
       CAN_FIRE_RL_rl_reset_start,
       CAN_FIRE_RL_rl_show_pipe,
       CAN_FIRE_RL_rl_stage1_FENCE,
       CAN_FIRE_RL_rl_stage1_FENCE_I,
       CAN_FIRE_RL_rl_stage1_SFENCE_VMA,
       CAN_FIRE_RL_rl_stage1_WFI,
       CAN_FIRE_RL_rl_stage1_interrupt,
       CAN_FIRE_RL_rl_stage1_restart_after_csrrx,
       CAN_FIRE_RL_rl_stage1_trap,
       CAN_FIRE_RL_rl_stage1_xRET,
       CAN_FIRE_RL_rl_stage2_nonpipe,
       CAN_FIRE_RL_stage1_rl_reset,
       CAN_FIRE_RL_stage2_rl_reset,
       CAN_FIRE_RL_stage3_rl_reset,
       CAN_FIRE_dmem_master_m_arready,
       CAN_FIRE_dmem_master_m_awready,
       CAN_FIRE_dmem_master_m_bvalid,
       CAN_FIRE_dmem_master_m_rvalid,
       CAN_FIRE_dmem_master_m_wready,
       CAN_FIRE_external_interrupt_req,
       CAN_FIRE_hart0_server_reset_request_put,
       CAN_FIRE_hart0_server_reset_response_get,
       CAN_FIRE_imem_master_m_arready,
       CAN_FIRE_imem_master_m_awready,
       CAN_FIRE_imem_master_m_bvalid,
       CAN_FIRE_imem_master_m_rvalid,
       CAN_FIRE_imem_master_m_wready,
       CAN_FIRE_near_mem_slave_m_arvalid,
       CAN_FIRE_near_mem_slave_m_awvalid,
       CAN_FIRE_near_mem_slave_m_bready,
       CAN_FIRE_near_mem_slave_m_rready,
       CAN_FIRE_near_mem_slave_m_wvalid,
       CAN_FIRE_software_interrupt_req,
       CAN_FIRE_timer_interrupt_req,
       WILL_FIRE_RL_rl_WFI_resume,
       WILL_FIRE_RL_rl_finish_FENCE,
       WILL_FIRE_RL_rl_finish_FENCE_I,
       WILL_FIRE_RL_rl_finish_SFENCE_VMA,
       WILL_FIRE_RL_rl_pipe,
       WILL_FIRE_RL_rl_reset_complete,
       WILL_FIRE_RL_rl_reset_from_WFI,
       WILL_FIRE_RL_rl_reset_start,
       WILL_FIRE_RL_rl_show_pipe,
       WILL_FIRE_RL_rl_stage1_FENCE,
       WILL_FIRE_RL_rl_stage1_FENCE_I,
       WILL_FIRE_RL_rl_stage1_SFENCE_VMA,
       WILL_FIRE_RL_rl_stage1_WFI,
       WILL_FIRE_RL_rl_stage1_interrupt,
       WILL_FIRE_RL_rl_stage1_restart_after_csrrx,
       WILL_FIRE_RL_rl_stage1_trap,
       WILL_FIRE_RL_rl_stage1_xRET,
       WILL_FIRE_RL_rl_stage2_nonpipe,
       WILL_FIRE_RL_stage1_rl_reset,
       WILL_FIRE_RL_stage2_rl_reset,
       WILL_FIRE_RL_stage3_rl_reset,
       WILL_FIRE_dmem_master_m_arready,
       WILL_FIRE_dmem_master_m_awready,
       WILL_FIRE_dmem_master_m_bvalid,
       WILL_FIRE_dmem_master_m_rvalid,
       WILL_FIRE_dmem_master_m_wready,
       WILL_FIRE_external_interrupt_req,
       WILL_FIRE_hart0_server_reset_request_put,
       WILL_FIRE_hart0_server_reset_response_get,
       WILL_FIRE_imem_master_m_arready,
       WILL_FIRE_imem_master_m_awready,
       WILL_FIRE_imem_master_m_bvalid,
       WILL_FIRE_imem_master_m_rvalid,
       WILL_FIRE_imem_master_m_wready,
       WILL_FIRE_near_mem_slave_m_arvalid,
       WILL_FIRE_near_mem_slave_m_awvalid,
       WILL_FIRE_near_mem_slave_m_bready,
       WILL_FIRE_near_mem_slave_m_rready,
       WILL_FIRE_near_mem_slave_m_wvalid,
       WILL_FIRE_software_interrupt_req,
       WILL_FIRE_timer_interrupt_req;

  // inputs to muxes for submodule ports
  wire [63 : 0] MUX_rg_inum$write_1__VAL_1;
  wire MUX_near_mem$imem_req_1__SEL_1,
       MUX_near_mem$imem_req_1__SEL_3,
       MUX_near_mem$imem_req_1__SEL_4,
       MUX_rg_cur_priv$write_1__SEL_1,
       MUX_rg_inum$write_1__SEL_1,
       MUX_rg_inum$write_1__SEL_2,
       MUX_rg_state$write_1__SEL_1,
       MUX_rg_state$write_1__SEL_4,
       MUX_stage1_rg_full$write_1__VAL_11,
       MUX_stage2_rg_full$write_1__VAL_3;

  // remaining internal signals
  reg [128 : 0] CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q35;
  reg [127 : 0] CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q34,
		CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3,
		IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199,
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210,
		alu_outputs___1_addr_capability__h38848,
		alu_outputs___1_val1_capability__h39919,
		alu_outputs_addr_capability__h38863,
		alu_outputs_val2_capability__h45381,
		ccsr_val_capability__h39994,
		x_out_bypass_rd_val_capability__h4621;
  reg [63 : 0] _theResult_____1_snd__h37476, csr_val__h6361, new_addr__h39855;
  reg [4 : 0] CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q24,
	      CASE_rg_cur_priv_0b0_8_0b1_9_11__q23,
	      IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2442,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462,
	      alu_outputs___1_exc_code__h36686,
	      alu_outputs___1_exc_code__h5858,
	      alu_outputs___1_exc_code__h6983,
	      alu_outputs_exc_code__h36710,
	      check__h34127,
	      fv_out_data_to_stage2_rd__h5766,
	      x_out_data_to_stage3_rd__h4794;
  reg [3 : 0] CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q25,
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q26,
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1661,
	      IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1617,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658,
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668,
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1672;
  reg [2 : 0] CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q27,
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q28,
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1766;
  reg [1 : 0] CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2,
	      IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151;
  reg IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1306,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1534,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2013,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2017,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2504,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2507,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2624,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1324,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1552,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2642,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2657,
      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494,
      TASK_testplusargs___d2555,
      TASK_testplusargs___d2556,
      x_out_bypass_rd_val_tag__h4620;
  wire [128 : 0] near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2213,
		 stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186;
  wire [127 : 0] IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2173,
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322,
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344,
		 IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2186,
		 IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2211,
		 IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317,
		 IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340,
		 _theResult___snd_capability__h39943,
		 alu_outputs___1_addr_capability__h38766,
		 alu_outputs___1_addr_capability__h38780,
		 alu_outputs___1_addr_capability__h38804,
		 alu_outputs___1_val1_capability__h39838,
		 alu_outputs___1_val1_capability__h39846,
		 alu_outputs___1_val1_capability__h39850,
		 alu_outputs___1_val1_capability__h39854,
		 alu_outputs___1_val1_capability__h39858,
		 alu_outputs___1_val1_capability__h39861,
		 alu_outputs___1_val1_capability__h39864,
		 alu_outputs___1_val1_capability__h39874,
		 alu_outputs___1_val1_capability__h39906,
		 alu_outputs___1_val1_capability__h40018,
		 alu_outputs___1_val2_capability__h45298,
		 alu_outputs___1_val2_capability__h45314,
		 alu_outputs___2_addr_capability__h38825,
		 alu_outputs_addr_capability__h38749,
		 alu_outputs_addr_capability__h38753,
		 alu_outputs_addr_capability__h38757,
		 alu_outputs_addr_capability__h38769,
		 b_capability__h6710,
		 b_capability__h6722,
		 b_capability__h7260,
		 b_capability__h7272,
		 controller_capability__h35449,
		 csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d2858,
		 new_pcc_capability__h34176,
		 newcap__h7852,
		 out_val_capability__h33165,
		 output_stage2___1_bypass_rd_val_capability__h4613,
		 pcc_capability__h34048,
		 ret_capability__h39937,
		 rs1_cap403_AND_INV_0xFFFFFFFFFFFFFFFFFFFFFFFFF_ETC__q11,
		 rs1_cap__h6403,
		 rs2_val_bypassed_capability274_AND_INV_0xFFFFF_ETC__q6,
		 rs2_val_bypassed_capability__h7274;
  wire [64 : 0] _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_19_ETC__q32,
		_0_CONCAT_x0717_SL_rs2_val_bypassed_capability2_ETC__q31,
		b_val__h40160,
		b_val__h40436,
		result0159_PLUS_b_val0160__q30,
		result0435_PLUS_b_val0436__q29,
		result__h40159,
		result__h40435;
  wire [63 : 0] IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280,
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2537,
		INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014,
		SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1355,
		_theResult_____1_snd__h37469,
		_theResult_____1_snd__h37504,
		_theResult_____4__h45524,
		_theResult_____5__h45523,
		_theResult____h52119,
		_theResult___snd__h37580,
		_theResult___snd__h37587,
		_theResult___snd__h37693,
		_theResult___snd__h41549,
		b__h33128,
		b__h35689,
		b__h7394,
		bot__h8347,
		branch_target__h5843,
		cpi__h52121,
		cpifrac__h52122,
		csr_val___1__h45683,
		csr_val___2__h45522,
		csr_val___2__h45531,
		csr_val___2__h45608,
		csr_val___2__h45623,
		csr_val__h39684,
		csr_val__h39689,
		delta_CPI_cycles__h52117,
		delta_CPI_instrs___1__h52154,
		delta_CPI_instrs__h52118,
		eaddr__h6106,
		fv_out_next_pc__h5702,
		lower__h33126,
		near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353,
		newVal__h6410,
		newVal__h6416,
		newVal__h6425,
		new_addr__h39843,
		new_addr__h39847,
		new_addr__h39851,
		new_addr__h39961,
		new_addr__h45309,
		new_curs__h7886,
		new_offset__h39876,
		new_pc__h5854,
		next_pc__h5872,
		next_pc__h5895,
		old_lower__h8036,
		old_top__h8037,
		rd_val___1__h37456,
		rd_val___1__h37464,
		rd_val___1__h37471,
		rd_val___1__h37478,
		rd_val___1__h37485,
		rd_val___1__h37492,
		rd_val___1__h41646,
		rd_val___1__h41698,
		rd_val___1__h41752,
		rd_val___1__h41781,
		rd_val___1__h41879,
		rd_val___1__h41967,
		rd_val___1__h41973,
		rd_val___1__h42018,
		rd_val__h41335,
		rd_val__h41429,
		rd_val__h41451,
		rd_val__h6051,
		rd_val__h6068,
		rd_val__h6357,
		requested_top__h8035,
		ret_pc__h5871,
		rs1_cap403_BITS_63_TO_0_AND_INV_0xFFFFFFFFFFFF_ETC__q13,
		rs1_cap403_BITS_63_TO_0_SRL_exp341__q19,
		rs1_cap403_BITS_63_TO_0__q14,
		rs1_val__h6356,
		rs2_val_bypassed_capability274_BITS_63_TO_0_AN_ETC__q7,
		top__h8346,
		upper__h33127,
		upper__h34555,
		upper__h35688,
		upper__h35904,
		upper__h36120,
		upper__h36336,
		upper__h6446,
		upper__h7393,
		value__h38714,
		x__h19611,
		x__h28678,
		x__h28679,
		x__h33131,
		x__h33372,
		x__h33389,
		x__h34706,
		x__h34723,
		x__h35692,
		x__h35839,
		x__h35856,
		x__h36055,
		x__h36072,
		x__h36271,
		x__h36288,
		x__h36487,
		x__h36504,
		x__h52120,
		x__h6450,
		x__h6849,
		x__h6866,
		x__h7397,
		x__h7544,
		x__h7561,
		y__h19610,
		y__h45753;
  wire [31 : 0] IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2297,
		new_offset9876_BITS_31_TO_0__q22,
		rs1_cap403_BITS_31_TO_0_MINUS_rs2_val_bypassed_ETC__q16,
		rs1_cap403_BITS_31_TO_0_PLUS_rs2_val_bypassed__ETC__q15,
		rs1_cap403_BITS_31_TO_0_SRL_rs2_val_bypassed_c_ETC__q9,
		rs1_cap403_BITS_31_TO_0__q8,
		tmp__h41780,
		v32__h6049,
		x__h41701,
		x__h41755,
		x__h41976,
		x__h42021;
  wire [23 : 0] x__h33213;
  wire [20 : 0] near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q20;
  wire [19 : 0] IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d567,
		aMid__h40237,
		aMid__h40513,
		ct_T__h33049,
		r__h40238,
		r__h40514,
		x__h33007,
		x__h33301,
		x__h35767,
		x__h40389,
		x__h40717,
		x__h7472,
		x__h8073,
		x__h8212,
		x__h8357;
  wire [14 : 0] newperms__h7851, y__h40079;
  wire [12 : 0] near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1;
  wire [11 : 0] near_memimem_instr_BITS_31_TO_20__q21,
		near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10;
  wire [9 : 0] funct10__h6030, x__h43663;
  wire [7 : 0] stage3_rg_stage3_BITS_136_TO_129__q4,
	       x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5;
  wire [6 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1002,
	       _44_MINUS_leading399__q12,
	       _63_MINUS_IF_rs2_val_bypassed_capability274_BIT_ETC__q17,
	       increase8591_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q18,
	       increase__h28591,
	       leading__h8399,
	       x__h17361,
	       x__h17373,
	       x__h17385,
	       x__h17397,
	       x__h17409,
	       x__h17421,
	       x__h17433,
	       x__h17445,
	       x__h17457,
	       x__h17469,
	       x__h17481,
	       x__h17493,
	       x__h17505,
	       x__h17517,
	       x__h17529,
	       x__h17541,
	       x__h17553,
	       x__h17565,
	       x__h17577,
	       x__h17589,
	       x__h17601,
	       x__h17613,
	       x__h17625,
	       x__h17637,
	       x__h17649,
	       x__h17661,
	       x__h17673,
	       x__h17685,
	       x__h17697,
	       x__h17709,
	       x__h17721,
	       x__h17733,
	       x__h17745,
	       x__h17757,
	       x__h17769,
	       x__h17781,
	       x__h17793,
	       x__h17805,
	       x__h17817,
	       x__h17829,
	       x__h17841,
	       x__h17853,
	       x__h17865,
	       x__h17877,
	       x__h17889,
	       x__h17901,
	       x__h17913,
	       x__h17925,
	       x__h17937,
	       x__h17949,
	       x__h17961,
	       x__h17973,
	       x__h17985,
	       x__h17997,
	       x__h18009,
	       x__h18021,
	       x__h18033,
	       x__h18045,
	       x__h18057,
	       x__h18069,
	       x__h18081,
	       x__h18093,
	       x__h18105,
	       y__h17362,
	       y__h17374,
	       y__h17386,
	       y__h17398,
	       y__h17410,
	       y__h17422,
	       y__h17434,
	       y__h17446,
	       y__h17458,
	       y__h17470,
	       y__h17482,
	       y__h17494,
	       y__h17506,
	       y__h17518,
	       y__h17530,
	       y__h17542,
	       y__h17554,
	       y__h17566,
	       y__h17578,
	       y__h17590,
	       y__h17602,
	       y__h17614,
	       y__h17626,
	       y__h17638,
	       y__h17650,
	       y__h17662,
	       y__h17674,
	       y__h17686,
	       y__h17698,
	       y__h17710,
	       y__h17722,
	       y__h17734,
	       y__h17746,
	       y__h17758,
	       y__h17770,
	       y__h17782,
	       y__h17794,
	       y__h17806,
	       y__h17818,
	       y__h17830,
	       y__h17842,
	       y__h17854,
	       y__h17866,
	       y__h17878,
	       y__h17890,
	       y__h17902,
	       y__h17914,
	       y__h17926,
	       y__h17938,
	       y__h17950,
	       y__h17962,
	       y__h17974,
	       y__h17986,
	       y__h17998,
	       y__h18010,
	       y__h18022,
	       y__h18034,
	       y__h18046,
	       y__h18058,
	       y__h18070,
	       y__h18082,
	       y__h18094,
	       y__h18106;
  wire [5 : 0] baseExp__h8364,
	       exp__h8341,
	       i1__h40242,
	       i1__h40518,
	       i2__h40177,
	       i2__h40453,
	       rangeExp__h8363,
	       shamt__h5945;
  wire [4 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2380,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2397,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2421,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2435,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2446,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2367,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2375,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2394,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2430,
	       IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2419,
	       IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2433,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2403,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2444,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2385,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2395,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2399,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2401,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2423,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2437,
	       _theResult___exc_code__h37986,
	       _theResult___fst__h8032,
	       _theResult___fst__h8039,
	       alu_outputs___1_exc_code__h38213,
	       alu_outputs___1_exc_code__h6371,
	       check__h35421,
	       check__h6436,
	       check__h6993,
	       check__h7610,
	       decoded_instr_rs2__h5316,
	       fv_out_trap_info_exc_code__h38470,
	       out__h35195,
	       trap__h7991;
  wire [3 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1635,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1642,
	       IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1583,
	       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674,
	       IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1619,
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1621,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1633,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1636,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1641,
	       IF_rg_cur_priv_9_EQ_0b11_589_OR_rg_cur_priv_9__ETC___d1615,
	       cur_verbosity__h1374;
  wire [2 : 0] x__h45254;
  wire [1 : 0] IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1955,
	       IF_csr_regfileread_misa_BIT_18_THEN_spp5528_E_ETC__q33,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1975,
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114,
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152,
	       IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108,
	       b__h40172,
	       b__h40448,
	       ms_spp__h3168,
	       ms_sxl__h3157,
	       ms_uxl__h3158,
	       spliced_bits__h45579,
	       spp__h45528,
	       x__h40167,
	       x__h40443;
  wire IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1948,
       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1968,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1236,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1271,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1279,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1287,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1499,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1525,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1947,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2409,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2617,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d519,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d524,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d527,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1195,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1460,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1638,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2586,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2587,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2592,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2597,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2598,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2610,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2611,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d495,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d504,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505,
       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2855,
       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1317,
       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1545,
       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2518,
       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2635,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1362,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1465,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1475,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1967,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2388,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2649,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d539,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d554,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d565,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d570,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d572,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1303,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1531,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1855,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2006,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2530,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2621,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1282,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1290,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1484,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1496,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1522,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1639,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2004,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2226,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2615,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2646,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2868,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2782,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1192,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d486,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d501,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d1193,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2584,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2590,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2595,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2608,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d487,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d502,
       NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1011,
       NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1992,
       NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d530,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2703,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2705,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1374,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1469,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2487,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2490,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1202,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1227,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1516,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274,
       NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260,
       NOT_near_mem_imem_exc__38_390_AND_IF_near_mem__ETC___d1837,
       NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403,
       NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1734,
       NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1799,
       NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1825,
       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1441,
       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1833,
       NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1339,
       NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1478,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1481,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2601,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2602,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2606,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2607,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2660,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2671,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2673,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2785,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2786,
       NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2676,
       NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2719,
       NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728,
       NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2780,
       NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2789,
       NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2791,
       NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2794,
       NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d2805,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1174,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1179,
       _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1154,
       _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1158,
       alu_outputs___1_addr_tag__h38803,
       alu_outputs___1_addr_tag__h38847,
       alu_outputs___1_val1_tag__h39918,
       alu_outputs___1_val1_tag__h40017,
       alu_outputs___1_val2_tag__h45365,
       alu_outputs_addr_tag__h38862,
       alu_outputs_val2_tag__h45380,
       csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1401,
       global__h34174,
       global__h39926,
       gpr_regfile_RDY_server_reset_response_get__561_ETC___d2573,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2317,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2320,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2323,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2326,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2329,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2332,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2335,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2338,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2341,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2344,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2347,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262,
       near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_5_ETC___d1594,
       near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426,
       near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1420,
       near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1559,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1164,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1183,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d532,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d546,
       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2740,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2716,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2717,
       output_stage2___1_bypass_rd_val_tag__h4612,
       rg_cur_priv_9_EQ_0b11_589_OR_rg_cur_priv_9_EQ__ETC___d1613,
       rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1226,
       rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249,
       rg_halt_665_OR_csr_regfile_interrupt_pending_r_ETC___d2811,
       rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2823,
       rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2836,
       rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2842,
       rg_state_7_EQ_2_578_AND_stage1_rg_full_16_AND__ETC___d2873,
       rg_state_7_EQ_2_578_AND_stage1_rg_full_16_OR_N_ETC___d2679,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1678,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1682,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1686,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1690,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1694,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1698,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1702,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1706,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1710,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1714,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1779,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1783,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1787,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1791,
       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333,
       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309,
       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332,
       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307,
       stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90;

  // action method hart0_server_reset_request_put
  assign RDY_hart0_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign CAN_FIRE_hart0_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign WILL_FIRE_hart0_server_reset_request_put =
	     EN_hart0_server_reset_request_put ;

  // action method hart0_server_reset_response_get
  assign RDY_hart0_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_hart0_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_hart0_server_reset_response_get =
	     EN_hart0_server_reset_response_get ;

  // value method imem_master_m_awvalid
  assign imem_master_awvalid = near_mem$imem_master_awvalid ;

  // value method imem_master_m_awaddr
  assign imem_master_awaddr = near_mem$imem_master_awaddr ;

  // value method imem_master_m_awprot
  assign imem_master_awprot = near_mem$imem_master_awprot ;

  // action method imem_master_m_awready
  assign CAN_FIRE_imem_master_m_awready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_awready = 1'd1 ;

  // value method imem_master_m_wvalid
  assign imem_master_wvalid = near_mem$imem_master_wvalid ;

  // value method imem_master_m_wdata
  assign imem_master_wdata = near_mem$imem_master_wdata ;

  // value method imem_master_m_wstrb
  assign imem_master_wstrb = near_mem$imem_master_wstrb ;

  // action method imem_master_m_wready
  assign CAN_FIRE_imem_master_m_wready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_wready = 1'd1 ;

  // action method imem_master_m_bvalid
  assign CAN_FIRE_imem_master_m_bvalid = 1'd1 ;
  assign WILL_FIRE_imem_master_m_bvalid = 1'd1 ;

  // value method imem_master_m_bready
  assign imem_master_bready = near_mem$imem_master_bready ;

  // value method imem_master_m_arvalid
  assign imem_master_arvalid = near_mem$imem_master_arvalid ;

  // value method imem_master_m_araddr
  assign imem_master_araddr = near_mem$imem_master_araddr ;

  // value method imem_master_m_arprot
  assign imem_master_arprot = near_mem$imem_master_arprot ;

  // action method imem_master_m_arready
  assign CAN_FIRE_imem_master_m_arready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_arready = 1'd1 ;

  // action method imem_master_m_rvalid
  assign CAN_FIRE_imem_master_m_rvalid = 1'd1 ;
  assign WILL_FIRE_imem_master_m_rvalid = 1'd1 ;

  // value method imem_master_m_rready
  assign imem_master_rready = near_mem$imem_master_rready ;

  // value method dmem_master_m_awvalid
  assign dmem_master_awvalid = near_mem$dmem_master_awvalid ;

  // value method dmem_master_m_awaddr
  assign dmem_master_awaddr = near_mem$dmem_master_awaddr ;

  // value method dmem_master_m_awprot
  assign dmem_master_awprot = near_mem$dmem_master_awprot ;

  // action method dmem_master_m_awready
  assign CAN_FIRE_dmem_master_m_awready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_awready = 1'd1 ;

  // value method dmem_master_m_wvalid
  assign dmem_master_wvalid = near_mem$dmem_master_wvalid ;

  // value method dmem_master_m_wdata
  assign dmem_master_wdata = near_mem$dmem_master_wdata ;

  // value method dmem_master_m_wstrb
  assign dmem_master_wstrb = near_mem$dmem_master_wstrb ;

  // action method dmem_master_m_wready
  assign CAN_FIRE_dmem_master_m_wready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_wready = 1'd1 ;

  // action method dmem_master_m_bvalid
  assign CAN_FIRE_dmem_master_m_bvalid = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_bvalid = 1'd1 ;

  // value method dmem_master_m_bready
  assign dmem_master_bready = near_mem$dmem_master_bready ;

  // value method dmem_master_m_arvalid
  assign dmem_master_arvalid = near_mem$dmem_master_arvalid ;

  // value method dmem_master_m_araddr
  assign dmem_master_araddr = near_mem$dmem_master_araddr ;

  // value method dmem_master_m_arprot
  assign dmem_master_arprot = near_mem$dmem_master_arprot ;

  // action method dmem_master_m_arready
  assign CAN_FIRE_dmem_master_m_arready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_arready = 1'd1 ;

  // action method dmem_master_m_rvalid
  assign CAN_FIRE_dmem_master_m_rvalid = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_rvalid = 1'd1 ;

  // value method dmem_master_m_rready
  assign dmem_master_rready = near_mem$dmem_master_rready ;

  // action method near_mem_slave_m_awvalid
  assign CAN_FIRE_near_mem_slave_m_awvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_awvalid = 1'd1 ;

  // value method near_mem_slave_m_awready
  assign near_mem_slave_awready = near_mem$near_mem_slave_awready ;

  // action method near_mem_slave_m_wvalid
  assign CAN_FIRE_near_mem_slave_m_wvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_wvalid = 1'd1 ;

  // value method near_mem_slave_m_wready
  assign near_mem_slave_wready = near_mem$near_mem_slave_wready ;

  // value method near_mem_slave_m_bvalid
  assign near_mem_slave_bvalid = near_mem$near_mem_slave_bvalid ;

  // value method near_mem_slave_m_bresp
  assign near_mem_slave_bresp = near_mem$near_mem_slave_bresp ;

  // action method near_mem_slave_m_bready
  assign CAN_FIRE_near_mem_slave_m_bready = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_bready = 1'd1 ;

  // action method near_mem_slave_m_arvalid
  assign CAN_FIRE_near_mem_slave_m_arvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_arvalid = 1'd1 ;

  // value method near_mem_slave_m_arready
  assign near_mem_slave_arready = near_mem$near_mem_slave_arready ;

  // value method near_mem_slave_m_rvalid
  assign near_mem_slave_rvalid = near_mem$near_mem_slave_rvalid ;

  // value method near_mem_slave_m_rresp
  assign near_mem_slave_rresp = near_mem$near_mem_slave_rresp ;

  // value method near_mem_slave_m_rdata
  assign near_mem_slave_rdata = near_mem$near_mem_slave_rdata ;

  // action method near_mem_slave_m_rready
  assign CAN_FIRE_near_mem_slave_m_rready = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_rready = 1'd1 ;

  // action method external_interrupt_req
  assign RDY_external_interrupt_req = csr_regfile$RDY_external_interrupt_req ;
  assign CAN_FIRE_external_interrupt_req =
	     csr_regfile$RDY_external_interrupt_req ;
  assign WILL_FIRE_external_interrupt_req = EN_external_interrupt_req ;

  // action method timer_interrupt_req
  assign RDY_timer_interrupt_req = csr_regfile$RDY_timer_interrupt_req ;
  assign CAN_FIRE_timer_interrupt_req = csr_regfile$RDY_timer_interrupt_req ;
  assign WILL_FIRE_timer_interrupt_req = EN_timer_interrupt_req ;

  // action method software_interrupt_req
  assign RDY_software_interrupt_req = csr_regfile$RDY_software_interrupt_req ;
  assign CAN_FIRE_software_interrupt_req =
	     csr_regfile$RDY_software_interrupt_req ;
  assign WILL_FIRE_software_interrupt_req = EN_software_interrupt_req ;

  // submodule csr_regfile
  mkCSR_RegFile csr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .csr_counter_read_fault_csr_addr(csr_regfile$csr_counter_read_fault_csr_addr),
			    .csr_counter_read_fault_priv(csr_regfile$csr_counter_read_fault_priv),
			    .csr_ret_actions_from_priv(csr_regfile$csr_ret_actions_from_priv),
			    .csr_trap_actions_exc_code(csr_regfile$csr_trap_actions_exc_code),
			    .csr_trap_actions_from_priv(csr_regfile$csr_trap_actions_from_priv),
			    .csr_trap_actions_interrupt(csr_regfile$csr_trap_actions_interrupt),
			    .csr_trap_actions_pc(csr_regfile$csr_trap_actions_pc),
			    .csr_trap_actions_xtval(csr_regfile$csr_trap_actions_xtval),
			    .external_interrupt_req_set_not_clear(csr_regfile$external_interrupt_req_set_not_clear),
			    .interrupt_pending_cur_priv(csr_regfile$interrupt_pending_cur_priv),
			    .mav_read_csr_csr_addr(csr_regfile$mav_read_csr_csr_addr),
			    .read_csr_cap_csr_addr(csr_regfile$read_csr_cap_csr_addr),
			    .read_csr_csr_addr(csr_regfile$read_csr_csr_addr),
			    .read_csr_port2_csr_addr(csr_regfile$read_csr_port2_csr_addr),
			    .software_interrupt_req_set_not_clear(csr_regfile$software_interrupt_req_set_not_clear),
			    .timer_interrupt_req_set_not_clear(csr_regfile$timer_interrupt_req_set_not_clear),
			    .write_csr_cap_cap_addr(csr_regfile$write_csr_cap_cap_addr),
			    .write_csr_cap_value(csr_regfile$write_csr_cap_value),
			    .write_csr_csr_addr(csr_regfile$write_csr_csr_addr),
			    .write_csr_word(csr_regfile$write_csr_word),
			    .EN_server_reset_request_put(csr_regfile$EN_server_reset_request_put),
			    .EN_server_reset_response_get(csr_regfile$EN_server_reset_response_get),
			    .EN_mav_read_csr(csr_regfile$EN_mav_read_csr),
			    .EN_write_csr_cap(csr_regfile$EN_write_csr_cap),
			    .EN_write_csr(csr_regfile$EN_write_csr),
			    .EN_csr_trap_actions(csr_regfile$EN_csr_trap_actions),
			    .EN_csr_ret_actions(csr_regfile$EN_csr_ret_actions),
			    .EN_csr_minstret_incr(csr_regfile$EN_csr_minstret_incr),
			    .EN_external_interrupt_req(csr_regfile$EN_external_interrupt_req),
			    .EN_timer_interrupt_req(csr_regfile$EN_timer_interrupt_req),
			    .EN_software_interrupt_req(csr_regfile$EN_software_interrupt_req),
			    .RDY_server_reset_request_put(csr_regfile$RDY_server_reset_request_put),
			    .RDY_server_reset_response_get(csr_regfile$RDY_server_reset_response_get),
			    .read_csr(csr_regfile$read_csr),
			    .read_csr_port2(),
			    .mav_read_csr(),
			    .read_csr_cap(csr_regfile$read_csr_cap),
			    .read_misa(csr_regfile$read_misa),
			    .read_mstatus(csr_regfile$read_mstatus),
			    .read_sstatus(csr_regfile$read_sstatus),
			    .read_satp(csr_regfile$read_satp),
			    .csr_trap_actions(csr_regfile$csr_trap_actions),
			    .RDY_csr_trap_actions(),
			    .csr_ret_actions(csr_regfile$csr_ret_actions),
			    .RDY_csr_ret_actions(),
			    .read_csr_minstret(csr_regfile$read_csr_minstret),
			    .read_csr_mcycle(csr_regfile$read_csr_mcycle),
			    .read_csr_mtime(),
			    .csr_counter_read_fault(csr_regfile$csr_counter_read_fault),
			    .read_csr_mip(),
			    .RDY_external_interrupt_req(csr_regfile$RDY_external_interrupt_req),
			    .RDY_timer_interrupt_req(csr_regfile$RDY_timer_interrupt_req),
			    .RDY_software_interrupt_req(csr_regfile$RDY_software_interrupt_req),
			    .interrupt_pending(csr_regfile$interrupt_pending),
			    .wfi_resume(csr_regfile$wfi_resume));

  // submodule f_reset_reqs
  FIFO20 #(.guarded(32'd1)) f_reset_reqs(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_reqs$ENQ),
					 .DEQ(f_reset_reqs$DEQ),
					 .CLR(f_reset_reqs$CLR),
					 .FULL_N(f_reset_reqs$FULL_N),
					 .EMPTY_N(f_reset_reqs$EMPTY_N));

  // submodule f_reset_rsps
  FIFO20 #(.guarded(32'd1)) f_reset_rsps(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_rsps$ENQ),
					 .DEQ(f_reset_rsps$DEQ),
					 .CLR(f_reset_rsps$CLR),
					 .FULL_N(f_reset_rsps$FULL_N),
					 .EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule gpr_regfile
  mkGPR_RegFile gpr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .clear_quarter_mask(gpr_regfile$clear_quarter_mask),
			    .clear_quarter_qid(gpr_regfile$clear_quarter_qid),
			    .read_rs1_port2_rs1(gpr_regfile$read_rs1_port2_rs1),
			    .read_rs1_rs1(gpr_regfile$read_rs1_rs1),
			    .read_rs2_rs2(gpr_regfile$read_rs2_rs2),
			    .write_rd_int_rd(gpr_regfile$write_rd_int_rd),
			    .write_rd_int_rd_val(gpr_regfile$write_rd_int_rd_val),
			    .write_rd_rd(gpr_regfile$write_rd_rd),
			    .write_rd_rd_val(gpr_regfile$write_rd_rd_val),
			    .EN_server_reset_request_put(gpr_regfile$EN_server_reset_request_put),
			    .EN_server_reset_response_get(gpr_regfile$EN_server_reset_response_get),
			    .EN_write_rd(gpr_regfile$EN_write_rd),
			    .EN_write_rd_int(gpr_regfile$EN_write_rd_int),
			    .EN_clear_quarter(gpr_regfile$EN_clear_quarter),
			    .RDY_server_reset_request_put(gpr_regfile$RDY_server_reset_request_put),
			    .RDY_server_reset_response_get(gpr_regfile$RDY_server_reset_response_get),
			    .read_rs1(gpr_regfile$read_rs1),
			    .read_rs1_port2(),
			    .read_rs2(gpr_regfile$read_rs2),
			    .is_busy(gpr_regfile$is_busy));

  // submodule near_mem
  mkNear_Mem near_mem(.CLK(CLK),
		      .RST_N(RST_N),
		      .dmem_master_arready(near_mem$dmem_master_arready),
		      .dmem_master_awready(near_mem$dmem_master_awready),
		      .dmem_master_bresp(near_mem$dmem_master_bresp),
		      .dmem_master_bvalid(near_mem$dmem_master_bvalid),
		      .dmem_master_rdata(near_mem$dmem_master_rdata),
		      .dmem_master_rresp(near_mem$dmem_master_rresp),
		      .dmem_master_rvalid(near_mem$dmem_master_rvalid),
		      .dmem_master_wready(near_mem$dmem_master_wready),
		      .dmem_req_addr(near_mem$dmem_req_addr),
		      .dmem_req_f3(near_mem$dmem_req_f3),
		      .dmem_req_mstatus_MXR(near_mem$dmem_req_mstatus_MXR),
		      .dmem_req_op(near_mem$dmem_req_op),
		      .dmem_req_priv(near_mem$dmem_req_priv),
		      .dmem_req_satp(near_mem$dmem_req_satp),
		      .dmem_req_sstatus_SUM(near_mem$dmem_req_sstatus_SUM),
		      .dmem_req_store_value(near_mem$dmem_req_store_value),
		      .imem_master_arready(near_mem$imem_master_arready),
		      .imem_master_awready(near_mem$imem_master_awready),
		      .imem_master_bresp(near_mem$imem_master_bresp),
		      .imem_master_bvalid(near_mem$imem_master_bvalid),
		      .imem_master_rdata(near_mem$imem_master_rdata),
		      .imem_master_rresp(near_mem$imem_master_rresp),
		      .imem_master_rvalid(near_mem$imem_master_rvalid),
		      .imem_master_wready(near_mem$imem_master_wready),
		      .imem_req_addr(near_mem$imem_req_addr),
		      .imem_req_f3(near_mem$imem_req_f3),
		      .imem_req_mstatus_MXR(near_mem$imem_req_mstatus_MXR),
		      .imem_req_priv(near_mem$imem_req_priv),
		      .imem_req_satp(near_mem$imem_req_satp),
		      .imem_req_sstatus_SUM(near_mem$imem_req_sstatus_SUM),
		      .imem_req_trap(near_mem$imem_req_trap),
		      .near_mem_slave_araddr(near_mem$near_mem_slave_araddr),
		      .near_mem_slave_arprot(near_mem$near_mem_slave_arprot),
		      .near_mem_slave_arvalid(near_mem$near_mem_slave_arvalid),
		      .near_mem_slave_awaddr(near_mem$near_mem_slave_awaddr),
		      .near_mem_slave_awprot(near_mem$near_mem_slave_awprot),
		      .near_mem_slave_awvalid(near_mem$near_mem_slave_awvalid),
		      .near_mem_slave_bready(near_mem$near_mem_slave_bready),
		      .near_mem_slave_rready(near_mem$near_mem_slave_rready),
		      .near_mem_slave_wdata(near_mem$near_mem_slave_wdata),
		      .near_mem_slave_wstrb(near_mem$near_mem_slave_wstrb),
		      .near_mem_slave_wvalid(near_mem$near_mem_slave_wvalid),
		      .server_fence_request_put(near_mem$server_fence_request_put),
		      .EN_server_reset_request_put(near_mem$EN_server_reset_request_put),
		      .EN_server_reset_response_get(near_mem$EN_server_reset_response_get),
		      .EN_imem_req(near_mem$EN_imem_req),
		      .EN_dmem_req(near_mem$EN_dmem_req),
		      .EN_server_fence_i_request_put(near_mem$EN_server_fence_i_request_put),
		      .EN_server_fence_i_response_get(near_mem$EN_server_fence_i_response_get),
		      .EN_server_fence_request_put(near_mem$EN_server_fence_request_put),
		      .EN_server_fence_response_get(near_mem$EN_server_fence_response_get),
		      .EN_sfence_vma(near_mem$EN_sfence_vma),
		      .RDY_server_reset_request_put(near_mem$RDY_server_reset_request_put),
		      .RDY_server_reset_response_get(near_mem$RDY_server_reset_response_get),
		      .imem_valid(near_mem$imem_valid),
		      .imem_pc(near_mem$imem_pc),
		      .imem_instr(near_mem$imem_instr),
		      .imem_exc(near_mem$imem_exc),
		      .imem_exc_code(near_mem$imem_exc_code),
		      .imem_master_awvalid(near_mem$imem_master_awvalid),
		      .imem_master_awaddr(near_mem$imem_master_awaddr),
		      .imem_master_awprot(near_mem$imem_master_awprot),
		      .imem_master_wvalid(near_mem$imem_master_wvalid),
		      .imem_master_wdata(near_mem$imem_master_wdata),
		      .imem_master_wstrb(near_mem$imem_master_wstrb),
		      .imem_master_bready(near_mem$imem_master_bready),
		      .imem_master_arvalid(near_mem$imem_master_arvalid),
		      .imem_master_araddr(near_mem$imem_master_araddr),
		      .imem_master_arprot(near_mem$imem_master_arprot),
		      .imem_master_rready(near_mem$imem_master_rready),
		      .dmem_valid(near_mem$dmem_valid),
		      .dmem_word64(near_mem$dmem_word64),
		      .dmem_st_amo_val(),
		      .dmem_exc(near_mem$dmem_exc),
		      .dmem_exc_code(near_mem$dmem_exc_code),
		      .dmem_master_awvalid(near_mem$dmem_master_awvalid),
		      .dmem_master_awaddr(near_mem$dmem_master_awaddr),
		      .dmem_master_awprot(near_mem$dmem_master_awprot),
		      .dmem_master_wvalid(near_mem$dmem_master_wvalid),
		      .dmem_master_wdata(near_mem$dmem_master_wdata),
		      .dmem_master_wstrb(near_mem$dmem_master_wstrb),
		      .dmem_master_bready(near_mem$dmem_master_bready),
		      .dmem_master_arvalid(near_mem$dmem_master_arvalid),
		      .dmem_master_araddr(near_mem$dmem_master_araddr),
		      .dmem_master_arprot(near_mem$dmem_master_arprot),
		      .dmem_master_rready(near_mem$dmem_master_rready),
		      .RDY_server_fence_i_request_put(near_mem$RDY_server_fence_i_request_put),
		      .RDY_server_fence_i_response_get(near_mem$RDY_server_fence_i_response_get),
		      .RDY_server_fence_request_put(near_mem$RDY_server_fence_request_put),
		      .RDY_server_fence_response_get(near_mem$RDY_server_fence_response_get),
		      .RDY_sfence_vma(),
		      .near_mem_slave_awready(near_mem$near_mem_slave_awready),
		      .near_mem_slave_wready(near_mem$near_mem_slave_wready),
		      .near_mem_slave_bvalid(near_mem$near_mem_slave_bvalid),
		      .near_mem_slave_bresp(near_mem$near_mem_slave_bresp),
		      .near_mem_slave_arready(near_mem$near_mem_slave_arready),
		      .near_mem_slave_rvalid(near_mem$near_mem_slave_rvalid),
		      .near_mem_slave_rresp(near_mem$near_mem_slave_rresp),
		      .near_mem_slave_rdata(near_mem$near_mem_slave_rdata));

  // submodule stage1_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage1_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage1_f_reset_reqs$ENQ),
						.DEQ(stage1_f_reset_reqs$DEQ),
						.CLR(stage1_f_reset_reqs$CLR),
						.FULL_N(stage1_f_reset_reqs$FULL_N),
						.EMPTY_N(stage1_f_reset_reqs$EMPTY_N));

  // submodule stage1_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage1_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage1_f_reset_rsps$ENQ),
						.DEQ(stage1_f_reset_rsps$DEQ),
						.CLR(stage1_f_reset_rsps$CLR),
						.FULL_N(stage1_f_reset_rsps$FULL_N),
						.EMPTY_N(stage1_f_reset_rsps$EMPTY_N));

  // submodule stage2_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage2_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage2_f_reset_reqs$ENQ),
						.DEQ(stage2_f_reset_reqs$DEQ),
						.CLR(stage2_f_reset_reqs$CLR),
						.FULL_N(stage2_f_reset_reqs$FULL_N),
						.EMPTY_N(stage2_f_reset_reqs$EMPTY_N));

  // submodule stage2_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage2_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage2_f_reset_rsps$ENQ),
						.DEQ(stage2_f_reset_rsps$DEQ),
						.CLR(stage2_f_reset_rsps$CLR),
						.FULL_N(stage2_f_reset_rsps$FULL_N),
						.EMPTY_N(stage2_f_reset_rsps$EMPTY_N));

  // submodule stage3_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage3_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage3_f_reset_reqs$ENQ),
						.DEQ(stage3_f_reset_reqs$DEQ),
						.CLR(stage3_f_reset_reqs$CLR),
						.FULL_N(stage3_f_reset_reqs$FULL_N),
						.EMPTY_N(stage3_f_reset_reqs$EMPTY_N));

  // submodule stage3_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage3_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage3_f_reset_rsps$ENQ),
						.DEQ(stage3_f_reset_rsps$DEQ),
						.CLR(stage3_f_reset_rsps$CLR),
						.FULL_N(stage3_f_reset_rsps$FULL_N),
						.EMPTY_N(stage3_f_reset_rsps$EMPTY_N));

  // rule RL_rl_show_pipe
  assign CAN_FIRE_RL_rl_show_pipe =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     rg_state != 3'd0 &&
	     rg_state != 3'd1 &&
	     rg_state != 3'd7 ;
  assign WILL_FIRE_RL_rl_show_pipe = CAN_FIRE_RL_rl_show_pipe ;

  // rule RL_rl_reset_complete
  assign CAN_FIRE_RL_rl_reset_complete =
	     gpr_regfile_RDY_server_reset_response_get__561_ETC___d2573 &&
	     rg_state == 3'd1 ;
  assign WILL_FIRE_RL_rl_reset_complete = CAN_FIRE_RL_rl_reset_complete ;

  // rule RL_rl_pipe
  assign CAN_FIRE_RL_rl_pipe =
	     rg_state_7_EQ_2_578_AND_stage1_rg_full_16_OR_N_ETC___d2679 &&
	     !gpr_regfile$is_busy ;
  assign WILL_FIRE_RL_rl_pipe = CAN_FIRE_RL_rl_pipe ;

  // rule RL_rl_stage1_restart_after_csrrx
  assign CAN_FIRE_RL_rl_stage1_restart_after_csrrx = rg_state == 3'd3 ;
  assign WILL_FIRE_RL_rl_stage1_restart_after_csrrx =
	     CAN_FIRE_RL_rl_stage1_restart_after_csrrx ;

  // rule RL_rl_stage2_nonpipe
  assign CAN_FIRE_RL_rl_stage2_nonpipe =
	     rg_state == 3'd2 && !stage3_rg_full &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd3 ;
  assign WILL_FIRE_RL_rl_stage2_nonpipe = CAN_FIRE_RL_rl_stage2_nonpipe ;

  // rule RL_rl_stage1_xRET
  assign CAN_FIRE_RL_rl_stage1_xRET =
	     rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2823 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388 &&
	     (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	      4'd5 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	      4'd6 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	      4'd7) ;
  assign WILL_FIRE_RL_rl_stage1_xRET = CAN_FIRE_RL_rl_stage1_xRET ;

  // rule RL_rl_stage1_FENCE_I
  assign CAN_FIRE_RL_rl_stage1_FENCE_I =
	     near_mem$RDY_server_fence_i_request_put &&
	     rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2836 ;
  assign WILL_FIRE_RL_rl_stage1_FENCE_I = CAN_FIRE_RL_rl_stage1_FENCE_I ;

  // rule RL_rl_finish_FENCE_I
  assign CAN_FIRE_RL_rl_finish_FENCE_I =
	     near_mem$RDY_server_fence_i_response_get && rg_state == 3'd4 ;
  assign WILL_FIRE_RL_rl_finish_FENCE_I = CAN_FIRE_RL_rl_finish_FENCE_I ;

  // rule RL_rl_stage1_FENCE
  assign CAN_FIRE_RL_rl_stage1_FENCE =
	     near_mem$RDY_server_fence_request_put &&
	     rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2842 ;
  assign WILL_FIRE_RL_rl_stage1_FENCE = CAN_FIRE_RL_rl_stage1_FENCE ;

  // rule RL_rl_finish_FENCE
  assign CAN_FIRE_RL_rl_finish_FENCE =
	     near_mem$RDY_server_fence_response_get && rg_state == 3'd5 ;
  assign WILL_FIRE_RL_rl_finish_FENCE = CAN_FIRE_RL_rl_finish_FENCE ;

  // rule RL_rl_stage1_SFENCE_VMA
  assign CAN_FIRE_RL_rl_stage1_SFENCE_VMA =
	     rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2823 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd4 ;
  assign WILL_FIRE_RL_rl_stage1_SFENCE_VMA =
	     CAN_FIRE_RL_rl_stage1_SFENCE_VMA ;

  // rule RL_rl_finish_SFENCE_VMA
  assign CAN_FIRE_RL_rl_finish_SFENCE_VMA = rg_state == 3'd6 ;
  assign WILL_FIRE_RL_rl_finish_SFENCE_VMA =
	     CAN_FIRE_RL_rl_finish_SFENCE_VMA ;

  // rule RL_rl_stage1_WFI
  assign CAN_FIRE_RL_rl_stage1_WFI =
	     rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2823 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd8 ;
  assign WILL_FIRE_RL_rl_stage1_WFI = CAN_FIRE_RL_rl_stage1_WFI ;

  // rule RL_rl_WFI_resume
  assign CAN_FIRE_RL_rl_WFI_resume =
	     rg_state == 3'd7 && csr_regfile$wfi_resume ;
  assign WILL_FIRE_RL_rl_WFI_resume = CAN_FIRE_RL_rl_WFI_resume ;

  // rule RL_rl_reset_from_WFI
  assign CAN_FIRE_RL_rl_reset_from_WFI =
	     rg_state == 3'd7 && f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_from_WFI =
	     CAN_FIRE_RL_rl_reset_from_WFI && !WILL_FIRE_RL_rl_WFI_resume ;

  // rule RL_rl_stage1_trap
  assign CAN_FIRE_RL_rl_stage1_trap =
	     rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2823 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd9 ;
  assign WILL_FIRE_RL_rl_stage1_trap =
	     CAN_FIRE_RL_rl_stage1_trap && !WILL_FIRE_RL_rl_pipe ;

  // rule RL_rl_stage1_interrupt
  assign CAN_FIRE_RL_rl_stage1_interrupt =
	     csr_regfile$interrupt_pending[5] &&
	     rg_state_7_EQ_2_578_AND_stage1_rg_full_16_AND__ETC___d2873 ;
  assign WILL_FIRE_RL_rl_stage1_interrupt =
	     CAN_FIRE_RL_rl_stage1_interrupt && !WILL_FIRE_RL_rl_pipe ;

  // rule RL_rl_reset_start
  assign CAN_FIRE_RL_rl_reset_start =
	     gpr_regfile$RDY_server_reset_request_put &&
	     near_mem$RDY_server_reset_request_put &&
	     csr_regfile$RDY_server_reset_request_put &&
	     stage1_f_reset_reqs$FULL_N &&
	     stage2_f_reset_reqs$FULL_N &&
	     stage3_f_reset_reqs$FULL_N &&
	     rg_state == 3'd0 ;
  assign WILL_FIRE_RL_rl_reset_start = CAN_FIRE_RL_rl_reset_start ;

  // rule RL_stage3_rl_reset
  assign CAN_FIRE_RL_stage3_rl_reset =
	     stage3_f_reset_reqs$EMPTY_N && stage3_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage3_rl_reset = CAN_FIRE_RL_stage3_rl_reset ;

  // rule RL_stage2_rl_reset
  assign CAN_FIRE_RL_stage2_rl_reset =
	     stage2_f_reset_reqs$EMPTY_N && stage2_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage2_rl_reset = CAN_FIRE_RL_stage2_rl_reset ;

  // rule RL_stage1_rl_reset
  assign CAN_FIRE_RL_stage1_rl_reset =
	     stage1_f_reset_reqs$EMPTY_N && stage1_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage1_rl_reset = CAN_FIRE_RL_stage1_rl_reset ;

  // inputs to muxes for submodule ports
  assign MUX_near_mem$imem_req_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2789 ;
  assign MUX_near_mem$imem_req_1__SEL_3 =
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ;
  assign MUX_near_mem$imem_req_1__SEL_4 =
	     WILL_FIRE_RL_rl_stage1_trap || WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_cur_priv$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_inum$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ;
  assign MUX_rg_inum$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_stage1_trap || WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_state$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2780 ;
  assign MUX_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ;
  assign MUX_rg_inum$write_1__VAL_1 = rg_inum + 64'd1 ;
  assign MUX_stage1_rg_full$write_1__VAL_11 =
	     (!rg_halt && !csr_regfile$interrupt_pending[5] &&
	      (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2782 ||
	       !stage1_rg_full)) ?
	       NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d2805 :
	       rg_halt_665_OR_csr_regfile_interrupt_pending_r_ETC___d2811 &&
	       stage1_rg_full ;
  assign MUX_stage2_rg_full$write_1__VAL_3 =
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2794 ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd2 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ;

  // register cfg_logdelay
  assign cfg_logdelay$D_IN = 64'h0 ;
  assign cfg_logdelay$EN = 1'b0 ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN =
	     TASK_testplusargs___d2555 ?
	       4'd2 :
	       (TASK_testplusargs___d2556 ? 4'd1 : 4'd0) ;
  assign cfg_verbosity$EN = CAN_FIRE_RL_rl_reset_start ;

  // register rg_cur_priv
  always@(MUX_rg_cur_priv$write_1__SEL_1 or
	  csr_regfile$csr_trap_actions or
	  WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or WILL_FIRE_RL_rl_reset_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_cur_priv$write_1__SEL_1:
	  rg_cur_priv$D_IN = csr_regfile$csr_trap_actions[1:0];
      WILL_FIRE_RL_rl_stage1_xRET:
	  rg_cur_priv$D_IN = csr_regfile$csr_ret_actions[65:64];
      WILL_FIRE_RL_rl_reset_start: rg_cur_priv$D_IN = 2'b11;
      default: rg_cur_priv$D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign rg_cur_priv$EN =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_halt
  assign rg_halt$D_IN = 1'd0 ;
  assign rg_halt$EN = CAN_FIRE_RL_rl_reset_start ;

  // register rg_inum
  always@(MUX_rg_inum$write_1__SEL_1 or
	  MUX_rg_inum$write_1__VAL_1 or
	  MUX_rg_inum$write_1__SEL_2 or WILL_FIRE_RL_rl_reset_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_inum$write_1__SEL_1: rg_inum$D_IN = MUX_rg_inum$write_1__VAL_1;
      MUX_rg_inum$write_1__SEL_2: rg_inum$D_IN = MUX_rg_inum$write_1__VAL_1;
      WILL_FIRE_RL_rl_reset_start: rg_inum$D_IN = 64'd1;
      default: rg_inum$D_IN = 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rg_inum$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_start_CPI_cycles
  assign rg_start_CPI_cycles$D_IN = csr_regfile$read_csr_mcycle ;
  assign rg_start_CPI_cycles$EN = CAN_FIRE_RL_rl_reset_complete ;

  // register rg_start_CPI_instrs
  assign rg_start_CPI_instrs$D_IN = csr_regfile$read_csr_minstret ;
  assign rg_start_CPI_instrs$EN = CAN_FIRE_RL_rl_reset_complete ;

  // register rg_state
  always@(MUX_rg_state$write_1__SEL_1 or
	  WILL_FIRE_RL_rl_reset_from_WFI or
	  WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_state$write_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_FENCE_I or
	  WILL_FIRE_RL_rl_stage1_FENCE or
	  WILL_FIRE_RL_rl_stage1_SFENCE_VMA or WILL_FIRE_RL_rl_stage1_WFI)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_state$write_1__SEL_1: rg_state$D_IN = 3'd3;
      WILL_FIRE_RL_rl_reset_from_WFI: rg_state$D_IN = 3'd0;
      WILL_FIRE_RL_rl_reset_start: rg_state$D_IN = 3'd1;
      MUX_rg_state$write_1__SEL_4: rg_state$D_IN = 3'd2;
      WILL_FIRE_RL_rl_stage1_FENCE_I: rg_state$D_IN = 3'd4;
      WILL_FIRE_RL_rl_stage1_FENCE: rg_state$D_IN = 3'd5;
      WILL_FIRE_RL_rl_stage1_SFENCE_VMA: rg_state$D_IN = 3'd6;
      WILL_FIRE_RL_rl_stage1_WFI: rg_state$D_IN = 3'd7;
      default: rg_state$D_IN = 3'b010 /* unspecified value */ ;
    endcase
  end
  assign rg_state$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2780 ||
	     WILL_FIRE_RL_rl_reset_from_WFI ||
	     WILL_FIRE_RL_rl_reset_start ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ||
	     WILL_FIRE_RL_rl_stage1_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_FENCE ||
	     WILL_FIRE_RL_rl_stage1_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_stage1_WFI ;

  // register stage1_rg_ddc
  assign stage1_rg_ddc$D_IN =
	     { alu_outputs_val2_tag__h45380,
	       alu_outputs_val2_capability__h45381 } ;
  assign stage1_rg_ddc$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728 &&
	     near_mem$imem_instr[6:0] == 7'b1011011 &&
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2740 &&
	     alu_outputs_addr_capability__h38863[4:0] == 5'd1 ;

  // register stage1_rg_full
  always@(WILL_FIRE_RL_stage1_rl_reset or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  WILL_FIRE_RL_rl_stage1_trap or
	  WILL_FIRE_RL_rl_WFI_resume or
	  WILL_FIRE_RL_rl_finish_SFENCE_VMA or
	  WILL_FIRE_RL_rl_finish_FENCE or
	  WILL_FIRE_RL_rl_finish_FENCE_I or
	  WILL_FIRE_RL_rl_stage1_xRET or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  WILL_FIRE_RL_rl_stage1_restart_after_csrrx or
	  WILL_FIRE_RL_rl_pipe or
	  MUX_stage1_rg_full$write_1__VAL_11 or
	  WILL_FIRE_RL_rl_reset_complete)
  case (1'b1)
    WILL_FIRE_RL_stage1_rl_reset: stage1_rg_full$D_IN = 1'd0;
    WILL_FIRE_RL_rl_stage1_interrupt || WILL_FIRE_RL_rl_stage1_trap ||
    WILL_FIRE_RL_rl_WFI_resume ||
    WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
    WILL_FIRE_RL_rl_finish_FENCE ||
    WILL_FIRE_RL_rl_finish_FENCE_I ||
    WILL_FIRE_RL_rl_stage1_xRET ||
    WILL_FIRE_RL_rl_stage2_nonpipe ||
    WILL_FIRE_RL_rl_stage1_restart_after_csrrx:
	stage1_rg_full$D_IN = 1'd1;
    WILL_FIRE_RL_rl_pipe:
	stage1_rg_full$D_IN = MUX_stage1_rg_full$write_1__VAL_11;
    WILL_FIRE_RL_rl_reset_complete: stage1_rg_full$D_IN = 1'd1;
    default: stage1_rg_full$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign stage1_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_stage1_rl_reset ||
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ;

  // register stage1_rg_run_state
  assign stage1_rg_run_state$D_IN = 1'd1 ;
  assign stage1_rg_run_state$EN = CAN_FIRE_RL_stage1_rl_reset ;

  // register stage2_rg_f5
  assign stage2_rg_f5$D_IN = 5'h0 ;
  assign stage2_rg_f5$EN = 1'b0 ;

  // register stage2_rg_full
  assign stage2_rg_full$D_IN =
	     !WILL_FIRE_RL_stage2_rl_reset &&
	     !WILL_FIRE_RL_rl_stage2_nonpipe &&
	     MUX_stage2_rg_full$write_1__VAL_3 ;
  assign stage2_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_stage2_rl_reset ;

  // register stage2_rg_run_state
  assign stage2_rg_run_state$D_IN = 1'd1 ;
  assign stage2_rg_run_state$EN = CAN_FIRE_RL_stage2_rl_reset ;

  // register stage2_rg_stage2
  assign stage2_rg_stage2$D_IN =
	     { rg_cur_priv,
	       near_mem$imem_pc,
	       near_mem$imem_instr,
	       near_mem$imem_instr[6:0],
	       near_mem$imem_instr[11:7],
	       near_mem$imem_instr[19:15],
	       decoded_instr_rs2__h5316,
	       near_mem$imem_instr[31:27],
	       near_mem$imem_instr[31:20],
	       near_mem$imem_instr[14:12],
	       near_mem$imem_instr[31:27],
	       near_mem$imem_instr[31:25],
	       funct10__h6030,
	       near_mem$imem_instr[31:20],
	       near_mem$imem_instr[31:25],
	       near_mem$imem_instr[11:7],
	       near_mem$imem_instr[31],
	       near_mem$imem_instr[7],
	       near_mem$imem_instr[30:25],
	       near_mem$imem_instr[11:8],
	       1'b0,
	       near_mem$imem_instr[31:12],
	       near_mem$imem_instr[31],
	       near_mem$imem_instr[19:12],
	       near_mem$imem_instr[20],
	       near_mem$imem_instr[30:21],
	       1'b0,
	       near_mem$imem_instr[27:20],
	       near_mem$imem_instr[26:25],
	       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775,
	       fv_out_data_to_stage2_rd__h5766,
	       near_mem$imem_instr[6:0] == 7'b1110011 &&
	       near_mem$imem_instr[14:12] != 3'b0 &&
	       near_mem$imem_instr[14:12] != 3'b100 &&
	       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1833,
	       near_mem$imem_instr[6:0] == 7'b1011011 &&
	       near_mem$imem_instr[14:12] == 3'b0 &&
	       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2740,
	       alu_outputs_addr_tag__h38862,
	       alu_outputs_addr_capability__h38863,
	       near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2213,
	       alu_outputs_val2_tag__h45380,
	       alu_outputs_val2_capability__h45381 } ;
  assign stage2_rg_stage2$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728 ;

  // register stage3_rg_full
  assign stage3_rg_full$D_IN =
	     !WILL_FIRE_RL_stage3_rl_reset &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ;
  assign stage3_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_stage3_rl_reset ;

  // register stage3_rg_run_state
  assign stage3_rg_run_state$D_IN = 1'd1 ;
  assign stage3_rg_run_state$EN = CAN_FIRE_RL_stage3_rl_reset ;

  // register stage3_rg_stage3
  assign stage3_rg_stage3$D_IN =
	     { stage2_rg_stage2[644:549],
	       stage2_rg_stage2[646:645],
	       stage2_rg_stage2[396:394] != 3'd3 &&
	       (stage2_rg_stage2[396:394] == 3'd0 ||
		near_mem$dmem_valid && !near_mem$dmem_exc),
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2[388],
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186,
	       stage2_rg_stage2[128:0] } ;
  assign stage3_rg_stage3$EN = MUX_rg_inum$write_1__SEL_1 ;

  // submodule csr_regfile
  assign csr_regfile$csr_counter_read_fault_csr_addr =
	     near_mem$imem_instr[31:20] ;
  assign csr_regfile$csr_counter_read_fault_priv = rg_cur_priv ;
  always@(IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674)
  begin
    case (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674)
      4'd5: csr_regfile$csr_ret_actions_from_priv = 2'b11;
      4'd6: csr_regfile$csr_ret_actions_from_priv = 2'b01;
      default: csr_regfile$csr_ret_actions_from_priv = 2'b0;
    endcase
  end
  always@(WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$interrupt_pending or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  near_mem$dmem_exc_code or
	  WILL_FIRE_RL_rl_stage1_trap or fv_out_trap_info_exc_code__h38470)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_interrupt:
	  csr_regfile$csr_trap_actions_exc_code =
	      csr_regfile$interrupt_pending[4:0];
      WILL_FIRE_RL_rl_stage2_nonpipe:
	  csr_regfile$csr_trap_actions_exc_code = near_mem$dmem_exc_code;
      WILL_FIRE_RL_rl_stage1_trap:
	  csr_regfile$csr_trap_actions_exc_code =
	      fv_out_trap_info_exc_code__h38470;
      default: csr_regfile$csr_trap_actions_exc_code =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign csr_regfile$csr_trap_actions_from_priv = rg_cur_priv ;
  assign csr_regfile$csr_trap_actions_interrupt =
	     !WILL_FIRE_RL_rl_stage2_nonpipe && !WILL_FIRE_RL_rl_stage1_trap ;
  assign csr_regfile$csr_trap_actions_pc =
	     WILL_FIRE_RL_rl_stage2_nonpipe ?
	       stage2_rg_stage2[644:581] :
	       near_mem$imem_pc ;
  always@(WILL_FIRE_RL_rl_stage1_interrupt or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  stage2_rg_stage2 or WILL_FIRE_RL_rl_stage1_trap or value__h38714)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_interrupt:
	  csr_regfile$csr_trap_actions_xtval = 64'd0;
      WILL_FIRE_RL_rl_stage2_nonpipe:
	  csr_regfile$csr_trap_actions_xtval = stage2_rg_stage2[321:258];
      WILL_FIRE_RL_rl_stage1_trap:
	  csr_regfile$csr_trap_actions_xtval = value__h38714;
      default: csr_regfile$csr_trap_actions_xtval =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign csr_regfile$external_interrupt_req_set_not_clear =
	     external_interrupt_req_set_not_clear ;
  assign csr_regfile$interrupt_pending_cur_priv = rg_cur_priv ;
  assign csr_regfile$mav_read_csr_csr_addr = 12'h0 ;
  assign csr_regfile$read_csr_cap_csr_addr = decoded_instr_rs2__h5316 ;
  assign csr_regfile$read_csr_csr_addr = near_mem$imem_instr[31:20] ;
  assign csr_regfile$read_csr_port2_csr_addr = 12'h0 ;
  assign csr_regfile$software_interrupt_req_set_not_clear =
	     software_interrupt_req_set_not_clear ;
  assign csr_regfile$timer_interrupt_req_set_not_clear =
	     timer_interrupt_req_set_not_clear ;
  assign csr_regfile$write_csr_cap_cap_addr =
	     alu_outputs_addr_capability__h38863[4:0] ;
  assign csr_regfile$write_csr_cap_value =
	     { alu_outputs_val2_tag__h45380,
	       alu_outputs_val2_capability__h45381 } ;
  assign csr_regfile$write_csr_csr_addr =
	     alu_outputs_addr_capability__h38863[11:0] ;
  assign csr_regfile$write_csr_word =
	     alu_outputs_val2_capability__h45381[63:0] ;
  assign csr_regfile$EN_server_reset_request_put =
	     CAN_FIRE_RL_rl_reset_start ;
  assign csr_regfile$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign csr_regfile$EN_mav_read_csr = 1'b0 ;
  assign csr_regfile$EN_write_csr_cap =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728 &&
	     near_mem$imem_instr[6:0] == 7'b1011011 &&
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2740 &&
	     alu_outputs_addr_capability__h38863[4:0] != 5'd1 ;
  assign csr_regfile$EN_write_csr =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728 &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1833 ;
  assign csr_regfile$EN_csr_trap_actions =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_trap ;
  assign csr_regfile$EN_csr_ret_actions = CAN_FIRE_RL_rl_stage1_xRET ;
  assign csr_regfile$EN_csr_minstret_incr =
	     WILL_FIRE_RL_rl_pipe && stage3_rg_full &&
	     (!stage3_rg_stage3[270] ||
	      stage3_rg_stage3[269:258] != 12'hB02 &&
	      stage3_rg_stage3[269:258] != 12'hB82) ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign csr_regfile$EN_external_interrupt_req = EN_external_interrupt_req ;
  assign csr_regfile$EN_timer_interrupt_req = EN_timer_interrupt_req ;
  assign csr_regfile$EN_software_interrupt_req = EN_software_interrupt_req ;

  // submodule f_reset_reqs
  assign f_reset_reqs$ENQ = EN_hart0_server_reset_request_put ;
  assign f_reset_reqs$DEQ = 1'b0 ;
  assign f_reset_reqs$CLR = 1'b0 ;

  // submodule f_reset_rsps
  assign f_reset_rsps$ENQ = CAN_FIRE_RL_rl_reset_complete ;
  assign f_reset_rsps$DEQ = EN_hart0_server_reset_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule gpr_regfile
  assign gpr_regfile$clear_quarter_mask = 8'h0 ;
  assign gpr_regfile$clear_quarter_qid = 2'h0 ;
  assign gpr_regfile$read_rs1_port2_rs1 = 5'h0 ;
  assign gpr_regfile$read_rs1_rs1 = near_mem$imem_instr[19:15] ;
  assign gpr_regfile$read_rs2_rs2 = decoded_instr_rs2__h5316 ;
  assign gpr_regfile$write_rd_int_rd = 5'h0 ;
  assign gpr_regfile$write_rd_int_rd_val = 64'h0 ;
  assign gpr_regfile$write_rd_rd = stage3_rg_stage3[275:271] ;
  assign gpr_regfile$write_rd_rd_val = stage3_rg_stage3[257:129] ;
  assign gpr_regfile$EN_server_reset_request_put =
	     CAN_FIRE_RL_rl_reset_start ;
  assign gpr_regfile$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign gpr_regfile$EN_write_rd =
	     WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[276] ;
  assign gpr_regfile$EN_write_rd_int = 1'b0 ;
  assign gpr_regfile$EN_clear_quarter = 1'b0 ;

  // submodule near_mem
  assign near_mem$dmem_master_arready = dmem_master_arready ;
  assign near_mem$dmem_master_awready = dmem_master_awready ;
  assign near_mem$dmem_master_bresp = dmem_master_bresp ;
  assign near_mem$dmem_master_bvalid = dmem_master_bvalid ;
  assign near_mem$dmem_master_rdata = dmem_master_rdata ;
  assign near_mem$dmem_master_rresp = dmem_master_rresp ;
  assign near_mem$dmem_master_rvalid = dmem_master_rvalid ;
  assign near_mem$dmem_master_wready = dmem_master_wready ;
  assign near_mem$dmem_req_addr = alu_outputs_addr_capability__h38863[63:0] ;
  assign near_mem$dmem_req_f3 = near_mem$imem_instr[14:12] ;
  assign near_mem$dmem_req_mstatus_MXR = csr_regfile$read_mstatus[19] ;
  assign near_mem$dmem_req_op =
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 !=
	     3'd1 ;
  assign near_mem$dmem_req_priv =
	     csr_regfile$read_mstatus[17] ?
	       csr_regfile$read_mstatus[12:11] :
	       rg_cur_priv ;
  assign near_mem$dmem_req_satp = csr_regfile$read_satp ;
  assign near_mem$dmem_req_sstatus_SUM = csr_regfile$read_sstatus[18] ;
  assign near_mem$dmem_req_store_value =
	     alu_outputs_val2_capability__h45381[63:0] ;
  assign near_mem$imem_master_arready = imem_master_arready ;
  assign near_mem$imem_master_awready = imem_master_awready ;
  assign near_mem$imem_master_bresp = imem_master_bresp ;
  assign near_mem$imem_master_bvalid = imem_master_bvalid ;
  assign near_mem$imem_master_rdata = imem_master_rdata ;
  assign near_mem$imem_master_rresp = imem_master_rresp ;
  assign near_mem$imem_master_rvalid = imem_master_rvalid ;
  assign near_mem$imem_master_wready = imem_master_wready ;
  always@(WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or
	  MUX_near_mem$imem_req_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$csr_trap_actions or
	  WILL_FIRE_RL_rl_reset_complete or
	  pc_reset_value or
	  MUX_near_mem$imem_req_1__SEL_1 or
	  fv_out_next_pc__h5702 or MUX_near_mem$imem_req_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_xRET:
	  near_mem$imem_req_addr = csr_regfile$csr_ret_actions[129:66];
      MUX_near_mem$imem_req_1__SEL_4 || WILL_FIRE_RL_rl_stage1_interrupt:
	  near_mem$imem_req_addr = csr_regfile$csr_trap_actions[193:130];
      WILL_FIRE_RL_rl_reset_complete: near_mem$imem_req_addr = pc_reset_value;
      MUX_near_mem$imem_req_1__SEL_1:
	  near_mem$imem_req_addr = fv_out_next_pc__h5702;
      MUX_near_mem$imem_req_1__SEL_3:
	  near_mem$imem_req_addr = fv_out_next_pc__h5702;
      default: near_mem$imem_req_addr =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign near_mem$imem_req_f3 = 3'b010 ;
  assign near_mem$imem_req_mstatus_MXR =
	     (MUX_near_mem$imem_req_1__SEL_1 ||
	      WILL_FIRE_RL_rl_reset_complete ||
	      MUX_near_mem$imem_req_1__SEL_3 ||
	      MUX_near_mem$imem_req_1__SEL_4 ||
	      WILL_FIRE_RL_rl_stage1_xRET) ?
	       csr_regfile$read_mstatus[19] :
	       csr_regfile$csr_trap_actions[85] ;
  always@(WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or
	  MUX_near_mem$imem_req_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$csr_trap_actions or
	  MUX_near_mem$imem_req_1__SEL_1 or
	  WILL_FIRE_RL_rl_reset_complete or
	  MUX_near_mem$imem_req_1__SEL_3 or rg_cur_priv)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_xRET:
	  near_mem$imem_req_priv = csr_regfile$csr_ret_actions[65:64];
      MUX_near_mem$imem_req_1__SEL_4 || WILL_FIRE_RL_rl_stage1_interrupt:
	  near_mem$imem_req_priv = csr_regfile$csr_trap_actions[1:0];
      MUX_near_mem$imem_req_1__SEL_1 || WILL_FIRE_RL_rl_reset_complete ||
      MUX_near_mem$imem_req_1__SEL_3:
	  near_mem$imem_req_priv = rg_cur_priv;
      default: near_mem$imem_req_priv = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign near_mem$imem_req_satp = csr_regfile$read_satp ;
  assign near_mem$imem_req_sstatus_SUM =
	     (MUX_near_mem$imem_req_1__SEL_1 ||
	      WILL_FIRE_RL_rl_reset_complete ||
	      MUX_near_mem$imem_req_1__SEL_3 ||
	      MUX_near_mem$imem_req_1__SEL_4 ||
	      WILL_FIRE_RL_rl_stage1_xRET) ?
	       csr_regfile$read_sstatus[18] :
	       csr_regfile$csr_trap_actions[84] ;
  assign near_mem$imem_req_trap = !MUX_near_mem$imem_req_1__SEL_1 ;
  assign near_mem$near_mem_slave_araddr = near_mem_slave_araddr ;
  assign near_mem$near_mem_slave_arprot = near_mem_slave_arprot ;
  assign near_mem$near_mem_slave_arvalid = near_mem_slave_arvalid ;
  assign near_mem$near_mem_slave_awaddr = near_mem_slave_awaddr ;
  assign near_mem$near_mem_slave_awprot = near_mem_slave_awprot ;
  assign near_mem$near_mem_slave_awvalid = near_mem_slave_awvalid ;
  assign near_mem$near_mem_slave_bready = near_mem_slave_bready ;
  assign near_mem$near_mem_slave_rready = near_mem_slave_rready ;
  assign near_mem$near_mem_slave_wdata = near_mem_slave_wdata ;
  assign near_mem$near_mem_slave_wstrb = near_mem_slave_wstrb ;
  assign near_mem$near_mem_slave_wvalid = near_mem_slave_wvalid ;
  assign near_mem$server_fence_request_put =
	     8'b10101010 /* unspecified value */  ;
  assign near_mem$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_start ;
  assign near_mem$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign near_mem$EN_imem_req =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2789 ||
	     WILL_FIRE_RL_rl_reset_complete ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_xRET ;
  assign near_mem$EN_dmem_req =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728 &&
	     (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 ==
	      3'd1 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 ==
	      3'd2) ;
  assign near_mem$EN_server_fence_i_request_put =
	     CAN_FIRE_RL_rl_stage1_FENCE_I ;
  assign near_mem$EN_server_fence_i_response_get =
	     CAN_FIRE_RL_rl_finish_FENCE_I ;
  assign near_mem$EN_server_fence_request_put = CAN_FIRE_RL_rl_stage1_FENCE ;
  assign near_mem$EN_server_fence_response_get = CAN_FIRE_RL_rl_finish_FENCE ;
  assign near_mem$EN_sfence_vma = CAN_FIRE_RL_rl_stage1_SFENCE_VMA ;

  // submodule stage1_f_reset_reqs
  assign stage1_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage1_f_reset_reqs$DEQ = CAN_FIRE_RL_stage1_rl_reset ;
  assign stage1_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage1_f_reset_rsps
  assign stage1_f_reset_rsps$ENQ = CAN_FIRE_RL_stage1_rl_reset ;
  assign stage1_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage1_f_reset_rsps$CLR = 1'b0 ;

  // submodule stage2_f_reset_reqs
  assign stage2_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage2_f_reset_reqs$DEQ = CAN_FIRE_RL_stage2_rl_reset ;
  assign stage2_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage2_f_reset_rsps
  assign stage2_f_reset_rsps$ENQ = CAN_FIRE_RL_stage2_rl_reset ;
  assign stage2_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage2_f_reset_rsps$CLR = 1'b0 ;

  // submodule stage3_f_reset_reqs
  assign stage3_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage3_f_reset_reqs$DEQ = CAN_FIRE_RL_stage3_rl_reset ;
  assign stage3_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage3_f_reset_rsps
  assign stage3_f_reset_rsps$ENQ = CAN_FIRE_RL_stage3_rl_reset ;
  assign stage3_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage3_f_reset_rsps$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1002 =
	     rs2_val_bypassed_capability__h7274[62] ?
	       7'd1 :
	       (rs2_val_bypassed_capability__h7274[61] ?
		  7'd2 :
		  (rs2_val_bypassed_capability__h7274[60] ?
		     7'd3 :
		     (rs2_val_bypassed_capability__h7274[59] ?
			7'd4 :
			(rs2_val_bypassed_capability__h7274[58] ?
			   7'd5 :
			   (rs2_val_bypassed_capability__h7274[57] ?
			      7'd6 :
			      (rs2_val_bypassed_capability__h7274[56] ?
				 7'd7 :
				 (rs2_val_bypassed_capability__h7274[55] ?
				    7'd8 :
				    (rs2_val_bypassed_capability__h7274[54] ?
				       7'd9 :
				       (rs2_val_bypassed_capability__h7274[53] ?
					  7'd10 :
					  (rs2_val_bypassed_capability__h7274[52] ?
					     7'd11 :
					     (rs2_val_bypassed_capability__h7274[51] ?
						7'd12 :
						(rs2_val_bypassed_capability__h7274[50] ?
						   7'd13 :
						   (rs2_val_bypassed_capability__h7274[49] ?
						      7'd14 :
						      (rs2_val_bypassed_capability__h7274[48] ?
							 7'd15 :
							 (rs2_val_bypassed_capability__h7274[47] ?
							    7'd16 :
							    (rs2_val_bypassed_capability__h7274[46] ?
							       7'd17 :
							       (rs2_val_bypassed_capability__h7274[45] ?
								  7'd18 :
								  (rs2_val_bypassed_capability__h7274[44] ?
								     7'd19 :
								     (rs2_val_bypassed_capability__h7274[43] ?
									7'd20 :
									(rs2_val_bypassed_capability__h7274[42] ?
									   7'd21 :
									   (rs2_val_bypassed_capability__h7274[41] ?
									      7'd22 :
									      (rs2_val_bypassed_capability__h7274[40] ?
										 7'd23 :
										 (rs2_val_bypassed_capability__h7274[39] ?
										    7'd24 :
										    (rs2_val_bypassed_capability__h7274[38] ?
										       7'd25 :
										       (rs2_val_bypassed_capability__h7274[37] ?
											  7'd26 :
											  (rs2_val_bypassed_capability__h7274[36] ?
											     7'd27 :
											     (rs2_val_bypassed_capability__h7274[35] ?
												7'd28 :
												(rs2_val_bypassed_capability__h7274[34] ?
												   7'd29 :
												   (rs2_val_bypassed_capability__h7274[33] ?
												      7'd30 :
												      (rs2_val_bypassed_capability__h7274[32] ?
													 7'd31 :
													 (rs2_val_bypassed_capability__h7274[31] ?
													    7'd32 :
													    (rs2_val_bypassed_capability__h7274[30] ?
													       7'd33 :
													       (rs2_val_bypassed_capability__h7274[29] ?
														  7'd34 :
														  (rs2_val_bypassed_capability__h7274[28] ?
														     7'd35 :
														     (rs2_val_bypassed_capability__h7274[27] ?
															7'd36 :
															(rs2_val_bypassed_capability__h7274[26] ?
															   7'd37 :
															   (rs2_val_bypassed_capability__h7274[25] ?
															      7'd38 :
															      (rs2_val_bypassed_capability__h7274[24] ?
																 7'd39 :
																 (rs2_val_bypassed_capability__h7274[23] ?
																    7'd40 :
																    (rs2_val_bypassed_capability__h7274[22] ?
																       7'd41 :
																       (rs2_val_bypassed_capability__h7274[21] ?
																	  7'd42 :
																	  (rs2_val_bypassed_capability__h7274[20] ?
																	     7'd43 :
																	     (rs2_val_bypassed_capability__h7274[19] ?
																		7'd44 :
																		(rs2_val_bypassed_capability__h7274[18] ?
																		   7'd45 :
																		   (rs2_val_bypassed_capability__h7274[17] ?
																		      7'd46 :
																		      (rs2_val_bypassed_capability__h7274[16] ?
																			 7'd47 :
																			 (rs2_val_bypassed_capability__h7274[15] ?
																			    7'd48 :
																			    (rs2_val_bypassed_capability__h7274[14] ?
																			       7'd49 :
																			       (rs2_val_bypassed_capability__h7274[13] ?
																				  7'd50 :
																				  (rs2_val_bypassed_capability__h7274[12] ?
																				     7'd51 :
																				     (rs2_val_bypassed_capability__h7274[11] ?
																					7'd52 :
																					(rs2_val_bypassed_capability__h7274[10] ?
																					   7'd53 :
																					   (rs2_val_bypassed_capability__h7274[9] ?
																					      7'd54 :
																					      (rs2_val_bypassed_capability__h7274[8] ?
																						 7'd55 :
																						 (rs2_val_bypassed_capability__h7274[7] ?
																						    7'd56 :
																						    (rs2_val_bypassed_capability__h7274[6] ?
																						       7'd57 :
																						       (rs2_val_bypassed_capability__h7274[5] ?
																							  7'd58 :
																							  (rs2_val_bypassed_capability__h7274[4] ?
																							     7'd59 :
																							     (rs2_val_bypassed_capability__h7274[3] ?
																								7'd60 :
																								(rs2_val_bypassed_capability__h7274[2] ?
																								   7'd61 :
																								   (rs2_val_bypassed_capability__h7274[1] ?
																								      7'd62 :
																								      (rs2_val_bypassed_capability__h7274[0] ?
																									 7'd63 :
																									 7'd64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1635 =
	     rs2_val_bypassed_capability__h7274[104] ?
	       ((!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1174 ||
		 !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1179) ?
		  4'd9 :
		  4'd0) :
	       4'd0 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1948 =
	     x__h7472 < r__h40238 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2380 =
	     rs2_val_bypassed_capability__h7274[104] ?
	       5'd21 :
	       (IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d539 ?
		  (b_capability__h7272[122] ? 5'd16 : 5'd20) :
		  5'd24) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2397 =
	     rs2_val_bypassed_capability__h7274[104] ?
	       ((!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1174 ||
		 !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1179) ?
		  5'd19 :
		  5'd2) :
	       5'd2 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2421 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2409 ?
	       ((rs1_cap__h6403[114] ||
		 !rs2_val_bypassed_capability__h7274[114]) ?
		  5'd20 :
		  IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2419) :
	       5'd24 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2435 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2409 ?
	       ((rs1_cap__h6403[114] ||
		 !rs2_val_bypassed_capability__h7274[114]) ?
		  5'd20 :
		  IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2433) :
	       5'd24 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2446 =
	     controller_capability__h35449[104] ?
	       5'd21 :
	       ((decoded_instr_rs2__h5316[3:2] == 2'b11) ?
		  5'd2 :
		  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2444) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1968 =
	     x__h33301 < r__h40514 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2367 =
	     rs1_cap__h6403[104] ?
	       5'd21 :
	       ((near_mem$imem_instr[19:15] == 5'd0 ||
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
		  5'd18 :
		  5'd16) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2375 =
	     (rs1_cap__h6403[104] ||
	      rs2_val_bypassed_capability__h7274[104]) ?
	       5'd21 :
	       (b_capability__h7272[120] ?
		  ((!IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d519 ||
		    !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d524 ||
		    !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d527) ?
		     5'd19 :
		     5'd16) :
		  5'd20) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2394 =
	     rs1_cap__h6403[104] ?
	       5'd21 :
	       ((rs1_cap__h6403[104] ||
		 IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2388) ?
		  trap__h7991 :
		  5'd2) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2430 =
	     rs1_cap__h6403[104] ?
	       5'd21 :
	       ((x__h33213 == b_capability__h6722[23:0]) ?
		  (b_capability__h6722[122] ? 5'd16 : 5'd20) :
		  5'd24) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d567 =
	     x__h33301 + 20'd1 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1236 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 :
	       !stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 =
	     x__h35692 == b__h35689 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265 =
	     x__h35839 == b__h35689 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1271 =
	     x__h36055 == b__h35689 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1279 =
	     x__h36271 == b__h35689 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1287 =
	     x__h36487 == b__h35689 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1236 ||
	     controller_capability__h35449[104] ||
	     decoded_instr_rs2__h5316[3:2] == 2'b11 ||
	     (!decoded_instr_rs2__h5316[3] ||
	      decoded_instr_rs2__h5316[2:0] == 3'b101) &&
	     (!controller_capability__h35449[117] ||
	      !controller_capability__h35449[116]) ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1290 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1499 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
	       stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1525 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1499 &&
	     !controller_capability__h35449[104] &&
	     decoded_instr_rs2__h5316[3:2] != 2'b11 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1522 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1947 =
	     aMid__h40237 < r__h40238 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1955 =
	     b__h40172 +
	     ((IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1947 &&
	       !IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1948) ?
		2'd3 :
		((IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1948 &&
		  !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1947) ?
		   2'd1 :
		   2'd0)) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2173 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	      rs2_val_bypassed_capability__h7274[63:0] ==
	      64'hFFFFFFFFFFFFFFFF) ?
	       rs1_cap__h6403 :
	       { b_capability__h6722[127:105],
		 1'b1,
		 rs1_cap__h6403[103:84],
		 b_capability__h7272[19:0],
		 rs1_cap__h6403[63:0] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2409 =
	     x__h33213 == { rs1_cap__h6403[95:84], rs1_cap__h6403[75:64] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2617 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 :
	       stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d519 =
	     x__h7397 == b__h7394 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d524 =
	     x__h7544 == b__h7394 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d527 =
	     rs2_val_bypassed_capability__h7274[63:0] <=
	     64'h00000000000FFFFF ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1195 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d1193 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d1193 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1195 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1460 =
	     b_capability__h7272[120] &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d519 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d524 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d527 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1638 =
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7274[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1460 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2586 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2584 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2587 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2584 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2586 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2592 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2590 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2590 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2592 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2597 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2595 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2598 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2595 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2597 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2610 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2608 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2611 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2608 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2610 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_capability__h4621 :
	       b_capability__h6710 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_capability__h4621 :
	       b_capability__h7260 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d495 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d487 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d487 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d495 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d504 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d502 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d502 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d504 ;
  assign IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2419 =
	     (!IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d519 ||
	      x__h34706 != b__h7394) ?
	       5'd19 :
	       5'd26 ;
  assign IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2433 =
	     (!IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d519 ||
	      x__h34706 != b__h7394) ?
	       5'd19 :
	       out__h35195 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1642 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1227 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       4'd9 :
	       4'd0 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2186 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1227 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       { 125'd0, x__h45254 } :
	       ccsr_val_capability__h39994 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2403 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1227 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       alu_outputs___1_exc_code__h38213 :
	       5'd2 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2444 =
	     ((!decoded_instr_rs2__h5316[3] ||
	       decoded_instr_rs2__h5316[2:0] == 3'b101) &&
	      (!controller_capability__h35449[117] ||
	       !controller_capability__h35449[116])) ?
	       5'd20 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1290 ?
		  5'd19 :
		  5'd16) ;
  assign IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1583 =
	     NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 ?
	       4'd9 :
	       4'd0 ;
  assign IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 =
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ?
	       4'd9 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1672 ;
  assign IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2855 =
	     near_mem$imem_pc == csr_regfile$csr_trap_actions[193:130] ;
  assign IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280 =
	     csr_regfile$read_misa[20] ?
	       (csr_regfile$read_misa[13] ?
		  _theResult_____4__h45524 :
		  csr_val___2__h45608) :
	       csr_val___2__h45608 ;
  assign IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2297 =
	     { IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[31:13],
	       spliced_bits__h45579,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[10:9],
	       IF_csr_regfileread_misa_BIT_18_THEN_spp5528_E_ETC__q33[0],
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[7:0] } ;
  assign IF_csr_regfileread_misa_BIT_18_THEN_spp5528_E_ETC__q33 =
	     csr_regfile$read_misa[18] ? spp__h45528 : 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1619 =
	     near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_5_ETC___d1594 ?
	       4'd4 :
	       ((near_mem$imem_instr[11:7] == 5'd0 &&
		 near_mem$imem_instr[19:15] == 5'd0) ?
		  IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1617 :
		  4'd9) ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1317 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	       rs1_cap__h6403[104] :
	       near_mem$imem_instr[14:12] != 3'b010 &&
	       (near_mem$imem_instr[14:12] != 3'b0 ||
		IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314) ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1545 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	       !rs1_cap__h6403[104] :
	       near_mem$imem_instr[14:12] == 3'b010 ||
	       near_mem$imem_instr[14:12] == 3'b0 &&
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1621 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1619 :
	       ((near_mem$imem_instr[14:12] == 3'b100 ||
		 near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426) ?
		  4'd9 :
		  4'd0) ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2518 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	       !rs1_cap__h6403[104] :
	       near_mem$imem_instr[14:12] != 3'b0 ||
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2635 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2587 ||
	       !rs1_cap__h6403[104] :
	       near_mem$imem_instr[14:12] == 3'b010 ||
	       near_mem$imem_instr[14:12] == 3'b0 &&
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1362 =
	     x__h6450 == b__h33128 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367 =
	     x__h6849 == b__h33128 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1465 =
	     rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7274[104] &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d539 &&
	     b_capability__h7272[122] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1475 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d570 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d572 &&
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1154 &&
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1158 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1362 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367 &&
	     rs1_cap__h6403[114] &&
	     !rs1_cap__h6403[104] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1633 =
	     near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1164 ?
	       4'd9 :
	       4'd0 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1636 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      rs1_cap__h6403[104]) ?
	       4'd9 :
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1635 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1641 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       4'd9 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1639 ?
		  4'd0 :
		  4'd9) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1967 =
	     aMid__h40513 < r__h40514 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1975 =
	     b__h40448 +
	     ((IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1967 &&
	       !IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1968) ?
		2'd3 :
		((IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1968 &&
		  !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1967) ?
		   2'd1 :
		   2'd0)) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2385 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (rs1_cap__h6403[104] ? 5'd21 : 5'd2) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2388 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d565 ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d570 ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d572 ||
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1154 ||
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1158 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2395 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2394 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2399 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (rs1_cap__h6403[104] ?
		  5'd21 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2397) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2401 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1639 ?
		  5'd2 :
		  check__h6993) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2423 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505) ?
	       5'd18 :
	       ((!rs1_cap__h6403[104] ||
		 !rs2_val_bypassed_capability__h7274[104]) ?
		  5'd22 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2421) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2437 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505) ?
	       5'd18 :
	       ((!rs1_cap__h6403[104] ||
		 !rs2_val_bypassed_capability__h7274[104]) ?
		  5'd22 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2435) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2649 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1362 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367 &&
	     rs1_cap__h6403[114] &&
	     !rs1_cap__h6403[104] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 =
	     rs1_cap__h6403[63:0] ==
	     rs2_val_bypassed_capability__h7274[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350 =
	     (rs1_cap__h6403[63:0] ^ 64'h8000000000000000) <
	     (rs2_val_bypassed_capability__h7274[63:0] ^
	      64'h8000000000000000) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 =
	     rs1_cap__h6403[63:0] < rs2_val_bypassed_capability__h7274[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d539 =
	     { rs1_cap__h6403[95:84], rs1_cap__h6403[75:64] } ==
	     b_capability__h7272[23:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d554 =
	     rs1_cap__h6403[104] && near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     rs2_val_bypassed_capability__h7274[63:0] != 64'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d565 =
	     rs1_cap__h6403[63:0] < old_lower__h8036 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d570 =
	     requested_top__h8035 <= old_top__h8037 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d572 =
	     requested_top__h8035 <= rs1_cap__h6403[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1303 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1227 ||
	       decoded_instr_rs2__h5316 == 5'b0 &&
	       near_mem$imem_instr[19:15] != 5'd0 :
	       near_mem$imem_instr[31:25] != 7'b0 ||
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294 ||
	       decoded_instr_rs2__h5316[3] &&
	       decoded_instr_rs2__h5316[2:0] != 3'b101 &&
	       decoded_instr_rs2__h5316[2] &&
	       decoded_instr_rs2__h5316[1:0] != 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1531 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1496 &&
	       (decoded_instr_rs2__h5316 != 5'b0 ||
		near_mem$imem_instr[19:15] == 5'd0) :
	       near_mem$imem_instr[31:25] == 7'b0 &&
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1525 &&
	       (!decoded_instr_rs2__h5316[3] ||
		decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		!decoded_instr_rs2__h5316[2] ||
		decoded_instr_rs2__h5316[1:0] == 2'b0) ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1855 =
	     (near_mem$imem_instr[31:25] == 7'b1111110) ?
	       decoded_instr_rs2__h5316 != 5'b0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196 :
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1499 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2006 =
	     (near_mem$imem_instr[31:25] == 7'b0010011) ?
	       rs2_val_bypassed_capability__h7274[63:0] != 64'b0 &&
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2004 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2530 =
	     (near_mem$imem_instr[31:25] == 7'b1111111) ?
	       decoded_instr_rs2__h5316 == 5'b01100 &&
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566 :
	       near_mem$imem_instr[31:25] == 7'b1111110 &&
	       near_mem$imem_instr[24:20] == 5'h01 &&
	       rs2_val_bypassed_capability__h7274[1:0] != 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2621 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1496 &&
	       (decoded_instr_rs2__h5316 != 5'b0 ||
		near_mem$imem_instr[19:15] == 5'd0) :
	       near_mem$imem_instr[31:25] == 7'b0 &&
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2617 &&
	       !controller_capability__h35449[104] &&
	       decoded_instr_rs2__h5316[3:2] != 2'b11 &&
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1522 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1282 =
	     decoded_instr_rs2__h5316[1:0] == 2'b0 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b01 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1271 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b10 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1279 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1290 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1282 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b11 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1287 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       near_mem$imem_instr[14:12] != 3'b0 &&
	       near_mem$imem_instr[14:12] != 3'b001 &&
	       near_mem$imem_instr[14:12] != 3'b100 &&
	       near_mem$imem_instr[14:12] != 3'b101 &&
	       near_mem$imem_instr[14:12] != 3'b110 &&
	       near_mem$imem_instr[14:12] != 3'b111 ||
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 :
	       near_mem$imem_instr[6:0] == 7'b1101111 ||
	       near_mem$imem_instr[6:0] == 7'b1100111 ||
	       (near_mem$imem_instr[6:0] != 7'b0010011 &&
		near_mem$imem_instr[6:0] != 7'b0110011 ||
		near_mem$imem_instr[14:12] != 3'b001 &&
		near_mem$imem_instr[14:12] != 3'b101) &&
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1324 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1484 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     rs2_val_bypassed_capability__h7274[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7274[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1460 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1496 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      (decoded_instr_rs2__h5316[4:2] == 3'b001 ||
	       decoded_instr_rs2__h5316[4:2] == 3'b011 ||
	       decoded_instr_rs2__h5316[4:2] == 3'b111) &&
	      decoded_instr_rs2__h5316[1:0] != 2'b01) &&
	     !rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1226 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1522 =
	     (decoded_instr_rs2__h5316[3] &&
	      decoded_instr_rs2__h5316[2:0] != 3'b101 ||
	      controller_capability__h35449[117] &&
	      controller_capability__h35449[116]) &&
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1516 &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b11 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1287) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       (near_mem$imem_instr[14:12] == 3'b0 ||
		near_mem$imem_instr[14:12] == 3'b001 ||
		near_mem$imem_instr[14:12] == 3'b100 ||
		near_mem$imem_instr[14:12] == 3'b101 ||
		near_mem$imem_instr[14:12] == 3'b110 ||
		near_mem$imem_instr[14:12] == 3'b111) &&
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 :
	       near_mem$imem_instr[6:0] != 7'b1101111 &&
	       near_mem$imem_instr[6:0] != 7'b1100111 &&
	       ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		 near_mem$imem_instr[6:0] == 7'b0110011) &&
		(near_mem$imem_instr[14:12] == 3'b001 ||
		 near_mem$imem_instr[14:12] == 3'b101) ||
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1552) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1639 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     rs2_val_bypassed_capability__h7274[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1638 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2004 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1496 &&
	     (decoded_instr_rs2__h5316 != 5'b0 ||
	      near_mem$imem_instr[19:15] == 5'd0) &&
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      ((decoded_instr_rs2__h5316 == 5'b00001) ?
		 stage1_rg_ddc[128] :
		 csr_regfile$read_csr_cap[128])) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2211 =
	     ((near_mem$imem_instr[6:0] == 7'b0010011 ||
	       near_mem$imem_instr[6:0] == 7'b0110011) &&
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101)) ?
	       alu_outputs___1_val1_capability__h39846 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2226 =
	     (near_mem$imem_instr[6:0] == 7'b0100011) ?
	       decoded_instr_rs2__h5316 != 5'b0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196 :
	       near_mem$imem_instr[6:0] != 7'b1110011 &&
	       alu_outputs___1_val2_tag__h45365 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2537 =
	     (near_mem$imem_instr[6:0] == 7'b1110011 &&
	      near_mem$imem_instr[13:12] != 2'b0 &&
	      NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 ||
	      ((near_mem$imem_instr[6:0] == 7'b1100011) ?
		 near_mem$imem_instr[14:12] != 3'b0 &&
		 near_mem$imem_instr[14:12] != 3'b001 &&
		 near_mem$imem_instr[14:12] != 3'b100 &&
		 near_mem$imem_instr[14:12] != 3'b101 &&
		 near_mem$imem_instr[14:12] != 3'b110 &&
		 near_mem$imem_instr[14:12] != 3'b111 :
		 near_mem$imem_instr[6:0] != 7'b1101111 &&
		 near_mem$imem_instr[6:0] != 7'b1100111 &&
		 ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		    near_mem$imem_instr[14:12] != 3'b0 ||
		    near_mem$imem_instr[11:7] != 5'd0 ||
		    near_mem$imem_instr[19:15] != 5'd0 ||
		    near_mem$imem_instr[31:20] != 12'b0 &&
		    near_mem$imem_instr[31:20] != 12'b000000000001 :
		    near_mem$imem_instr[6:0] != 7'b1011011 ||
		    IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2518))) ?
	       { 32'd0, near_mem$imem_instr } :
	       (((near_mem$imem_instr[6:0] == 7'b1100011) ?
		   near_mem$imem_instr[14:12] == 3'b0 ||
		   near_mem$imem_instr[14:12] == 3'b001 ||
		   near_mem$imem_instr[14:12] == 3'b100 ||
		   near_mem$imem_instr[14:12] == 3'b101 ||
		   near_mem$imem_instr[14:12] == 3'b110 ||
		   near_mem$imem_instr[14:12] == 3'b111 :
		   near_mem$imem_instr[6:0] == 7'b1101111 ||
		   near_mem$imem_instr[6:0] == 7'b1100111 ||
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2530) ?
		  alu_outputs_addr_capability__h38863[63:0] :
		  64'b0) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2615 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2611 ||
	     rs2_val_bypassed_capability__h7274[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2598 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7274[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1460 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2646 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       (near_mem$imem_instr[14:12] == 3'b0 ||
		near_mem$imem_instr[14:12] == 3'b001 ||
		near_mem$imem_instr[14:12] == 3'b100 ||
		near_mem$imem_instr[14:12] == 3'b101 ||
		near_mem$imem_instr[14:12] == 3'b110 ||
		near_mem$imem_instr[14:12] == 3'b111) &&
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 :
	       near_mem$imem_instr[6:0] != 7'b1101111 &&
	       near_mem$imem_instr[6:0] != 7'b1100111 &&
	       ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		 near_mem$imem_instr[6:0] == 7'b0110011) &&
		(near_mem$imem_instr[14:12] == 3'b001 ||
		 near_mem$imem_instr[14:12] == 3'b101) ||
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2642) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2868 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385 ;
  assign IF_rg_cur_priv_9_EQ_0b11_589_OR_rg_cur_priv_9__ETC___d1615 =
	     ((rg_cur_priv == 2'b11 ||
	       rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[22]) &&
	      near_mem$imem_instr[31:20] == 12'b000100000010) ?
	       4'd6 :
	       (rg_cur_priv_9_EQ_0b11_589_OR_rg_cur_priv_9_EQ__ETC___d1613 ?
		  4'd8 :
		  4'd9) ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 =
	     stage2_rg_full ?
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 :
	       2'd0 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 =
	     stage2_rg_full ?
	       IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 :
	       2'd0 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 =
	     stage2_rg_stage2[393:389] == near_mem$imem_instr[19:15] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231 =
	     stage2_rg_stage2[393:389] == decoded_instr_rs2__h5316 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	     2'd1 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ||
	     gpr_regfile$is_busy ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2782 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd2 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0) &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2717 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 =
	     x_out_bypass_rd_val_capability__h4621[9:8] ==
	     near_mem$imem_instr[19:18] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 =
	     x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5[near_mem$imem_instr[17:15]] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 =
	     x_out_bypass_rd_val_capability__h4621[9:8] ==
	     decoded_instr_rs2__h5316[4:3] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 =
	     x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5[decoded_instr_rs2__h5316[2:0]] ;
  assign IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108 =
	     (stage2_rg_stage2[393:389] == 5'd0) ?
	       2'd0 :
	       ((near_mem$dmem_valid && !near_mem$dmem_exc) ? 2'd2 : 2'd1) ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1192 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       stage3_rg_stage3[257] :
	       gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       stage3_rg_stage3[256:129] :
	       gpr_regfile$read_rs1[127:0] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       stage3_rg_stage3[256:129] :
	       gpr_regfile$read_rs2[127:0] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       stage3_rg_stage3[257] :
	       gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d486 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       !stage3_rg_stage3[257] :
	       !gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d501 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       !stage3_rg_stage3[257] :
	       !gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d1193 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) &&
	       gpr_regfile$read_rs2[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1192 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2584 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 ||
	       !gpr_regfile$read_rs1[128] :
	       !gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2590 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) &&
	       gpr_regfile$read_rs1[128] :
	       gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2595 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) &&
	       gpr_regfile$read_rs2[128] :
	       gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2608 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 ||
	       !gpr_regfile$read_rs2[128] :
	       !gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) &&
	       gpr_regfile$read_rs1[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d487 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 ||
	       !gpr_regfile$read_rs1[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d486 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d502 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 ||
	       !gpr_regfile$read_rs2[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d501 ;
  assign INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014 =
	     x__h28678 >>
	     _63_MINUS_IF_rs2_val_bypassed_capability274_BIT_ETC__q17[5:0] ;
  assign NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1011 =
	     x__h17361 + y__h17362 > 7'd1 ||
	     (requested_top__h8035 & y__h19610) != 64'd0 ;
  assign NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1992 =
	     result0159_PLUS_b_val0160__q30[63:0] >=
	     result0435_PLUS_b_val0436__q29[63:0] &&
	     _0_CONCAT_x0717_SL_rs2_val_bypassed_capability2_ETC__q31[63:0] <=
	     _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_19_ETC__q32[63:0] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d530 =
	     !b_capability__h7272[120] ||
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d519 ||
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d524 ||
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d527 ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 =
	     cur_verbosity__h1374 > 4'd1 ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2703 =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     (stage2_rg_stage2[396:394] == 3'd3 ||
	      stage2_rg_stage2[396:394] != 3'd0 &&
	      (!near_mem$dmem_valid || near_mem$dmem_exc)) ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2705 =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     stage2_rg_stage2[396:394] != 3'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd0 ||
	      near_mem$dmem_valid && !near_mem$dmem_exc) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1374 =
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1362 ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367 ||
	     !rs1_cap__h6403[114] ||
	     rs1_cap__h6403[104] ||
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1469 =
	     !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     rs2_val_bypassed_capability__h7274[63:0] == 64'b0 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2487 =
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d565 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d570 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d572 &&
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1154 &&
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1158 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2490 =
	     !rs1_cap__h6403[104] &&
	     (!rs2_val_bypassed_capability__h7274[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1174 &&
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1179) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1202 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196 &&
	     rs2_val_bypassed_capability__h7274[63:0] !=
	     64'hFFFFFFFFFFFFFFFF &&
	     (IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	      rs1_cap__h6403[104] ||
	      rs2_val_bypassed_capability__h7274[104] ||
	      NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d530) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1227 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     decoded_instr_rs2__h5316 != 5'b00001 &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b001 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b011 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b111 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) ||
	     rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1226 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1516 =
	     (decoded_instr_rs2__h5316[1:0] != 2'b0 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265) &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b01 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1271) &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b10 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1261 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1279) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd3 ||
	      stage2_rg_stage2[396:394] != 3'd0 &&
	      (!near_mem$dmem_valid || near_mem$dmem_exc)) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd3 &&
	     stage2_rg_stage2[396:394] != 3'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd0 ||
	      near_mem$dmem_valid && !near_mem$dmem_exc) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 !=
	      2'd1 ||
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 &&
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) &&
	     !gpr_regfile$is_busy ;
  assign NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 =
	     !csr_regfile$read_csr[64] ||
	     rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 ||
	     csr_regfile$csr_counter_read_fault ||
	     (near_mem$imem_instr[13:12] == 2'b01 ||
	      near_mem$imem_instr[19:15] != 5'd0) &&
	     near_mem$imem_instr[31:30] == 2'b11 ;
  assign NOT_near_mem_imem_exc__38_390_AND_IF_near_mem__ETC___d1837 =
	     !near_mem$imem_exc &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1833 ;
  assign NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 =
	     !near_mem$imem_exc &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1401) ;
  assign NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1734 =
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd3 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd4 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd5 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd6 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd7 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd8 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd9 ;
  assign NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1799 =
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 !=
	     3'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 !=
	     3'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 !=
	     3'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 !=
	     3'd3 ;
  assign NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1825 =
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      near_mem$imem_instr[14:12] == 3'b100 ||
	      near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 ||
	      ((near_mem$imem_instr[13:12] == 2'd2) ?
		 near_mem$imem_instr[19:15] == 5'd0 :
		 near_mem$imem_instr[13:12] == 2'd3 &&
		 near_mem$imem_instr[19:15] == 5'd0)) ;
  assign NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1441 =
	     near_mem$imem_instr[13:12] != 2'b0 && csr_regfile$read_csr[64] &&
	     !rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 &&
	     !csr_regfile$csr_counter_read_fault &&
	     (near_mem$imem_instr[13:12] != 2'b01 &&
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      near_mem$imem_instr[31:30] != 2'b11) &&
	     (near_mem$imem_instr[31:20] != 12'h180 ||
	      !csr_regfile$read_mstatus[20]) ;
  assign NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1833 =
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1441 &&
	     ((near_mem$imem_instr[13:12] == 2'd2) ?
		near_mem$imem_instr[19:15] != 5'd0 :
		near_mem$imem_instr[13:12] != 2'd3 ||
		near_mem$imem_instr[19:15] != 5'd0) ;
  assign NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1339 =
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b001 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     near_mem$imem_instr[14:12] != 3'b101 &&
	     near_mem$imem_instr[14:12] != 3'b110 &&
	     near_mem$imem_instr[14:12] != 3'b111 ||
	     IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 &&
	     branch_target__h5843[1] ;
  assign NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 =
	     (near_mem$imem_instr[14:12] != 3'b0 ||
	      near_mem$imem_instr[6:0] == 7'b0110011 &&
	      near_mem$imem_instr[30]) &&
	     (near_mem$imem_instr[14:12] != 3'b0 ||
	      near_mem$imem_instr[6:0] != 7'b0110011 ||
	      !near_mem$imem_instr[30]) &&
	     near_mem$imem_instr[14:12] != 3'b010 &&
	     near_mem$imem_instr[14:12] != 3'b011 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     near_mem$imem_instr[14:12] != 3'b110 &&
	     near_mem$imem_instr[14:12] != 3'b111 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7274[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1460 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1196 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1465 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1478 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     !rs1_cap__h6403[104] &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d565 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1475 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1481 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     !rs1_cap__h6403[104] &&
	     (!rs2_val_bypassed_capability__h7274[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1174 &&
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1179) ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2601 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2598 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7274[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1460 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2602 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2598 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1465 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2606 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 &&
	     !rs1_cap__h6403[104] &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d565 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1475 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2607 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 &&
	     !rs1_cap__h6403[104] &&
	     (!rs2_val_bypassed_capability__h7274[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1174 &&
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1179) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2660 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2646 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2657) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2671 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385 ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2673 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2785 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	     2'd1 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2786 =
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2785 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385 ;
  assign NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2676 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] ||
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2671) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2673) ;
  assign NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2719 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd2 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0) &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2717 ;
  assign NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728 =
	     NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2719 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2780 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     !stage3_rg_full &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2717 &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 ;
  assign NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2789 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2782 ||
	      !stage1_rg_full) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2786 ||
	      near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0) ;
  assign NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2791 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2782 ||
	      !stage1_rg_full) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2786 ||
	      near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0) &&
	     cur_verbosity__h1374 != 4'd0 ;
  assign NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2794 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2717 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d2805 =
	     !stage1_rg_full ||
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2785 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385 ||
	     near_mem$imem_instr[6:0] != 7'b1110011 ||
	     near_mem$imem_instr[13:12] == 2'b0 ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ||
	     stage3_rg_full ;
  assign SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1355 =
	     { {52{near_memimem_instr_BITS_31_TO_20__q21[11]}},
	       near_memimem_instr_BITS_31_TO_20__q21 } ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_19_ETC__q32 =
	     { 45'd0,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d567 } <<
	     rs1_cap__h6403[110:105] ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1174 =
	     x__h33131 == b__h33128 ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1179 =
	     x__h33372 == b__h33128 ;
  assign _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1154 =
	     top__h8346 <= old_top__h8037 ;
  assign _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1158 =
	     bot__h8347 < old_lower__h8036 ;
  assign _0_CONCAT_x0717_SL_rs2_val_bypassed_capability2_ETC__q31 =
	     { 45'd0, x__h40717 } <<
	     rs2_val_bypassed_capability__h7274[110:105] ;
  assign _44_MINUS_leading399__q12 = 7'd44 - leading__h8399 ;
  assign _63_MINUS_IF_rs2_val_bypassed_capability274_BIT_ETC__q17 =
	     7'd63 -
	     (rs2_val_bypassed_capability__h7274[63] ?
		7'd0 :
		IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1002) ;
  assign _theResult_____1_snd__h37469 =
	     (near_mem$imem_instr[14:12] == 3'b0 &&
	      near_mem$imem_instr[6:0] == 7'b0110011 &&
	      near_mem$imem_instr[30]) ?
	       rd_val___1__h37464 :
	       _theResult_____1_snd__h37476 ;
  assign _theResult_____1_snd__h37504 =
	     rs1_cap__h6403[63:0] & _theResult___snd__h41549 ;
  assign _theResult_____4__h45524 =
	     csr_regfile$read_misa[18] ?
	       _theResult_____5__h45523 :
	       csr_val___2__h45623 ;
  assign _theResult_____5__h45523 =
	     (!csr_regfile$read_misa[18] && !csr_regfile$read_misa[5] &&
	      !csr_regfile$read_misa[3]) ?
	       csr_val___1__h45683 :
	       csr_val___2__h45522 ;
  assign _theResult____h52119 =
	     (delta_CPI_instrs__h52118 == 64'd0) ?
	       delta_CPI_instrs___1__h52154 :
	       delta_CPI_instrs__h52118 ;
  assign _theResult___exc_code__h37986 =
	     (near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      rs1_cap__h6403[104]) ?
	       5'd21 :
	       5'd2 ;
  assign _theResult___fst__h8032 =
	     rs1_cap__h6403[104] ? 5'd21 : _theResult___fst__h8039 ;
  assign _theResult___fst__h8039 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2388 ?
	       5'd23 :
	       5'd16 ;
  assign _theResult___snd__h37580 =
	     (near_mem$imem_instr[14:12] == 3'b001 &&
	      !near_mem$imem_instr[25]) ?
	       rd_val___1__h41698 :
	       _theResult___snd__h37587 ;
  assign _theResult___snd__h37587 =
	     near_mem$imem_instr[30] ?
	       rd_val___1__h41781 :
	       rd_val___1__h41752 ;
  assign _theResult___snd__h37693 =
	     { {32{rs1_cap403_BITS_31_TO_0_SRL_rs2_val_bypassed_c_ETC__q9[31]}},
	       rs1_cap403_BITS_31_TO_0_SRL_rs2_val_bypassed_c_ETC__q9 } ;
  assign _theResult___snd__h41549 =
	     (near_mem$imem_instr[6:0] == 7'b0010011) ?
	       SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1355 :
	       rs2_val_bypassed_capability__h7274[63:0] ;
  assign _theResult___snd_capability__h39943 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      rs1_cap__h6403[104] ||
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d565 ||
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d570 ||
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d572) ?
	       128'd0 :
	       ret_capability__h39937 ;
  assign aMid__h40237 =
	     rs2_val_bypassed_capability274_BITS_63_TO_0_AN_ETC__q7[19:0] ;
  assign aMid__h40513 =
	     rs1_cap403_BITS_63_TO_0_AND_INV_0xFFFFFFFFFFFF_ETC__q13[19:0] ;
  assign alu_outputs___1_addr_capability__h38766 =
	     { 64'd0, new_offset__h39876 } ;
  assign alu_outputs___1_addr_capability__h38780 =
	     { 116'd0, near_mem$imem_instr[31:20] } ;
  assign alu_outputs___1_addr_capability__h38804 = rs1_cap__h6403 ;
  assign alu_outputs___1_addr_tag__h38803 = alu_outputs___1_val2_tag__h45365 ;
  assign alu_outputs___1_addr_tag__h38847 =
	     (near_mem$imem_instr[31:25] == 7'b1111111) ?
	       alu_outputs___1_addr_tag__h38803 :
	       near_mem$imem_instr[31:25] != 7'b0000001 &&
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1855 ;
  assign alu_outputs___1_exc_code__h38213 =
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1227 ?
	       5'd2 :
	       5'd20 ;
  assign alu_outputs___1_exc_code__h6371 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       (near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_5_ETC___d1594 ?
		  5'd2 :
		  ((near_mem$imem_instr[11:7] == 5'd0 &&
		    near_mem$imem_instr[19:15] == 5'd0) ?
		     CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q24 :
		     5'd2)) :
	       5'd2 ;
  assign alu_outputs___1_val1_capability__h39838 =
	     { 64'hFFFE7E0000011111, ret_pc__h5871 } ;
  assign alu_outputs___1_val1_capability__h39846 =
	     { 64'd0, new_addr__h39843 } ;
  assign alu_outputs___1_val1_capability__h39850 =
	     { 64'd0, new_addr__h39847 } ;
  assign alu_outputs___1_val1_capability__h39854 =
	     { 64'd0, new_addr__h39851 } ;
  assign alu_outputs___1_val1_capability__h39858 =
	     { 64'd0, new_addr__h39855 } ;
  assign alu_outputs___1_val1_capability__h39861 = { 64'd0, rd_val__h6051 } ;
  assign alu_outputs___1_val1_capability__h39864 = { 64'd0, rd_val__h6068 } ;
  assign alu_outputs___1_val1_capability__h39874 = { 64'd0, rd_val__h6357 } ;
  assign alu_outputs___1_val1_capability__h39906 = { 118'd0, x__h43663 } ;
  assign alu_outputs___1_val1_capability__h40018 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       { rs1_cap__h6403[127:64], new_offset__h39876 } :
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 ;
  assign alu_outputs___1_val1_tag__h39918 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     decoded_instr_rs2__h5316 != 5'b00001 &&
	     decoded_instr_rs2__h5316 != 5'b00010 &&
	     decoded_instr_rs2__h5316 != 5'b00011 &&
	     decoded_instr_rs2__h5316 != 5'b00100 &&
	     decoded_instr_rs2__h5316 != 5'b00101 &&
	     decoded_instr_rs2__h5316 != 5'b00110 &&
	     decoded_instr_rs2__h5316 != 5'b01111 &&
	     ((decoded_instr_rs2__h5316 == 5'b01010) ?
		near_mem$imem_instr[19:15] != 5'd0 &&
		IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
		decoded_instr_rs2__h5316 == 5'b01100) ;
  assign alu_outputs___1_val1_tag__h40017 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2017 ;
  assign alu_outputs___1_val2_capability__h45298 =
	     { 64'hFFFE7E0000011111, branch_target__h5843 } ;
  assign alu_outputs___1_val2_capability__h45314 =
	     { 64'd0, new_addr__h45309 } ;
  assign alu_outputs___1_val2_tag__h45365 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign alu_outputs___2_addr_capability__h38825 =
	     { 123'd0, decoded_instr_rs2__h5316 } ;
  assign alu_outputs_addr_capability__h38749 =
	     { 64'hFFFE7E0000011111, new_pc__h5854 } ;
  assign alu_outputs_addr_capability__h38753 =
	     { 64'hFFFE7E0000011111, next_pc__h5872 } ;
  assign alu_outputs_addr_capability__h38757 =
	     { 64'hFFFE7E0000011111, next_pc__h5895 } ;
  assign alu_outputs_addr_capability__h38769 = { 64'd0, eaddr__h6106 } ;
  assign alu_outputs_addr_tag__h38862 =
	     near_mem$imem_instr[6:0] == 7'b1100011 ||
	     near_mem$imem_instr[6:0] == 7'b1101111 ||
	     near_mem$imem_instr[6:0] == 7'b1100111 ||
	     near_mem$imem_instr[6:0] != 7'b0000011 &&
	     near_mem$imem_instr[6:0] != 7'b0100011 &&
	     near_mem$imem_instr[6:0] != 7'b1110011 &&
	     alu_outputs___1_addr_tag__h38847 ;
  assign alu_outputs_val2_tag__h45380 =
	     near_mem$imem_instr[6:0] == 7'b1100011 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2226 ;
  assign b__h33128 = { 44'd0, x__h33301 } ;
  assign b__h35689 = { 44'd0, x__h35767 } ;
  assign b__h40172 =
	     rs2_val_bypassed_capability274_AND_INV_0xFFFFF_ETC__q6[1:0] ;
  assign b__h40448 =
	     rs1_cap403_AND_INV_0xFFFFFFFFFFFFFFFFFFFFFFFFF_ETC__q11[1:0] ;
  assign b__h7394 = { 44'd0, x__h7472 } ;
  assign b_capability__h6710 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       ((stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
		 stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) ?
		  128'd0 :
		  gpr_regfile$read_rs1[127:0]) :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317 ;
  assign b_capability__h6722 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       ((IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
		 IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) ?
		  128'd0 :
		  b_capability__h6710) :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322 ;
  assign b_capability__h7260 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       ((stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
		 stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) ?
		  128'd0 :
		  gpr_regfile$read_rs2[127:0]) :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340 ;
  assign b_capability__h7272 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       ((IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
		 IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) ?
		  128'd0 :
		  b_capability__h7260) :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344 ;
  assign b_val__h40160 = { 45'd0, x__h40389 } ;
  assign b_val__h40436 = { 45'd0, x__h8073 } ;
  assign baseExp__h8364 =
	     (rs1_cap__h6403[63] || rs1_cap__h6403[62] ||
	      rs1_cap__h6403[61] ||
	      rs1_cap__h6403[60] ||
	      rs1_cap__h6403[59] ||
	      rs1_cap__h6403[58] ||
	      rs1_cap__h6403[57] ||
	      rs1_cap__h6403[56] ||
	      rs1_cap__h6403[55] ||
	      rs1_cap__h6403[54] ||
	      rs1_cap__h6403[53] ||
	      rs1_cap__h6403[52] ||
	      rs1_cap__h6403[51] ||
	      rs1_cap__h6403[50] ||
	      rs1_cap__h6403[49] ||
	      rs1_cap__h6403[48] ||
	      rs1_cap__h6403[47] ||
	      rs1_cap__h6403[46] ||
	      rs1_cap__h6403[45] ||
	      rs1_cap__h6403[44] ||
	      rs1_cap__h6403[43] ||
	      rs1_cap__h6403[42] ||
	      rs1_cap__h6403[41] ||
	      rs1_cap__h6403[40] ||
	      rs1_cap__h6403[39] ||
	      rs1_cap__h6403[38] ||
	      rs1_cap__h6403[37] ||
	      rs1_cap__h6403[36] ||
	      rs1_cap__h6403[35] ||
	      rs1_cap__h6403[34] ||
	      rs1_cap__h6403[33] ||
	      rs1_cap__h6403[32] ||
	      rs1_cap__h6403[31] ||
	      rs1_cap__h6403[30] ||
	      rs1_cap__h6403[29] ||
	      rs1_cap__h6403[28] ||
	      rs1_cap__h6403[27] ||
	      rs1_cap__h6403[26] ||
	      rs1_cap__h6403[25] ||
	      rs1_cap__h6403[24] ||
	      rs1_cap__h6403[23] ||
	      rs1_cap__h6403[22] ||
	      rs1_cap__h6403[21] ||
	      rs1_cap__h6403[20]) ?
	       _44_MINUS_leading399__q12[5:0] :
	       6'd0 ;
  assign bot__h8347 = { 44'd0, x__h33007 } ;
  assign branch_target__h5843 =
	     near_mem$imem_pc +
	     { {51{near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1[12]}},
	       near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1 } ;
  assign check__h35421 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1236 ?
	       5'd18 :
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2446 ;
  assign check__h6436 =
	     (!IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1362 ||
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367) ?
	       5'd19 :
	       (rs1_cap__h6403[114] ?
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2367 :
		  5'd20) ;
  assign check__h6993 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505) ?
	       5'd18 :
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2375 ;
  assign check__h7610 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505) ?
	       5'd18 :
	       (rs1_cap__h6403[104] ?
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2380 :
		  5'd22) ;
  assign controller_capability__h35449 =
	     decoded_instr_rs2__h5316[4] ?
	       rs1_cap__h6403 :
	       stage1_rg_ddc[127:0] ;
  assign cpi__h52121 = x__h52120 / 64'd10 ;
  assign cpifrac__h52122 = x__h52120 % 64'd10 ;
  assign csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d2858 =
	     delta_CPI_cycles__h52117 * 64'd10 ;
  assign csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1401 =
	     csr_regfile$read_csr[64] &&
	     !rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 &&
	     !csr_regfile$csr_counter_read_fault &&
	     (near_mem$imem_instr[13:12] != 2'b01 &&
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      near_mem$imem_instr[31:30] != 2'b11) ;
  assign csr_val___1__h45683 =
	     { csr_val__h6361[63],
	       27'd0,
	       csr_val__h6361[35:32],
	       9'd0,
	       csr_val__h6361[22:15],
	       2'd0,
	       csr_val__h6361[12:11],
	       2'd0,
	       csr_val__h6361[8:7],
	       1'd0,
	       csr_val__h6361[5:3],
	       1'd0,
	       csr_val__h6361[1:0] } ;
  assign csr_val___2__h45522 =
	     { csr_val__h6361[63],
	       27'd0,
	       csr_val__h6361[35:32],
	       9'd0,
	       csr_val__h6361[22:11],
	       2'd0,
	       csr_val__h6361[8:7],
	       1'd0,
	       csr_val__h6361[5:3],
	       1'd0,
	       csr_val__h6361[1:0] } ;
  assign csr_val___2__h45531 =
	     { IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[63:36],
	       4'b1010,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2297 } ;
  assign csr_val___2__h45608 =
	     { _theResult_____4__h45524[63:5],
	       1'd0,
	       _theResult_____4__h45524[3:1],
	       1'd0 } ;
  assign csr_val___2__h45623 =
	     { _theResult_____5__h45523[63:9],
	       1'd0,
	       _theResult_____5__h45523[7:6],
	       1'd0,
	       _theResult_____5__h45523[4:2],
	       1'd0,
	       _theResult_____5__h45523[0] } ;
  assign csr_val__h39684 = csr_regfile$read_csr[63:0] | rs1_val__h6356 ;
  assign csr_val__h39689 = csr_regfile$read_csr[63:0] & y__h45753 ;
  assign ct_T__h33049 =
	     rs2_val_bypassed_capability__h7274[104] ?
	       { rs2_val_bypassed_capability__h7274[83:76], 12'h0 } :
	       rs2_val_bypassed_capability__h7274[83:64] ;
  assign cur_verbosity__h1374 =
	     (csr_regfile$read_csr_minstret < cfg_logdelay) ?
	       4'd0 :
	       cfg_verbosity ;
  assign decoded_instr_rs2__h5316 =
	     (near_mem$imem_instr[6:0] == 7'b1011011 &&
	      near_mem$imem_instr[31:25] == 7'b1111110) ?
	       near_mem$imem_instr[11:7] :
	       near_mem$imem_instr[24:20] ;
  assign delta_CPI_cycles__h52117 =
	     csr_regfile$read_csr_mcycle - rg_start_CPI_cycles ;
  assign delta_CPI_instrs___1__h52154 = delta_CPI_instrs__h52118 + 64'd1 ;
  assign delta_CPI_instrs__h52118 =
	     csr_regfile$read_csr_minstret - rg_start_CPI_instrs ;
  assign eaddr__h6106 =
	     rs1_cap__h6403[63:0] +
	     { {52{near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10[11]}},
	       near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10 } ;
  assign exp__h8341 =
	     (baseExp__h8364 <= rangeExp__h8363) ?
	       rangeExp__h8363 :
	       baseExp__h8364 ;
  assign funct10__h6030 =
	     { near_mem$imem_instr[31:25], near_mem$imem_instr[14:12] } ;
  assign fv_out_next_pc__h5702 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574 ?
	       alu_outputs_addr_capability__h38863[63:0] :
	       ret_pc__h5871 ;
  assign fv_out_trap_info_exc_code__h38470 =
	     near_mem$imem_exc ?
	       near_mem$imem_exc_code :
	       ((near_mem$imem_instr[6:0] == 7'b1110011 &&
		 near_mem$imem_instr[13:12] != 2'b0 &&
		 NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260) ?
		  5'd2 :
		  alu_outputs_exc_code__h36710) ;
  assign global__h34174 =
	     rs2_val_bypassed_capability__h7274[113] & rs1_cap__h6403[113] ;
  assign global__h39926 =
	     rs1_cap__h6403[113] & rs2_val_bypassed_capability__h7274[113] ;
  assign gpr_regfile_RDY_server_reset_response_get__561_ETC___d2573 =
	     gpr_regfile$RDY_server_reset_response_get &&
	     near_mem$RDY_server_reset_response_get &&
	     csr_regfile$RDY_server_reset_response_get &&
	     stage1_f_reset_rsps$EMPTY_N &&
	     stage2_f_reset_rsps$EMPTY_N &&
	     stage3_f_reset_rsps$EMPTY_N &&
	     f_reset_rsps$FULL_N ;
  assign i1__h40242 = 6'd19 + rs2_val_bypassed_capability__h7274[110:105] ;
  assign i1__h40518 = 6'd19 + rs1_cap__h6403[110:105] ;
  assign i2__h40177 = 6'd20 + rs2_val_bypassed_capability__h7274[110:105] ;
  assign i2__h40453 = 6'd20 + rs1_cap__h6403[110:105] ;
  assign increase8591_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q18 =
	     increase__h28591 +
	     { 1'd0,
	       _63_MINUS_IF_rs2_val_bypassed_capability274_BIT_ETC__q17[5:0] } ;
  assign increase__h28591 =
	     INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[0] ?
	       7'd0 :
	       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[1] ?
		  7'd1 :
		  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[2] ?
		     7'd2 :
		     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[3] ?
			7'd3 :
			(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[4] ?
			   7'd4 :
			   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[5] ?
			      7'd5 :
			      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[6] ?
				 7'd6 :
				 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[7] ?
				    7'd7 :
				    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[8] ?
				       7'd8 :
				       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[9] ?
					  7'd9 :
					  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[10] ?
					     7'd10 :
					     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[11] ?
						7'd11 :
						(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[12] ?
						   7'd12 :
						   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[13] ?
						      7'd13 :
						      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[14] ?
							 7'd14 :
							 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[15] ?
							    7'd15 :
							    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[16] ?
							       7'd16 :
							       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[17] ?
								  7'd17 :
								  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[18] ?
								     7'd18 :
								     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[19] ?
									7'd19 :
									(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[20] ?
									   7'd20 :
									   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[21] ?
									      7'd21 :
									      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[22] ?
										 7'd22 :
										 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[23] ?
										    7'd23 :
										    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[24] ?
										       7'd24 :
										       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[25] ?
											  7'd25 :
											  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[26] ?
											     7'd26 :
											     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[27] ?
												7'd27 :
												(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[28] ?
												   7'd28 :
												   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[29] ?
												      7'd29 :
												      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[30] ?
													 7'd30 :
													 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[31] ?
													    7'd31 :
													    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[32] ?
													       7'd32 :
													       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[33] ?
														  7'd33 :
														  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[34] ?
														     7'd34 :
														     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[35] ?
															7'd35 :
															(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[36] ?
															   7'd36 :
															   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[37] ?
															      7'd37 :
															      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[38] ?
																 7'd38 :
																 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[39] ?
																    7'd39 :
																    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[40] ?
																       7'd40 :
																       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[41] ?
																	  7'd41 :
																	  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[42] ?
																	     7'd42 :
																	     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[43] ?
																		7'd43 :
																		(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[44] ?
																		   7'd44 :
																		   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[45] ?
																		      7'd45 :
																		      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[46] ?
																			 7'd46 :
																			 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[47] ?
																			    7'd47 :
																			    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[48] ?
																			       7'd48 :
																			       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[49] ?
																				  7'd49 :
																				  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[50] ?
																				     7'd50 :
																				     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[51] ?
																					7'd51 :
																					(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[52] ?
																					   7'd52 :
																					   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[53] ?
																					      7'd53 :
																					      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[54] ?
																						 7'd54 :
																						 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[55] ?
																						    7'd55 :
																						    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[56] ?
																						       7'd56 :
																						       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[57] ?
																							  7'd57 :
																							  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[58] ?
																							     7'd58 :
																							     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[59] ?
																								7'd59 :
																								(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[60] ?
																								   7'd60 :
																								   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[61] ?
																								      7'd61 :
																								      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[62] ?
																									 7'd62 :
																									 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1014[63] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign leading__h8399 =
	     rs1_cap__h6403[63] ?
	       7'd0 :
	       (rs1_cap__h6403[62] ?
		  7'd1 :
		  (rs1_cap__h6403[61] ?
		     7'd2 :
		     (rs1_cap__h6403[60] ?
			7'd3 :
			(rs1_cap__h6403[59] ?
			   7'd4 :
			   (rs1_cap__h6403[58] ?
			      7'd5 :
			      (rs1_cap__h6403[57] ?
				 7'd6 :
				 (rs1_cap__h6403[56] ?
				    7'd7 :
				    (rs1_cap__h6403[55] ?
				       7'd8 :
				       (rs1_cap__h6403[54] ?
					  7'd9 :
					  (rs1_cap__h6403[53] ?
					     7'd10 :
					     (rs1_cap__h6403[52] ?
						7'd11 :
						(rs1_cap__h6403[51] ?
						   7'd12 :
						   (rs1_cap__h6403[50] ?
						      7'd13 :
						      (rs1_cap__h6403[49] ?
							 7'd14 :
							 (rs1_cap__h6403[48] ?
							    7'd15 :
							    (rs1_cap__h6403[47] ?
							       7'd16 :
							       (rs1_cap__h6403[46] ?
								  7'd17 :
								  (rs1_cap__h6403[45] ?
								     7'd18 :
								     (rs1_cap__h6403[44] ?
									7'd19 :
									(rs1_cap__h6403[43] ?
									   7'd20 :
									   (rs1_cap__h6403[42] ?
									      7'd21 :
									      (rs1_cap__h6403[41] ?
										 7'd22 :
										 (rs1_cap__h6403[40] ?
										    7'd23 :
										    (rs1_cap__h6403[39] ?
										       7'd24 :
										       (rs1_cap__h6403[38] ?
											  7'd25 :
											  (rs1_cap__h6403[37] ?
											     7'd26 :
											     (rs1_cap__h6403[36] ?
												7'd27 :
												(rs1_cap__h6403[35] ?
												   7'd28 :
												   (rs1_cap__h6403[34] ?
												      7'd29 :
												      (rs1_cap__h6403[33] ?
													 7'd30 :
													 (rs1_cap__h6403[32] ?
													    7'd31 :
													    (rs1_cap__h6403[31] ?
													       7'd32 :
													       (rs1_cap__h6403[30] ?
														  7'd33 :
														  (rs1_cap__h6403[29] ?
														     7'd34 :
														     (rs1_cap__h6403[28] ?
															7'd35 :
															(rs1_cap__h6403[27] ?
															   7'd36 :
															   (rs1_cap__h6403[26] ?
															      7'd37 :
															      (rs1_cap__h6403[25] ?
																 7'd38 :
																 (rs1_cap__h6403[24] ?
																    7'd39 :
																    (rs1_cap__h6403[23] ?
																       7'd40 :
																       (rs1_cap__h6403[22] ?
																	  7'd41 :
																	  (rs1_cap__h6403[21] ?
																	     7'd42 :
																	     (rs1_cap__h6403[20] ?
																		7'd43 :
																		(rs1_cap__h6403[19] ?
																		   7'd44 :
																		   (rs1_cap__h6403[18] ?
																		      7'd45 :
																		      (rs1_cap__h6403[17] ?
																			 7'd46 :
																			 (rs1_cap__h6403[16] ?
																			    7'd47 :
																			    (rs1_cap__h6403[15] ?
																			       7'd48 :
																			       (rs1_cap__h6403[14] ?
																				  7'd49 :
																				  (rs1_cap__h6403[13] ?
																				     7'd50 :
																				     (rs1_cap__h6403[12] ?
																					7'd51 :
																					(rs1_cap__h6403[11] ?
																					   7'd52 :
																					   (rs1_cap__h6403[10] ?
																					      7'd53 :
																					      (rs1_cap__h6403[9] ?
																						 7'd54 :
																						 (rs1_cap__h6403[8] ?
																						    7'd55 :
																						    (rs1_cap__h6403[7] ?
																						       7'd56 :
																						       (rs1_cap__h6403[6] ?
																							  7'd57 :
																							  (rs1_cap__h6403[5] ?
																							     7'd58 :
																							     (rs1_cap__h6403[4] ?
																								7'd59 :
																								(rs1_cap__h6403[3] ?
																								   7'd60 :
																								   (rs1_cap__h6403[2] ?
																								      7'd61 :
																								      (rs1_cap__h6403[1] ?
																									 7'd62 :
																									 (rs1_cap__h6403[0] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign lower__h33126 = { 40'd0, x__h33213 } ;
  assign ms_spp__h3168 = csr_regfile$read_mstatus[8] ? 2'b01 : 2'b0 ;
  assign ms_sxl__h3157 =
	     csr_regfile$read_misa[18] ? csr_regfile$read_misa[27:26] : 2'd0 ;
  assign ms_uxl__h3158 =
	     csr_regfile$read_misa[20] ? csr_regfile$read_misa[27:26] : 2'd0 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2317 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd0 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2320 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd1 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2323 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd2 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2326 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd3 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2329 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd4 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2332 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd5 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2335 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd6 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2338 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd7 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2341 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd8 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2344 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd9 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2347 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd3 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd4 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd5 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd6 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd7 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd8 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 !=
	     4'd9 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 =
	     near_mem$imem_exc ||
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 &&
	     NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 ;
  assign near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_5_ETC___d1594 =
	     near_mem$imem_instr[11:7] == 5'd0 &&
	     (rg_cur_priv == 2'b11 ||
	      rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[20]) &&
	     near_mem$imem_instr[31:25] == 7'b0001001 ;
  assign near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 =
	     near_mem$imem_instr[13:12] == 2'b0 ||
	     !csr_regfile$read_csr[64] ||
	     rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 ||
	     csr_regfile$csr_counter_read_fault ||
	     (near_mem$imem_instr[13:12] == 2'b01 ||
	      near_mem$imem_instr[19:15] != 5'd0) &&
	     near_mem$imem_instr[31:30] == 2'b11 ||
	     near_mem$imem_instr[31:20] == 12'h180 &&
	     csr_regfile$read_mstatus[20] ;
  assign near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1420 =
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     (near_mem$imem_instr[6:0] != 7'b0110011 ||
	      !near_mem$imem_instr[30]) ||
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem$imem_instr[6:0] == 7'b0110011 &&
	     near_mem$imem_instr[30] ||
	     near_mem$imem_instr[14:12] == 3'b010 ||
	     near_mem$imem_instr[14:12] == 3'b011 ||
	     near_mem$imem_instr[14:12] == 3'b100 ||
	     near_mem$imem_instr[14:12] == 3'b110 ||
	     near_mem$imem_instr[14:12] == 3'b111 ;
  assign near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1559 =
	     (near_mem$imem_instr[14:12] == 3'b0 ||
	      near_mem$imem_instr[14:12] == 3'b001 ||
	      near_mem$imem_instr[14:12] == 3'b100 ||
	      near_mem$imem_instr[14:12] == 3'b101 ||
	      near_mem$imem_instr[14:12] == 3'b110 ||
	      near_mem$imem_instr[14:12] == 3'b111) &&
	     (IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 ||
	      !branch_target__h5843[1]) ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1164 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     rs1_cap__h6403[104] ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d565 ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d570 ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d572 ||
	     !_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1154 ||
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1158 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1183 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     rs1_cap__h6403[104] ||
	     rs2_val_bypassed_capability__h7274[104] &&
	     (!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1174 ||
	      !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1179) ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d532 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     rs1_cap__h6403[104] ||
	     rs2_val_bypassed_capability__h7274[104] ||
	     NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d530 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d546 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     !rs1_cap__h6403[104] ||
	     rs2_val_bypassed_capability__h7274[104] ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d539 ||
	     !b_capability__h7272[122] ;
  assign near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2740 =
	     near_mem$imem_instr[31:25] == 7'b0000001 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1496 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     near_mem$imem_instr[19:15] != 5'd0 ;
  assign near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2213 =
	     { near_mem$imem_instr[6:0] == 7'b1101111 ||
	       near_mem$imem_instr[6:0] == 7'b1100111 ||
	       near_mem$imem_instr[6:0] != 7'b0010011 &&
	       near_mem$imem_instr[6:0] != 7'b0110011 &&
	       near_mem$imem_instr[6:0] != 7'b0011011 &&
	       near_mem$imem_instr[6:0] != 7'b0111011 &&
	       near_mem$imem_instr[6:0] != 7'b0110111 &&
	       near_mem$imem_instr[6:0] != 7'b0010111 &&
	       near_mem$imem_instr[6:0] != 7'b1110011 &&
	       alu_outputs___1_val1_tag__h40017,
	       CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q34 } ;
  assign near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353 =
	     near_mem$imem_pc +
	     { {43{near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q20[20]}},
	       near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q20 } ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388 =
	     near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1328 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577 =
	     near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2716 =
	     near_mem$imem_valid &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 !=
	      2'd1 ||
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 &&
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2717 =
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2716 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) ;
  assign near_memimem_instr_BITS_31_TO_20__q21 = near_mem$imem_instr[31:20] ;
  assign near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10 =
	     { near_mem$imem_instr[31:25], near_mem$imem_instr[11:7] } ;
  assign near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1 =
	     { near_mem$imem_instr[31],
	       near_mem$imem_instr[7],
	       near_mem$imem_instr[30:25],
	       near_mem$imem_instr[11:8],
	       1'b0 } ;
  assign near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q20 =
	     { near_mem$imem_instr[31],
	       near_mem$imem_instr[19:12],
	       near_mem$imem_instr[20],
	       near_mem$imem_instr[30:21],
	       1'b0 } ;
  assign newVal__h6410 =
	     rs1_cap__h6403[104] ?
	       { 40'd0, rs1_cap__h6403[95:84], rs1_cap__h6403[75:64] } :
	       64'hFFFFFFFFFFFFFFFF ;
  assign newVal__h6416 =
	     64'b0000000000000000000000000000000000000000000000000000000000000001 <<
	     rs1_cap__h6403[110:105] ;
  assign newVal__h6425 =
	     rs1_cap__h6403[63:0] - result0435_PLUS_b_val0436__q29[63:0] ;
  assign new_addr__h39843 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       rd_val__h41335 :
	       (near_mem$imem_instr[30] ? rd_val__h41451 : rd_val__h41429) ;
  assign new_addr__h39847 =
	     (near_mem$imem_instr[14:12] == 3'b0 &&
	      (near_mem$imem_instr[6:0] != 7'b0110011 ||
	       !near_mem$imem_instr[30])) ?
	       rd_val___1__h37456 :
	       _theResult_____1_snd__h37469 ;
  assign new_addr__h39851 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       rd_val___1__h41646 :
	       _theResult___snd__h37580 ;
  assign new_addr__h39961 =
	     rs1_cap__h6403[63:0] - result0159_PLUS_b_val0160__q30[63:0] ;
  assign new_addr__h45309 =
	     (near_mem$imem_instr[31:20] == 12'h300) ?
	       csr_val___2__h45531 :
	       csr_val__h6361 ;
  assign new_curs__h7886 =
	     rs2_val_bypassed_capability__h7274[63:0] +
	     result0435_PLUS_b_val0436__q29[63:0] ;
  assign new_offset9876_BITS_31_TO_0__q22 = new_offset__h39876[31:0] ;
  assign new_offset__h39876 =
	     rs1_cap__h6403[63:0] +
	     SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1355 ;
  assign new_pc__h5854 =
	     IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 ?
	       branch_target__h5843 :
	       ret_pc__h5871 ;
  assign new_pcc_capability__h34176 =
	     { rs2_val_bypassed_capability__h7274[127:114],
	       global__h34174,
	       rs2_val_bypassed_capability__h7274[112:105],
	       1'b0,
	       rs2_val_bypassed_capability__h7274[103:0] } ;
  assign newcap__h7852 = { newperms__h7851, rs1_cap__h6403[112:0] } ;
  assign newperms__h7851 =
	     rs2_val_bypassed_capability__h7274[14:0] &
	     rs1_cap__h6403[127:113] ;
  assign next_pc__h5872 =
	     { near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353[63:1],
	       1'd0 } ;
  assign next_pc__h5895 = { new_offset__h39876[63:1], 1'd0 } ;
  assign old_lower__h8036 = { 44'd0, x__h8073 } ;
  assign old_top__h8037 = { 44'd0, x__h8212 } ;
  assign out__h35195 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (rs2_val_bypassed_capability__h7274[104] ?
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2430 :
		  5'd22) ;
  assign out_val_capability__h33165 =
	     { rs1_cap__h6403[127:64], lower__h33126 } ;
  assign output_stage2___1_bypass_rd_val_capability__h4613 =
	     (stage2_rg_stage2[393:389] == 5'd0) ?
	       stage2_rg_stage2[256:129] :
	       { 64'd0, near_mem$dmem_word64 } ;
  assign output_stage2___1_bypass_rd_val_tag__h4612 =
	     stage2_rg_stage2[393:389] == 5'd0 && stage2_rg_stage2[257] ;
  assign pcc_capability__h34048 = { 64'hFFFE7E0000011111, near_mem$imem_pc } ;
  assign r__h40238 = x__h7472 - 20'd4096 ;
  assign r__h40514 = x__h33301 - 20'd4096 ;
  assign rangeExp__h8363 =
	     NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1011 ?
	       increase8591_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q18[5:0] :
	       _63_MINUS_IF_rs2_val_bypassed_capability274_BIT_ETC__q17[5:0] ;
  assign rd_val___1__h37456 =
	     rs1_cap__h6403[63:0] + _theResult___snd__h41549 ;
  assign rd_val___1__h37464 =
	     rs1_cap__h6403[63:0] - _theResult___snd__h41549 ;
  assign rd_val___1__h37471 =
	     ((rs1_cap__h6403[63:0] ^ 64'h8000000000000000) <
	      (_theResult___snd__h41549 ^ 64'h8000000000000000)) ?
	       64'd1 :
	       64'd0 ;
  assign rd_val___1__h37478 =
	     (rs1_cap__h6403[63:0] < _theResult___snd__h41549) ?
	       64'd1 :
	       64'd0 ;
  assign rd_val___1__h37485 =
	     rs1_cap__h6403[63:0] ^ _theResult___snd__h41549 ;
  assign rd_val___1__h37492 =
	     rs1_cap__h6403[63:0] | _theResult___snd__h41549 ;
  assign rd_val___1__h41646 =
	     { {32{new_offset9876_BITS_31_TO_0__q22[31]}},
	       new_offset9876_BITS_31_TO_0__q22 } ;
  assign rd_val___1__h41698 = { {32{x__h41701[31]}}, x__h41701 } ;
  assign rd_val___1__h41752 = { {32{x__h41755[31]}}, x__h41755 } ;
  assign rd_val___1__h41781 = { {32{tmp__h41780[31]}}, tmp__h41780 } ;
  assign rd_val___1__h41879 =
	     { {32{rs1_cap403_BITS_31_TO_0_PLUS_rs2_val_bypassed__ETC__q15[31]}},
	       rs1_cap403_BITS_31_TO_0_PLUS_rs2_val_bypassed__ETC__q15 } ;
  assign rd_val___1__h41967 =
	     { {32{rs1_cap403_BITS_31_TO_0_MINUS_rs2_val_bypassed_ETC__q16[31]}},
	       rs1_cap403_BITS_31_TO_0_MINUS_rs2_val_bypassed_ETC__q16 } ;
  assign rd_val___1__h41973 = { {32{x__h41976[31]}}, x__h41976 } ;
  assign rd_val___1__h42018 = { {32{x__h42021[31]}}, x__h42021 } ;
  assign rd_val__h41335 = rs1_cap__h6403[63:0] << shamt__h5945 ;
  assign rd_val__h41429 = rs1_cap__h6403[63:0] >> shamt__h5945 ;
  assign rd_val__h41451 =
	     rs1_cap__h6403[63:0] >> shamt__h5945 |
	     ~(64'hFFFFFFFFFFFFFFFF >> shamt__h5945) &
	     {64{rs1_cap403_BITS_63_TO_0__q14[63]}} ;
  assign rd_val__h6051 = { {32{v32__h6049[31]}}, v32__h6049 } ;
  assign rd_val__h6068 = near_mem$imem_pc + rd_val__h6051 ;
  assign rd_val__h6357 =
	     (near_mem$imem_instr[11:7] == 5'd0) ?
	       64'd0 :
	       csr_regfile$read_csr[63:0] ;
  assign requested_top__h8035 =
	     rs1_cap__h6403[63:0] + rs2_val_bypassed_capability__h7274[63:0] ;
  assign result0159_PLUS_b_val0160__q30 = result__h40159 + b_val__h40160 ;
  assign result0435_PLUS_b_val0436__q29 = result__h40435 + b_val__h40436 ;
  assign result__h40159 = { 63'd0, x__h40167 } ;
  assign result__h40435 = { 63'd0, x__h40443 } ;
  assign ret_capability__h39937 =
	     { rs1_cap__h6403[127:111],
	       exp__h8341,
	       rs1_cap__h6403[104],
	       rs1_cap403_BITS_63_TO_0_SRL_exp341__q19[19:0],
	       rs1_cap__h6403[83:0] } ;
  assign ret_pc__h5871 = near_mem$imem_pc + 64'd4 ;
  assign rg_cur_priv_9_EQ_0b11_589_OR_rg_cur_priv_9_EQ__ETC___d1613 =
	     (rg_cur_priv == 2'b11 ||
	      rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[21] ||
	      rg_cur_priv == 2'b0 && csr_regfile$read_misa[13]) &&
	     near_mem$imem_instr[31:20] == 12'b000100000101 ;
  assign rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1226 =
	     rg_cur_priv < decoded_instr_rs2__h5316[4:3] ;
  assign rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 =
	     rg_cur_priv < near_mem$imem_instr[29:28] ;
  assign rg_halt_665_OR_csr_regfile_interrupt_pending_r_ETC___d2811 =
	     rg_halt || csr_regfile$interrupt_pending[5] ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd2 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ||
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2671 ||
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) ;
  assign rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2823 =
	     rg_state == 3'd2 && !rg_halt &&
	     !csr_regfile$interrupt_pending[5] &&
	     !stage3_rg_full ;
  assign rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2836 =
	     rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2823 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd3 ;
  assign rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2842 =
	     rg_state_7_EQ_2_578_AND_NOT_rg_halt_665_666_AN_ETC___d2823 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd2 ;
  assign rg_state_7_EQ_2_578_AND_stage1_rg_full_16_AND__ETC___d2873 =
	     rg_state == 3'd2 && stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2868 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     !stage3_rg_full ;
  assign rg_state_7_EQ_2_578_AND_stage1_rg_full_16_OR_N_ETC___d2679 =
	     rg_state == 3'd2 &&
	     (stage1_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) &&
	     (stage3_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd3) &&
	     (stage3_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      !stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2660) &&
	     (NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2676 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) ;
  assign rs1_cap403_AND_INV_0xFFFFFFFFFFFFFFFFFFFFFFFFF_ETC__q11 =
	     (rs1_cap__h6403 &
	      ~(128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE << 63)) >>
	     i2__h40453 ;
  assign rs1_cap403_BITS_31_TO_0_MINUS_rs2_val_bypassed_ETC__q16 =
	     rs1_cap__h6403[31:0] - rs2_val_bypassed_capability__h7274[31:0] ;
  assign rs1_cap403_BITS_31_TO_0_PLUS_rs2_val_bypassed__ETC__q15 =
	     rs1_cap__h6403[31:0] + rs2_val_bypassed_capability__h7274[31:0] ;
  assign rs1_cap403_BITS_31_TO_0_SRL_rs2_val_bypassed_c_ETC__q9 =
	     rs1_cap__h6403[31:0] >> rs2_val_bypassed_capability__h7274[4:0] |
	     ~(32'hFFFFFFFF >> rs2_val_bypassed_capability__h7274[4:0]) &
	     {32{rs1_cap403_BITS_31_TO_0__q8[31]}} ;
  assign rs1_cap403_BITS_31_TO_0__q8 = rs1_cap__h6403[31:0] ;
  assign rs1_cap403_BITS_63_TO_0_AND_INV_0xFFFFFFFFFFFF_ETC__q13 =
	     (rs1_cap__h6403[63:0] & ~(64'hFFFFFFFFFFFFFFFE << i1__h40518)) >>
	     rs1_cap__h6403[110:105] ;
  assign rs1_cap403_BITS_63_TO_0_SRL_exp341__q19 =
	     rs1_cap__h6403[63:0] >> exp__h8341 ;
  assign rs1_cap403_BITS_63_TO_0__q14 = rs1_cap__h6403[63:0] ;
  assign rs1_cap__h6403 =
	     (near_mem$imem_instr[19:15] == 5'd0) ?
	       128'd0 :
	       b_capability__h6722 ;
  assign rs1_val__h6356 =
	     near_mem$imem_instr[14] ?
	       { 59'd0, near_mem$imem_instr[19:15] } :
	       rs1_cap__h6403[63:0] ;
  assign rs2_val_bypassed_capability274_AND_INV_0xFFFFF_ETC__q6 =
	     (rs2_val_bypassed_capability__h7274 &
	      ~(128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE << 63)) >>
	     i2__h40177 ;
  assign rs2_val_bypassed_capability274_BITS_63_TO_0_AN_ETC__q7 =
	     (rs2_val_bypassed_capability__h7274[63:0] &
	      ~(64'hFFFFFFFFFFFFFFFE << i1__h40242)) >>
	     rs2_val_bypassed_capability__h7274[110:105] ;
  assign rs2_val_bypassed_capability__h7274 =
	     (decoded_instr_rs2__h5316 == 5'b0) ?
	       128'd0 :
	       b_capability__h7272 ;
  assign shamt__h5945 =
	     (near_mem$imem_instr[6:0] == 7'b0010011) ?
	       near_mem$imem_instr[25:20] :
	       rs2_val_bypassed_capability__h7274[5:0] ;
  assign spliced_bits__h45579 =
	     csr_regfile$read_misa[20] ?
	       (csr_regfile$read_misa[18] ?
		  ((IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[12:11] ==
		    2'b10) ?
		     2'b01 :
		     IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[12:11]) :
		  ((IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[12:11] ==
		    2'b11) ?
		     IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[12:11] :
		     2'b0)) :
	       2'b11 ;
  assign spp__h45528 =
	     { 1'd0,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2280[8] } ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1678 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd0 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1682 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd1 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1686 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd2 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1690 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd3 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1694 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd4 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1698 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd5 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1702 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd6 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1706 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd7 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1710 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd8 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1714 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1674 ==
	     4'd9 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1779 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 ==
	     3'd0 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1783 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 ==
	     3'd1 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1787 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 ==
	     3'd2 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1791 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1403 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1556 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 ==
	     3'd3 ;
  assign stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186 =
	     { (stage2_rg_stage2[396:394] == 3'd3 ||
		stage2_rg_stage2[396:394] == 3'd0) &&
	       stage2_rg_stage2[257],
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 } ;
  assign stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 =
	     stage3_rg_stage3_BITS_136_TO_129__q4[decoded_instr_rs2__h5316[2:0]] ;
  assign stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 =
	     stage3_rg_stage3_BITS_136_TO_129__q4[near_mem$imem_instr[17:15]] ;
  assign stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 =
	     stage3_rg_stage3[138:137] == decoded_instr_rs2__h5316[4:3] ;
  assign stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 =
	     stage3_rg_stage3[138:137] == near_mem$imem_instr[19:18] ;
  assign stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 =
	     stage3_rg_stage3[285:279] == 7'b1011011 &&
	     stage3_rg_stage3[293:291] == 3'b0 &&
	     (stage3_rg_stage3[303:299] == 5'h0D ||
	      stage3_rg_stage3[303:299] == 5'h10) &&
	     stage3_rg_stage3[310:304] == 7'b1111111 ;
  assign stage3_rg_stage3_BITS_136_TO_129__q4 = stage3_rg_stage3[136:129] ;
  assign tmp__h41780 =
	     rs1_cap__h6403[31:0] >> near_mem$imem_instr[24:20] |
	     ~(32'hFFFFFFFF >> near_mem$imem_instr[24:20]) &
	     {32{rs1_cap403_BITS_31_TO_0__q8[31]}} ;
  assign top__h8346 = { 44'd0, x__h8357 } ;
  assign trap__h7991 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       _theResult___fst__h8032 ;
  assign upper__h33127 = x__h33389 - 64'd1 ;
  assign upper__h34555 = x__h34723 - 64'd1 ;
  assign upper__h35688 = x__h35856 - 64'd1 ;
  assign upper__h35904 = x__h36072 - 64'd1 ;
  assign upper__h36120 = x__h36288 - 64'd1 ;
  assign upper__h36336 = x__h36504 - 64'd1 ;
  assign upper__h6446 = x__h6866 - 64'd1 ;
  assign upper__h7393 = x__h7561 - 64'd1 ;
  assign v32__h6049 = { near_mem$imem_instr[31:12], 12'h0 } ;
  assign value__h38714 =
	     near_mem$imem_exc ?
	       near_mem$imem_pc :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2537 ;
  assign x__h17361 = x__h17373 + y__h17374 ;
  assign x__h17373 = x__h17385 + y__h17386 ;
  assign x__h17385 = x__h17397 + y__h17398 ;
  assign x__h17397 = x__h17409 + y__h17410 ;
  assign x__h17409 = x__h17421 + y__h17422 ;
  assign x__h17421 = x__h17433 + y__h17434 ;
  assign x__h17433 = x__h17445 + y__h17446 ;
  assign x__h17445 = x__h17457 + y__h17458 ;
  assign x__h17457 = x__h17469 + y__h17470 ;
  assign x__h17469 = x__h17481 + y__h17482 ;
  assign x__h17481 = x__h17493 + y__h17494 ;
  assign x__h17493 = x__h17505 + y__h17506 ;
  assign x__h17505 = x__h17517 + y__h17518 ;
  assign x__h17517 = x__h17529 + y__h17530 ;
  assign x__h17529 = x__h17541 + y__h17542 ;
  assign x__h17541 = x__h17553 + y__h17554 ;
  assign x__h17553 = x__h17565 + y__h17566 ;
  assign x__h17565 = x__h17577 + y__h17578 ;
  assign x__h17577 = x__h17589 + y__h17590 ;
  assign x__h17589 = x__h17601 + y__h17602 ;
  assign x__h17601 = x__h17613 + y__h17614 ;
  assign x__h17613 = x__h17625 + y__h17626 ;
  assign x__h17625 = x__h17637 + y__h17638 ;
  assign x__h17637 = x__h17649 + y__h17650 ;
  assign x__h17649 = x__h17661 + y__h17662 ;
  assign x__h17661 = x__h17673 + y__h17674 ;
  assign x__h17673 = x__h17685 + y__h17686 ;
  assign x__h17685 = x__h17697 + y__h17698 ;
  assign x__h17697 = x__h17709 + y__h17710 ;
  assign x__h17709 = x__h17721 + y__h17722 ;
  assign x__h17721 = x__h17733 + y__h17734 ;
  assign x__h17733 = x__h17745 + y__h17746 ;
  assign x__h17745 = x__h17757 + y__h17758 ;
  assign x__h17757 = x__h17769 + y__h17770 ;
  assign x__h17769 = x__h17781 + y__h17782 ;
  assign x__h17781 = x__h17793 + y__h17794 ;
  assign x__h17793 = x__h17805 + y__h17806 ;
  assign x__h17805 = x__h17817 + y__h17818 ;
  assign x__h17817 = x__h17829 + y__h17830 ;
  assign x__h17829 = x__h17841 + y__h17842 ;
  assign x__h17841 = x__h17853 + y__h17854 ;
  assign x__h17853 = x__h17865 + y__h17866 ;
  assign x__h17865 = x__h17877 + y__h17878 ;
  assign x__h17877 = x__h17889 + y__h17890 ;
  assign x__h17889 = x__h17901 + y__h17902 ;
  assign x__h17901 = x__h17913 + y__h17914 ;
  assign x__h17913 = x__h17925 + y__h17926 ;
  assign x__h17925 = x__h17937 + y__h17938 ;
  assign x__h17937 = x__h17949 + y__h17950 ;
  assign x__h17949 = x__h17961 + y__h17962 ;
  assign x__h17961 = x__h17973 + y__h17974 ;
  assign x__h17973 = x__h17985 + y__h17986 ;
  assign x__h17985 = x__h17997 + y__h17998 ;
  assign x__h17997 = x__h18009 + y__h18010 ;
  assign x__h18009 = x__h18021 + y__h18022 ;
  assign x__h18021 = x__h18033 + y__h18034 ;
  assign x__h18033 = x__h18045 + y__h18046 ;
  assign x__h18045 = x__h18057 + y__h18058 ;
  assign x__h18057 = x__h18069 + y__h18070 ;
  assign x__h18069 = x__h18081 + y__h18082 ;
  assign x__h18081 = x__h18093 + y__h18094 ;
  assign x__h18093 = x__h18105 + y__h18106 ;
  assign x__h18105 = { 6'd0, rs2_val_bypassed_capability__h7274[63] } ;
  assign x__h19611 =
	     64'hFFFFFFFFFFFFFFFF <<
	     _63_MINUS_IF_rs2_val_bypassed_capability274_BIT_ETC__q17[5:0] ;
  assign x__h28678 = ~x__h28679 ;
  assign x__h28679 = rs1_cap__h6403[63:0] | requested_top__h8035 ;
  assign x__h33007 =
	     rs1_cap403_BITS_63_TO_0_SRL_exp341__q19[19:0] << exp__h8341 ;
  assign x__h33131 = lower__h33126 >> rs1_cap__h6403[110:105] ;
  assign x__h33213 =
	     { rs2_val_bypassed_capability__h7274[95:84],
	       rs2_val_bypassed_capability__h7274[75:64] } ;
  assign x__h33301 =
	     rs1_cap__h6403[104] ?
	       { rs1_cap__h6403[103:96], 12'h0 } :
	       rs1_cap__h6403[103:84] ;
  assign x__h33372 = upper__h33127 >> rs1_cap__h6403[110:105] ;
  assign x__h33389 = lower__h33126 + 64'd1 ;
  assign x__h34706 =
	     upper__h34555 >> rs2_val_bypassed_capability__h7274[110:105] ;
  assign x__h34723 = rs2_val_bypassed_capability__h7274[63:0] + 64'd4 ;
  assign x__h35692 =
	     controller_capability__h35449[63:0] >>
	     controller_capability__h35449[110:105] ;
  assign x__h35767 =
	     controller_capability__h35449[104] ?
	       { controller_capability__h35449[103:96], 12'h0 } :
	       controller_capability__h35449[103:84] ;
  assign x__h35839 = upper__h35688 >> controller_capability__h35449[110:105] ;
  assign x__h35856 = controller_capability__h35449[63:0] + 64'd1 ;
  assign x__h36055 = upper__h35904 >> controller_capability__h35449[110:105] ;
  assign x__h36072 = controller_capability__h35449[63:0] + 64'd2 ;
  assign x__h36271 = upper__h36120 >> controller_capability__h35449[110:105] ;
  assign x__h36288 = controller_capability__h35449[63:0] + 64'd4 ;
  assign x__h36487 = upper__h36336 >> controller_capability__h35449[110:105] ;
  assign x__h36504 = controller_capability__h35449[63:0] + 64'd8 ;
  assign x__h40167 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1955 <<
	     i2__h40177 ;
  assign x__h40389 = x__h7472 << rs2_val_bypassed_capability__h7274[110:105] ;
  assign x__h40443 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1975 <<
	     i2__h40453 ;
  assign x__h40717 = x__h7472 + 20'd1 ;
  assign x__h41701 = rs1_cap__h6403[31:0] << near_mem$imem_instr[24:20] ;
  assign x__h41755 = rs1_cap__h6403[31:0] >> near_mem$imem_instr[24:20] ;
  assign x__h41976 =
	     rs1_cap__h6403[31:0] << rs2_val_bypassed_capability__h7274[4:0] ;
  assign x__h42021 =
	     rs1_cap__h6403[31:0] >> rs2_val_bypassed_capability__h7274[4:0] ;
  assign x__h43663 =
	     { near_mem$imem_instr[19:15], near_mem$imem_instr[11:7] } ;
  assign x__h45254 =
	     { !rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1226,
	       1'd1,
	       decoded_instr_rs2__h5316 == 5'b0 ||
	       decoded_instr_rs2__h5316 == 5'b00001 ||
	       (decoded_instr_rs2__h5316[4:2] == 3'b001 ||
		decoded_instr_rs2__h5316[4:2] == 3'b011 ||
		decoded_instr_rs2__h5316[4:2] == 3'b111) &&
	       decoded_instr_rs2__h5316[1:0] != 2'b01 } ;
  assign x__h52120 =
	     csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d2858[63:0] /
	     _theResult____h52119 ;
  assign x__h6450 = rs1_cap__h6403[63:0] >> rs1_cap__h6403[110:105] ;
  assign x__h6849 = upper__h6446 >> rs1_cap__h6403[110:105] ;
  assign x__h6866 = rs1_cap__h6403[63:0] + 64'd4 ;
  assign x__h7397 =
	     rs2_val_bypassed_capability__h7274[63:0] >>
	     rs2_val_bypassed_capability__h7274[110:105] ;
  assign x__h7472 =
	     rs2_val_bypassed_capability__h7274[104] ?
	       { rs2_val_bypassed_capability__h7274[103:96], 12'h0 } :
	       rs2_val_bypassed_capability__h7274[103:84] ;
  assign x__h7544 =
	     upper__h7393 >> rs2_val_bypassed_capability__h7274[110:105] ;
  assign x__h7561 = rs2_val_bypassed_capability__h7274[63:0] + 64'd1 ;
  assign x__h8073 = x__h33301 << rs1_cap__h6403[110:105] ;
  assign x__h8212 =
	     IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d567 <<
	     rs1_cap__h6403[110:105] ;
  assign x__h8357 =
	     rs1_cap403_BITS_63_TO_0_SRL_exp341__q19[19:0] + 20'd1 <<
	     exp__h8341 ;
  assign x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5 =
	     x_out_bypass_rd_val_capability__h4621[7:0] ;
  assign y__h17362 = { 6'd0, rs2_val_bypassed_capability__h7274[0] } ;
  assign y__h17374 = { 6'd0, rs2_val_bypassed_capability__h7274[1] } ;
  assign y__h17386 = { 6'd0, rs2_val_bypassed_capability__h7274[2] } ;
  assign y__h17398 = { 6'd0, rs2_val_bypassed_capability__h7274[3] } ;
  assign y__h17410 = { 6'd0, rs2_val_bypassed_capability__h7274[4] } ;
  assign y__h17422 = { 6'd0, rs2_val_bypassed_capability__h7274[5] } ;
  assign y__h17434 = { 6'd0, rs2_val_bypassed_capability__h7274[6] } ;
  assign y__h17446 = { 6'd0, rs2_val_bypassed_capability__h7274[7] } ;
  assign y__h17458 = { 6'd0, rs2_val_bypassed_capability__h7274[8] } ;
  assign y__h17470 = { 6'd0, rs2_val_bypassed_capability__h7274[9] } ;
  assign y__h17482 = { 6'd0, rs2_val_bypassed_capability__h7274[10] } ;
  assign y__h17494 = { 6'd0, rs2_val_bypassed_capability__h7274[11] } ;
  assign y__h17506 = { 6'd0, rs2_val_bypassed_capability__h7274[12] } ;
  assign y__h17518 = { 6'd0, rs2_val_bypassed_capability__h7274[13] } ;
  assign y__h17530 = { 6'd0, rs2_val_bypassed_capability__h7274[14] } ;
  assign y__h17542 = { 6'd0, rs2_val_bypassed_capability__h7274[15] } ;
  assign y__h17554 = { 6'd0, rs2_val_bypassed_capability__h7274[16] } ;
  assign y__h17566 = { 6'd0, rs2_val_bypassed_capability__h7274[17] } ;
  assign y__h17578 = { 6'd0, rs2_val_bypassed_capability__h7274[18] } ;
  assign y__h17590 = { 6'd0, rs2_val_bypassed_capability__h7274[19] } ;
  assign y__h17602 = { 6'd0, rs2_val_bypassed_capability__h7274[20] } ;
  assign y__h17614 = { 6'd0, rs2_val_bypassed_capability__h7274[21] } ;
  assign y__h17626 = { 6'd0, rs2_val_bypassed_capability__h7274[22] } ;
  assign y__h17638 = { 6'd0, rs2_val_bypassed_capability__h7274[23] } ;
  assign y__h17650 = { 6'd0, rs2_val_bypassed_capability__h7274[24] } ;
  assign y__h17662 = { 6'd0, rs2_val_bypassed_capability__h7274[25] } ;
  assign y__h17674 = { 6'd0, rs2_val_bypassed_capability__h7274[26] } ;
  assign y__h17686 = { 6'd0, rs2_val_bypassed_capability__h7274[27] } ;
  assign y__h17698 = { 6'd0, rs2_val_bypassed_capability__h7274[28] } ;
  assign y__h17710 = { 6'd0, rs2_val_bypassed_capability__h7274[29] } ;
  assign y__h17722 = { 6'd0, rs2_val_bypassed_capability__h7274[30] } ;
  assign y__h17734 = { 6'd0, rs2_val_bypassed_capability__h7274[31] } ;
  assign y__h17746 = { 6'd0, rs2_val_bypassed_capability__h7274[32] } ;
  assign y__h17758 = { 6'd0, rs2_val_bypassed_capability__h7274[33] } ;
  assign y__h17770 = { 6'd0, rs2_val_bypassed_capability__h7274[34] } ;
  assign y__h17782 = { 6'd0, rs2_val_bypassed_capability__h7274[35] } ;
  assign y__h17794 = { 6'd0, rs2_val_bypassed_capability__h7274[36] } ;
  assign y__h17806 = { 6'd0, rs2_val_bypassed_capability__h7274[37] } ;
  assign y__h17818 = { 6'd0, rs2_val_bypassed_capability__h7274[38] } ;
  assign y__h17830 = { 6'd0, rs2_val_bypassed_capability__h7274[39] } ;
  assign y__h17842 = { 6'd0, rs2_val_bypassed_capability__h7274[40] } ;
  assign y__h17854 = { 6'd0, rs2_val_bypassed_capability__h7274[41] } ;
  assign y__h17866 = { 6'd0, rs2_val_bypassed_capability__h7274[42] } ;
  assign y__h17878 = { 6'd0, rs2_val_bypassed_capability__h7274[43] } ;
  assign y__h17890 = { 6'd0, rs2_val_bypassed_capability__h7274[44] } ;
  assign y__h17902 = { 6'd0, rs2_val_bypassed_capability__h7274[45] } ;
  assign y__h17914 = { 6'd0, rs2_val_bypassed_capability__h7274[46] } ;
  assign y__h17926 = { 6'd0, rs2_val_bypassed_capability__h7274[47] } ;
  assign y__h17938 = { 6'd0, rs2_val_bypassed_capability__h7274[48] } ;
  assign y__h17950 = { 6'd0, rs2_val_bypassed_capability__h7274[49] } ;
  assign y__h17962 = { 6'd0, rs2_val_bypassed_capability__h7274[50] } ;
  assign y__h17974 = { 6'd0, rs2_val_bypassed_capability__h7274[51] } ;
  assign y__h17986 = { 6'd0, rs2_val_bypassed_capability__h7274[52] } ;
  assign y__h17998 = { 6'd0, rs2_val_bypassed_capability__h7274[53] } ;
  assign y__h18010 = { 6'd0, rs2_val_bypassed_capability__h7274[54] } ;
  assign y__h18022 = { 6'd0, rs2_val_bypassed_capability__h7274[55] } ;
  assign y__h18034 = { 6'd0, rs2_val_bypassed_capability__h7274[56] } ;
  assign y__h18046 = { 6'd0, rs2_val_bypassed_capability__h7274[57] } ;
  assign y__h18058 = { 6'd0, rs2_val_bypassed_capability__h7274[58] } ;
  assign y__h18070 = { 6'd0, rs2_val_bypassed_capability__h7274[59] } ;
  assign y__h18082 = { 6'd0, rs2_val_bypassed_capability__h7274[60] } ;
  assign y__h18094 = { 6'd0, rs2_val_bypassed_capability__h7274[61] } ;
  assign y__h18106 = { 6'd0, rs2_val_bypassed_capability__h7274[62] } ;
  assign y__h19610 = ~x__h19611 ;
  assign y__h40079 = ~rs1_cap__h6403[127:113] ;
  assign y__h45753 = ~rs1_val__h6356 ;
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011,
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0110011,
      7'b0110111,
      7'b0111011,
      7'b1100111,
      7'b1101111:
	  fv_out_data_to_stage2_rd__h5766 = near_mem$imem_instr[11:7];
      7'b1100011: fv_out_data_to_stage2_rd__h5766 = 5'd0;
      default: fv_out_data_to_stage2_rd__h5766 = near_mem$imem_instr[11:7];
    endcase
  end
  always@(stage2_rg_stage2)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd1: x_out_data_to_stage3_rd__h4794 = stage2_rg_stage2[393:389];
      3'd3: x_out_data_to_stage3_rd__h4794 = 5'd0;
      default: x_out_data_to_stage3_rd__h4794 = 5'd0;
    endcase
  end
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0, 3'b001, 3'b100, 3'b101, 3'b110, 3'b111:
	  alu_outputs___1_exc_code__h5858 = 5'd0;
      default: alu_outputs___1_exc_code__h5858 = 5'd2;
    endcase
  end
  always@(stage2_rg_stage2 or output_stage2___1_bypass_rd_val_tag__h4612)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3: x_out_bypass_rd_val_tag__h4620 = stage2_rg_stage2[257];
      default: x_out_bypass_rd_val_tag__h4620 =
		   output_stage2___1_bypass_rd_val_tag__h4612;
    endcase
  end
  always@(stage2_rg_stage2 or
	  output_stage2___1_bypass_rd_val_capability__h4613)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  x_out_bypass_rd_val_capability__h4621 = stage2_rg_stage2[256:129];
      default: x_out_bypass_rd_val_capability__h4621 =
		   output_stage2___1_bypass_rd_val_capability__h4613;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  csr_regfile$read_csr_cap or pcc_capability__h34048 or stage1_rg_ddc)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0: ccsr_val_capability__h39994 = pcc_capability__h34048;
      5'b00001: ccsr_val_capability__h39994 = stage1_rg_ddc[127:0];
      default: ccsr_val_capability__h39994 = csr_regfile$read_csr_cap[127:0];
    endcase
  end
  always@(stage2_rg_stage2 or
	  IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd2;
      3'd1:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 =
	      IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108;
      3'd3: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd3;
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd0;
    endcase
  end
  always@(stage2_rg_stage2 or near_mem$dmem_valid or near_mem$dmem_exc)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 = 2'd2;
      default: IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 =
		   near_mem$dmem_valid ?
		     (near_mem$dmem_exc ? 2'd3 : 2'd2) :
		     2'd1;
    endcase
  end
  always@(stage2_rg_stage2 or near_mem$dmem_word64)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 =
	      stage2_rg_stage2[256:129];
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 =
		   { 64'd0, near_mem$dmem_word64 };
    endcase
  end
  always@(near_mem$imem_instr or
	  controller_capability__h35449 or
	  alu_outputs___2_addr_capability__h38825 or
	  new_pcc_capability__h34176 or
	  alu_outputs___1_addr_capability__h38804)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  alu_outputs___1_addr_capability__h38848 =
	      alu_outputs___2_addr_capability__h38825;
      7'b1111110:
	  alu_outputs___1_addr_capability__h38848 =
	      new_pcc_capability__h34176;
      7'b1111111:
	  alu_outputs___1_addr_capability__h38848 =
	      alu_outputs___1_addr_capability__h38804;
      default: alu_outputs___1_addr_capability__h38848 =
		   controller_capability__h35449;
    endcase
  end
  always@(near_mem$imem_instr or
	  csr_regfile$read_csr or
	  rs1_val__h6356 or csr_val__h39684 or csr_val__h39689)
  begin
    case (near_mem$imem_instr[13:12])
      2'd0: csr_val__h6361 = csr_regfile$read_csr[63:0];
      2'b01: csr_val__h6361 = rs1_val__h6356;
      2'd2: csr_val__h6361 = csr_val__h39684;
      2'd3: csr_val__h6361 = csr_val__h39689;
    endcase
  end
  always@(funct10__h6030 or
	  _theResult___snd__h37693 or
	  rd_val___1__h41879 or
	  rd_val___1__h41973 or rd_val___1__h42018 or rd_val___1__h41967)
  begin
    case (funct10__h6030)
      10'b0: new_addr__h39855 = rd_val___1__h41879;
      10'b0000000001: new_addr__h39855 = rd_val___1__h41973;
      10'b0000000101: new_addr__h39855 = rd_val___1__h42018;
      10'b0100000000: new_addr__h39855 = rd_val___1__h41967;
      default: new_addr__h39855 = _theResult___snd__h37693;
    endcase
  end
  always@(stage2_rg_stage2)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 =
	      !stage2_rg_stage2[257];
      default: IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 =
		   stage2_rg_stage2[393:389] != 5'd0 ||
		   !stage2_rg_stage2[257];
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1303 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1183 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1202)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1306 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1183;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1306 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1202;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1306 =
		   near_mem$imem_instr[31:25] != 7'b0010010 &&
		   near_mem$imem_instr[31:25] != 7'b0010011 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1303;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1306 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1164 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d532 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d546 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d554 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1164;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d532;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d546;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      rs1_cap__h6403[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314 =
	      rs1_cap__h6403[104] && near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d554;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314 =
	      decoded_instr_rs2__h5316 != 5'b0 &&
	      decoded_instr_rs2__h5316 != 5'b00001 &&
	      decoded_instr_rs2__h5316 != 5'b00010 &&
	      decoded_instr_rs2__h5316 != 5'b00011 &&
	      decoded_instr_rs2__h5316 != 5'b00100 &&
	      decoded_instr_rs2__h5316 != 5'b00101 &&
	      decoded_instr_rs2__h5316 != 5'b00110 &&
	      decoded_instr_rs2__h5316 != 5'b01111 &&
	      decoded_instr_rs2__h5316 != 5'b01011 &&
	      decoded_instr_rs2__h5316 != 5'b01010 &&
	      decoded_instr_rs2__h5316 != 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1314 =
		   near_mem$imem_instr[31:25] != 7'b0011101 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1306;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b100:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b101:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b110:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
		   near_mem$imem_instr[14:12] == 3'b111 &&
		   !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_addr_capability__h38848 or
	  alu_outputs___1_addr_capability__h38766 or
	  alu_outputs_addr_capability__h38769 or
	  alu_outputs_addr_capability__h38749 or
	  alu_outputs_addr_capability__h38757 or
	  alu_outputs_addr_capability__h38753 or
	  alu_outputs___1_addr_capability__h38780)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011:
	  alu_outputs_addr_capability__h38863 =
	      alu_outputs___1_addr_capability__h38766;
      7'b0100011:
	  alu_outputs_addr_capability__h38863 =
	      alu_outputs_addr_capability__h38769;
      7'b1100011:
	  alu_outputs_addr_capability__h38863 =
	      alu_outputs_addr_capability__h38749;
      7'b1100111:
	  alu_outputs_addr_capability__h38863 =
	      alu_outputs_addr_capability__h38757;
      7'b1101111:
	  alu_outputs_addr_capability__h38863 =
	      alu_outputs_addr_capability__h38753;
      7'b1110011:
	  alu_outputs_addr_capability__h38863 =
	      alu_outputs___1_addr_capability__h38780;
      default: alu_outputs_addr_capability__h38863 =
		   alu_outputs___1_addr_capability__h38848;
    endcase
  end
  always@(near_mem$imem_instr or
	  _theResult_____1_snd__h37504 or
	  rd_val___1__h37471 or
	  rd_val___1__h37478 or rd_val___1__h37485 or rd_val___1__h37492)
  begin
    case (near_mem$imem_instr[14:12])
      3'b010: _theResult_____1_snd__h37476 = rd_val___1__h37471;
      3'b011: _theResult_____1_snd__h37476 = rd_val___1__h37478;
      3'b100: _theResult_____1_snd__h37476 = rd_val___1__h37485;
      3'b110: _theResult_____1_snd__h37476 = rd_val___1__h37492;
      default: _theResult_____1_snd__h37476 = _theResult_____1_snd__h37504;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b100:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b101:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b110:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 =
		   near_mem$imem_instr[14:12] != 3'b111 ||
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
    endcase
  end
  always@(near_mem$imem_instr or
	  near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1317 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1324 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1324 =
	      near_mem$imem_instr[14:12] != 3'b0 &&
	      (near_mem$imem_instr[14:12] != 3'b001 ||
	       near_mem$imem_instr[25]) &&
	      (near_mem$imem_instr[14:12] != 3'b101 ||
	       near_mem$imem_instr[25]);
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1324 =
	      funct10__h6030 != 10'b0 && funct10__h6030 != 10'b0100000000 &&
	      funct10__h6030 != 10'b0000000001 &&
	      funct10__h6030 != 10'b0000000101 &&
	      funct10__h6030 != 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1324 =
		   near_mem$imem_instr[6:0] != 7'b0110111 &&
		   near_mem$imem_instr[6:0] != 7'b0010111 &&
		   near_mem$imem_instr[6:0] != 7'b0000011 &&
		   near_mem$imem_instr[6:0] != 7'b0100011 &&
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] == 3'b0 ||
		      near_mem$imem_instr[14:12] == 3'b100 ||
		      near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 :
		      near_mem$imem_instr[6:0] != 7'b1011011 ||
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1317);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1374 or
	  b_capability__h6722 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1339 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345 or
	  new_offset__h39876 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1339 ||
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1345;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385 =
	      new_offset__h39876[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385 =
	      near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1385 =
		   near_mem$imem_instr[6:0] != 7'b1011011 ||
		   near_mem$imem_instr[14:12] != 3'b0 ||
		   near_mem$imem_instr[31:25] != 7'b1111111 ||
		   decoded_instr_rs2__h5316 != 5'b01100 ||
		   NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1374 ||
		   b_capability__h6722[1:0] != 2'b0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1531 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1481 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1484)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1534 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1481;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1534 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1484;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1534 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1531;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1534 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1478 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1469 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1478;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_cap__h6403[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 =
	      !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 =
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1469;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 =
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      decoded_instr_rs2__h5316 == 5'b00010 ||
	      decoded_instr_rs2__h5316 == 5'b00011 ||
	      decoded_instr_rs2__h5316 == 5'b00100 ||
	      decoded_instr_rs2__h5316 == 5'b00101 ||
	      decoded_instr_rs2__h5316 == 5'b00110 ||
	      decoded_instr_rs2__h5316 == 5'b01111 ||
	      decoded_instr_rs2__h5316 == 5'b01011 ||
	      decoded_instr_rs2__h5316 == 5'b01010 ||
	      decoded_instr_rs2__h5316 == 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1542 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1534;
    endcase
  end
  always@(near_mem$imem_instr or
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1441 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1545 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1420 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1552 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1420;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1552 =
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101) &&
	      !near_mem$imem_instr[25];
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1552 =
	      funct10__h6030 == 10'b0 || funct10__h6030 == 10'b0100000000 ||
	      funct10__h6030 == 10'b0000000001 ||
	      funct10__h6030 == 10'b0000000101 ||
	      funct10__h6030 == 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1552 =
		   near_mem$imem_instr[6:0] == 7'b0110111 ||
		   near_mem$imem_instr[6:0] == 7'b0010111 ||
		   near_mem$imem_instr[6:0] == 7'b0000011 ||
		   near_mem$imem_instr[6:0] == 7'b0100011 ||
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] != 3'b0 &&
		      near_mem$imem_instr[14:12] != 3'b100 &&
		      NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1441 :
		      near_mem$imem_instr[6:0] == 7'b1011011 &&
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1545);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566 or
	  b_capability__h6722 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1559 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h39876 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1559 &&
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574 =
	      !new_offset__h39876[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574 =
	      !near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1574 =
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   near_mem$imem_instr[31:25] == 7'b1111111 &&
		   decoded_instr_rs2__h5316 == 5'b01100 &&
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566 &&
		   b_capability__h6722[1:0] == 2'b0;
    endcase
  end
  always@(rg_cur_priv)
  begin
    case (rg_cur_priv)
      2'b0: CASE_rg_cur_priv_0b0_8_0b1_9_11__q23 = 5'd8;
      2'b01: CASE_rg_cur_priv_0b0_8_0b1_9_11__q23 = 5'd9;
      default: CASE_rg_cur_priv_0b0_8_0b1_9_11__q23 = 5'd11;
    endcase
  end
  always@(near_mem$imem_instr or CASE_rg_cur_priv_0b0_8_0b1_9_11__q23)
  begin
    case (near_mem$imem_instr[31:20])
      12'b0:
	  CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q24 =
	      CASE_rg_cur_priv_0b0_8_0b1_9_11__q23;
      12'b000000000001:
	  CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q24 = 5'd3;
      default: CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q24 = 5'd2;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566 or
	  b_capability__h6722)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01101,
      5'b01111:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q25 = 4'd0;
      5'b01100:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q25 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566 ?
		((b_capability__h6722[1:0] == 2'b0) ? 4'd1 : 4'd9) :
		4'd9;
      default: CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q25 = 4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294 or
	  decoded_instr_rs2__h5316 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1642 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1633 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d554 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1636 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1641 or
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q25)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294 ?
		4'd9 :
		((!decoded_instr_rs2__h5316[3] ||
		  decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		  !decoded_instr_rs2__h5316[2] ||
		  decoded_instr_rs2__h5316[1:0] == 2'b0) ?
		   4'd0 :
		   4'd9);
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1642;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1633;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462 ?
		4'd0 :
		4'd9;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466 ?
		4'd0 :
		4'd9;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	       rs1_cap__h6403[104]) ?
		4'd9 :
		4'd0;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      (rs1_cap__h6403[104] && near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446) ?
		4'd9 :
		4'd0;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d554 ?
		4'd9 :
		4'd0;
      7'b0010010, 7'b0010011, 7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 = 4'd0;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1636;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1641;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 = 4'd9;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
	      CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q25;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  rg_cur_priv or
	  IF_rg_cur_priv_9_EQ_0b11_589_OR_rg_cur_priv_9__ETC___d1615)
  begin
    case (near_mem$imem_instr[31:20])
      12'b0, 12'b000000000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1617 = 4'd9;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1617 =
		   (rg_cur_priv == 2'b11 &&
		    near_mem$imem_instr[31:20] == 12'b001100000010) ?
		     4'd5 :
		     IF_rg_cur_priv_9_EQ_0b11_589_OR_rg_cur_priv_9__ETC___d1615;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_cap__h6403)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1661 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1658;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1661 =
	      (near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	       rs1_cap__h6403[104]) ?
		4'd9 :
		4'd0;
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1661 = 4'd0;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1661 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q26 = 4'd2;
      3'b001: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q26 = 4'd3;
      default: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q26 = 4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q26 or
	  IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1583 or
	  funct10__h6030 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1661 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1621)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011, 7'b0010111, 7'b0100011, 7'b0110111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 = 4'd0;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 =
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q26;
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 =
	      IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1583;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 =
	      (near_mem$imem_instr[14:12] != 3'b0 &&
	       (near_mem$imem_instr[14:12] != 3'b001 ||
		near_mem$imem_instr[25]) &&
	       (near_mem$imem_instr[14:12] != 3'b101 ||
		near_mem$imem_instr[25])) ?
		4'd9 :
		4'd0;
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 =
	      (funct10__h6030 != 10'b0 && funct10__h6030 != 10'b0100000000 &&
	       funct10__h6030 != 10'b0000000001 &&
	       funct10__h6030 != 10'b0000000101 &&
	       funct10__h6030 != 10'b0100000101) ?
		4'd9 :
		4'd0;
      7'b1011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 =
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1661;
      7'b1110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 =
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1621;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1339 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h39876 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1672 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1339 ?
		4'd9 :
		(IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 ?
		   4'd1 :
		   4'd0);
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1672 =
	      new_offset__h39876[1] ? 4'd9 : 4'd1;
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1672 =
	      near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353[1] ?
		4'd9 :
		4'd1;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1672 =
		   ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		     near_mem$imem_instr[6:0] == 7'b0110011) &&
		    (near_mem$imem_instr[14:12] == 3'b001 ||
		     near_mem$imem_instr[14:12] == 3'b101)) ?
		     4'd0 :
		     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1668;
    endcase
  end
  always@(decoded_instr_rs2__h5316)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01100,
      5'b01111:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q27 = 3'd0;
      5'b01101:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q27 = 3'd3;
      default: CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q27 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294 or
	  decoded_instr_rs2__h5316 or
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q27)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1766 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294 ?
		3'd0 :
		((!decoded_instr_rs2__h5316[3] ||
		  decoded_instr_rs2__h5316[2:0] == 3'b101) ?
		   3'd1 :
		   ((!decoded_instr_rs2__h5316[2] ||
		     decoded_instr_rs2__h5316[1:0] == 2'b0) ?
		      3'd2 :
		      3'd0));
      7'b0000001,
      7'b0001000,
      7'b0001001,
      7'b0001011,
      7'b0001100,
      7'b0001101,
      7'b0001111,
      7'b0010001,
      7'b0010010,
      7'b0010011,
      7'b0011101,
      7'b0011110,
      7'b0011111,
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1766 = 3'd0;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1766 =
	      CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q27;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1766 =
		   3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1766)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q28 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1766;
      3'b001, 3'b010:
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q28 = 3'd0;
      default: CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q28 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q28)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 = 3'd1;
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0110011,
      7'b0110111,
      7'b0111011,
      7'b1100011,
      7'b1100111,
      7'b1101111,
      7'b1110011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 = 3'd0;
      7'b0100011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 = 3'd2;
      default: IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1775 =
		   CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q28;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  alu_outputs___1_val1_capability__h39906 or
	  rs1_cap__h6403 or
	  newVal__h6410 or
	  result0435_PLUS_b_val0436__q29 or
	  newVal__h6416 or
	  near_mem$imem_instr or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  newVal__h6425 or alu_outputs___1_val1_capability__h39838)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0:
	  alu_outputs___1_val1_capability__h39919 =
	      { 113'd0, rs1_cap__h6403[127:113] };
      5'b00001:
	  alu_outputs___1_val1_capability__h39919 = { 64'd0, newVal__h6410 };
      5'b00010:
	  alu_outputs___1_val1_capability__h39919 =
	      { 64'd0, result0435_PLUS_b_val0436__q29[63:0] };
      5'b00011:
	  alu_outputs___1_val1_capability__h39919 = { 64'd0, newVal__h6416 };
      5'b00100:
	  alu_outputs___1_val1_capability__h39919 =
	      { 127'd0,
		near_mem$imem_instr[19:15] != 5'd0 &&
		IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 };
      5'b00101:
	  alu_outputs___1_val1_capability__h39919 =
	      { 127'd0, rs1_cap__h6403[104] };
      5'b00110:
	  alu_outputs___1_val1_capability__h39919 = { 64'd0, newVal__h6425 };
      5'b01010, 5'b01011:
	  alu_outputs___1_val1_capability__h39919 = rs1_cap__h6403;
      5'b01100:
	  alu_outputs___1_val1_capability__h39919 =
	      alu_outputs___1_val1_capability__h39838;
      5'b01111:
	  alu_outputs___1_val1_capability__h39919 =
	      { 64'd0, rs1_cap__h6403[63:0] };
      default: alu_outputs___1_val1_capability__h39919 =
		   alu_outputs___1_val1_capability__h39906;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2006 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs2_val_bypassed_capability__h7274 or
	  y__h40079 or
	  NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1992)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001, 7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2013 =
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0001111, 7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2013 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2013 =
	      (rs2_val_bypassed_capability__h7274[127:113] & y__h40079) !=
	      15'd0 &&
	      NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1992;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2013 =
	      rs2_val_bypassed_capability__h7274[104] &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2013 =
		   near_mem$imem_instr[31:25] != 7'b0010010 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2006;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2013 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  alu_outputs___1_val1_tag__h39918)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001011, 7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2017 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2017 =
	      alu_outputs___1_val1_tag__h39918;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2017 =
		   near_mem$imem_instr[31:25] == 7'b0001101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2013;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2186 or
	  _theResult___snd_capability__h39943 or
	  b_capability__h6722 or
	  rs1_cap__h6403 or
	  b_capability__h7272 or
	  global__h39926 or
	  newcap__h7852 or
	  new_curs__h7886 or
	  requested_top__h8035 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  new_addr__h39961 or
	  rs2_val_bypassed_capability__h7274 or
	  x__h7472 or
	  ct_T__h33049 or
	  out_val_capability__h33165 or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2173 or
	  alu_outputs___1_val1_capability__h39919)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      _theResult___snd_capability__h39943;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      { b_capability__h6722[127:105],
		1'b1,
		rs1_cap__h6403[103:84],
		b_capability__h7272[19:0],
		rs1_cap__h6403[63:0] };
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      { b_capability__h6722[127:114],
		global__h39926,
		b_capability__h6722[112:105],
		1'b0,
		b_capability__h6722[103:0] };
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      newcap__h7852;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      { rs1_cap__h6403[127:64], new_curs__h7886 };
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      { rs1_cap__h6403[127:64], requested_top__h8035 };
      7'b0010010:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
		128'd0 :
		{ 64'd0, new_addr__h39961 };
      7'b0010011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      (rs2_val_bypassed_capability__h7274[63:0] == 64'b0) ?
		128'h00001FFFFC0180040000000000000000 :
		{ rs1_cap__h6403[127:64],
		  rs2_val_bypassed_capability__h7274[63:0] };
      7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      { rs2_val_bypassed_capability__h7274[127:113],
		2'b0,
		rs2_val_bypassed_capability__h7274[110:105],
		1'b0,
		x__h7472,
		ct_T__h33049,
		rs2_val_bypassed_capability__h7274[63:0] };
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      rs2_val_bypassed_capability__h7274[104] ?
		out_val_capability__h33165 :
		128'h0000000000000000FFFFFFFFFFFFFFFF;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2173;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
	      alu_outputs___1_val1_capability__h39919;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2199 =
		   IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2186;
    endcase
  end
  always@(near_mem$imem_instr or
	  rs1_cap__h6403 or
	  rs2_val_bypassed_capability__h7274 or
	  alu_outputs___1_val2_capability__h45298 or
	  alu_outputs___1_val2_capability__h45314)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0100011:
	  alu_outputs_val2_capability__h45381 =
	      rs2_val_bypassed_capability__h7274;
      7'b1100011:
	  alu_outputs_val2_capability__h45381 =
	      alu_outputs___1_val2_capability__h45298;
      7'b1110011:
	  alu_outputs_val2_capability__h45381 =
	      alu_outputs___1_val2_capability__h45314;
      default: alu_outputs_val2_capability__h45381 = rs1_cap__h6403;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2423 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2437)
  begin
    case (near_mem$imem_instr[24:20])
      5'h0:
	  check__h34127 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2423;
      5'h01:
	  check__h34127 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2437;
      5'h1F: check__h34127 = 5'd25;
      default: check__h34127 = 5'd2;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566 or
	  check__h6436)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01111:
	  alu_outputs___1_exc_code__h6983 = 5'd2;
      5'b01100:
	  alu_outputs___1_exc_code__h6983 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1566 ?
		5'd0 :
		check__h6436;
      default: alu_outputs___1_exc_code__h6983 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2423 or
	  rs2_val_bypassed_capability__h7274 or check__h34127)
  begin
    case (near_mem$imem_instr[24:20])
      5'h0:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2442 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2423;
      5'h01:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2442 =
	      (rs2_val_bypassed_capability__h7274[1:0] == 2'b0) ?
		check__h34127 :
		5'd0;
      5'h1F:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2442 = 5'd25;
      default: IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2442 =
		   5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294 or
	  check__h35421 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2403 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2395 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462 or
	  check__h6993 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466 or
	  check__h7610 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2385 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d554 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2399 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2401 or
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2442 or
	  alu_outputs___1_exc_code__h6983)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1294 ?
		check__h35421 :
		5'd2;
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2403;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2395;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462 ?
		5'd2 :
		check__h6993;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466 ?
		5'd2 :
		check__h7610;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2385;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      (rs1_cap__h6403[104] && near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446) ?
		5'd21 :
		5'd2;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d554 ?
		5'd21 :
		5'd2;
      7'b0010010, 7'b0010011, 7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 = 5'd2;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2399;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2401;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2442;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
	      alu_outputs___1_exc_code__h6983;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 =
		   5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462 or
	  _theResult___exc_code__h37986)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  alu_outputs___1_exc_code__h36686 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2462;
      3'b001:
	  alu_outputs___1_exc_code__h36686 = _theResult___exc_code__h37986;
      3'b010: alu_outputs___1_exc_code__h36686 = 5'd2;
      default: alu_outputs___1_exc_code__h36686 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_exc_code__h36686 or
	  alu_outputs___1_exc_code__h5858 or alu_outputs___1_exc_code__h6371)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011,
      7'b0001111,
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0100011,
      7'b0110011,
      7'b0110111,
      7'b0111011:
	  alu_outputs_exc_code__h36710 = 5'd2;
      7'b1011011:
	  alu_outputs_exc_code__h36710 = alu_outputs___1_exc_code__h36686;
      7'b1100011:
	  alu_outputs_exc_code__h36710 = alu_outputs___1_exc_code__h5858;
      7'b1100111, 7'b1101111: alu_outputs_exc_code__h36710 = 5'd0;
      7'b1110011:
	  alu_outputs_exc_code__h36710 = alu_outputs___1_exc_code__h6371;
      default: alu_outputs_exc_code__h36710 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1525 or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1499 or
	  controller_capability__h35449 or
	  decoded_instr_rs2__h5316 or
	  rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1226)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2504 =
	      decoded_instr_rs2__h5316 != 5'b0 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1226;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2504 =
	      near_mem$imem_instr[24:20] != 5'h01 &&
	      near_mem$imem_instr[24:20] != 5'h1F &&
	      near_mem$imem_instr[24:20] != 5'h0;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2504 =
		   near_mem$imem_instr[31:25] != 7'b0 ||
		   IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1525 ||
		   IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1499 &&
		   !controller_capability__h35449[104] &&
		   decoded_instr_rs2__h5316[3:2] == 2'b11;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2504 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2490 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1484)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2507 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2490;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2507 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1484;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2507 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2504;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2507 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_cap__h6403 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2487 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1469 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_cap__h6403[104] &&
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2487;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1462;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1466;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_cap__h6403[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 =
	      !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 =
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1469;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 =
	      decoded_instr_rs2__h5316 != 5'b01100;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2515 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2507;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2621 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2607 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2615)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2624 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2607;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2624 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2615;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2624 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2621;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2624 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2606 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2601 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2602 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2587 or
	  rs2_val_bypassed_capability__h7274 or decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2606;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2601;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2602;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2593 &&
	      !rs1_cap__h6403[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 =
	      !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2587;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 =
	      !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2587 ||
	      rs2_val_bypassed_capability__h7274[63:0] == 64'b0;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 =
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      decoded_instr_rs2__h5316 == 5'b00010 ||
	      decoded_instr_rs2__h5316 == 5'b00011 ||
	      decoded_instr_rs2__h5316 == 5'b00100 ||
	      decoded_instr_rs2__h5316 == 5'b00101 ||
	      decoded_instr_rs2__h5316 == 5'b00110 ||
	      decoded_instr_rs2__h5316 == 5'b01111 ||
	      decoded_instr_rs2__h5316 == 5'b01011 ||
	      decoded_instr_rs2__h5316 == 5'b01010 ||
	      decoded_instr_rs2__h5316 == 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2632 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2624;
    endcase
  end
  always@(near_mem$imem_instr or
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1441 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2635 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1420 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2642 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1420;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2642 =
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101) &&
	      !near_mem$imem_instr[25];
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2642 =
	      funct10__h6030 == 10'b0 || funct10__h6030 == 10'b0100000000 ||
	      funct10__h6030 == 10'b0000000001 ||
	      funct10__h6030 == 10'b0000000101 ||
	      funct10__h6030 == 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2642 =
		   near_mem$imem_instr[6:0] == 7'b0110111 ||
		   near_mem$imem_instr[6:0] == 7'b0010111 ||
		   near_mem$imem_instr[6:0] == 7'b0000011 ||
		   near_mem$imem_instr[6:0] == 7'b0100011 ||
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] != 3'b0 &&
		      near_mem$imem_instr[14:12] != 3'b100 &&
		      NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1441 :
		      near_mem$imem_instr[6:0] == 7'b1011011 &&
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2635);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2649 or
	  b_capability__h6722 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1559 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h39876 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2657 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1559 &&
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2657 =
	      !new_offset__h39876[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2657 =
	      !near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1353[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2657 =
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   near_mem$imem_instr[31:25] == 7'b1111111 &&
		   decoded_instr_rs2__h5316 == 5'b01100 &&
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2649 &&
		   b_capability__h6722[1:0] == 2'b0;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_val1_capability__h40018 or
	  alu_outputs___1_val1_capability__h39850 or
	  alu_outputs___1_val1_capability__h39864 or
	  alu_outputs___1_val1_capability__h39854 or
	  alu_outputs___1_val1_capability__h39861 or
	  alu_outputs___1_val1_capability__h39858 or
	  alu_outputs___1_val1_capability__h39874)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210 =
	      alu_outputs___1_val1_capability__h39850;
      7'b0010111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210 =
	      alu_outputs___1_val1_capability__h39864;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210 =
	      alu_outputs___1_val1_capability__h39854;
      7'b0110111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210 =
	      alu_outputs___1_val1_capability__h39861;
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210 =
	      alu_outputs___1_val1_capability__h39858;
      7'b1110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210 =
	      alu_outputs___1_val1_capability__h39874;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2210 =
		   alu_outputs___1_val1_capability__h40018;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2211 or
	  alu_outputs___1_val1_capability__h39838)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100111, 7'b1101111:
	  CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q34 =
	      alu_outputs___1_val1_capability__h39838;
      default: CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q34 =
		   IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2211;
    endcase
  end
  always@(stage2_rg_stage2 or
	  output_stage2___1_bypass_rd_val_tag__h4612 or
	  output_stage2___1_bypass_rd_val_capability__h4613)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q35 =
	      stage2_rg_stage2[257:129];
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q35 =
		   { output_stage2___1_bypass_rd_val_tag__h4612,
		     output_stage2___1_bypass_rd_val_capability__h4613 };
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_logdelay <= `BSV_ASSIGNMENT_DELAY 64'd0;
	cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_halt <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_state <= `BSV_ASSIGNMENT_DELAY 3'd0;
	stage1_rg_ddc <= `BSV_ASSIGNMENT_DELAY
	    129'h1FFFE7E00000111110000000000000000;
	stage1_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage1_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
	stage2_rg_f5 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	stage2_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage2_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
	stage3_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage3_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
      end
    else
      begin
        if (cfg_logdelay$EN)
	  cfg_logdelay <= `BSV_ASSIGNMENT_DELAY cfg_logdelay$D_IN;
	if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (rg_halt$EN) rg_halt <= `BSV_ASSIGNMENT_DELAY rg_halt$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
	if (stage1_rg_ddc$EN)
	  stage1_rg_ddc <= `BSV_ASSIGNMENT_DELAY stage1_rg_ddc$D_IN;
	if (stage1_rg_full$EN)
	  stage1_rg_full <= `BSV_ASSIGNMENT_DELAY stage1_rg_full$D_IN;
	if (stage1_rg_run_state$EN)
	  stage1_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage1_rg_run_state$D_IN;
	if (stage2_rg_f5$EN)
	  stage2_rg_f5 <= `BSV_ASSIGNMENT_DELAY stage2_rg_f5$D_IN;
	if (stage2_rg_full$EN)
	  stage2_rg_full <= `BSV_ASSIGNMENT_DELAY stage2_rg_full$D_IN;
	if (stage2_rg_run_state$EN)
	  stage2_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage2_rg_run_state$D_IN;
	if (stage3_rg_full$EN)
	  stage3_rg_full <= `BSV_ASSIGNMENT_DELAY stage3_rg_full$D_IN;
	if (stage3_rg_run_state$EN)
	  stage3_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage3_rg_run_state$D_IN;
      end
    if (rg_cur_priv$EN) rg_cur_priv <= `BSV_ASSIGNMENT_DELAY rg_cur_priv$D_IN;
    if (rg_inum$EN) rg_inum <= `BSV_ASSIGNMENT_DELAY rg_inum$D_IN;
    if (rg_start_CPI_cycles$EN)
      rg_start_CPI_cycles <= `BSV_ASSIGNMENT_DELAY rg_start_CPI_cycles$D_IN;
    if (rg_start_CPI_instrs$EN)
      rg_start_CPI_instrs <= `BSV_ASSIGNMENT_DELAY rg_start_CPI_instrs$D_IN;
    if (stage2_rg_stage2$EN)
      stage2_rg_stage2 <= `BSV_ASSIGNMENT_DELAY stage2_rg_stage2$D_IN;
    if (stage3_rg_stage3$EN)
      stage3_rg_stage3 <= `BSV_ASSIGNMENT_DELAY stage3_rg_stage3$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_logdelay = 64'hAAAAAAAAAAAAAAAA;
    cfg_verbosity = 4'hA;
    rg_cur_priv = 2'h2;
    rg_halt = 1'h0;
    rg_inum = 64'hAAAAAAAAAAAAAAAA;
    rg_start_CPI_cycles = 64'hAAAAAAAAAAAAAAAA;
    rg_start_CPI_instrs = 64'hAAAAAAAAAAAAAAAA;
    rg_state = 3'h2;
    stage1_rg_ddc = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage1_rg_full = 1'h0;
    stage1_rg_run_state = 1'h0;
    stage2_rg_f5 = 5'h0A;
    stage2_rg_full = 1'h0;
    stage2_rg_run_state = 1'h0;
    stage2_rg_stage2 =
	647'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage3_rg_full = 1'h0;
    stage3_rg_run_state = 1'h0;
    stage3_rg_stage3 =
	375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("================================================================");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("%0d: Pipeline State:  inum:%0d  cur_priv:%0d  mstatus:%0x",
		 csr_regfile$read_csr_mcycle,
		 rg_inum,
		 rg_cur_priv,
		 csr_regfile$read_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write("MStatus{",
	       "sd:%0d",
	       csr_regfile$read_mstatus[16:15] == 2'h3 ||
	       csr_regfile$read_mstatus[14:13] == 2'h3);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" sxl:%0d", ms_sxl__h3157);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" uxl:%0d", ms_uxl__h3158);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tsr:%0d", csr_regfile$read_mstatus[22]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tw:%0d", csr_regfile$read_mstatus[21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tvm:%0d", csr_regfile$read_mstatus[20]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mxr:%0d", csr_regfile$read_mstatus[19]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" sum:%0d", csr_regfile$read_mstatus[18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mprv:%0d", csr_regfile$read_mstatus[17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" xs:%0d", csr_regfile$read_mstatus[16:15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" fs:%0d", csr_regfile$read_mstatus[14:13]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mpp:%0d", csr_regfile$read_mstatus[12:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" spp:%0d", ms_spp__h3168);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" pies:%0d_%0d%0d",
	       csr_regfile$read_mstatus[7],
	       csr_regfile$read_misa[18] && csr_regfile$read_mstatus[5],
	       csr_regfile$read_misa[13] && csr_regfile$read_mstatus[4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" ies:%0d_%0d%0d",
	       csr_regfile$read_mstatus[3],
	       csr_regfile$read_misa[18] && csr_regfile$read_mstatus[1],
	       csr_regfile$read_misa[13] && csr_regfile$read_mstatus[0]);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    Bypass S1 <= S3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Bypass {");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  (stage3_rg_stage3[285:279] != 7'b1011011 ||
	   stage3_rg_stage3[293:291] != 3'b0 ||
	   stage3_rg_stage3[303:299] != 5'h0D &&
	   stage3_rg_stage3[303:299] != 5'h10 ||
	   stage3_rg_stage3[310:304] != 7'b1111111) &&
	  (!stage3_rg_full || !stage3_rg_stage3[276]))
	$write("Rd -");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  (stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ||
	   stage3_rg_full && stage3_rg_stage3[276]))
	$write("Rd %0d ",
	       stage3_rg_stage3[275:271],
	       "rd_val:%h",
	       stage3_rg_stage3[257:129]);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    S3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Output_Stage3");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage3_rg_full) $write(" PIPE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage3_rg_full) $write(" EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    Bypass S1 <= S2: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Bypass {");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd0)
	$write("Rd -");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd0)
	$write("Rd %0d ", stage2_rg_stage2[393:389]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd1)
	$write("-");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd1)
	$write("rd_val:%h",
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q35);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("    S2: pc 0x%08h instr 0x%08h priv %0d",
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("Output_Stage2", " EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("Output_Stage2", " BUSY: pc:%0h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Output_Stage2", " NONPIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("Output_Stage2", " PIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("data_to_Stage3 {pc:%h  instr:%h  priv:%0d\n",
	       stage2_rg_stage2[644:581],
	       stage2_rg_stage2[580:549],
	       stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("        rd_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write(" rd:%0d  rd_val:%h\n",
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("        csr_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3 &&
	  !stage2_rg_stage2[388])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3 &&
	  stage2_rg_stage2[388])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write(" csr:%h  csr_val:%h",
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2[128:0],
	       "}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", near_mem$dmem_exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[321:258], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", near_mem$dmem_exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[321:258], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("    S1: pc 0x%08h instr 0x%08h priv %0d",
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("Output_Stage1", " BUSY pc:%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("Output_Stage1", " NONPIPE: pc:%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("Output_Stage1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full)
	$write("Output_Stage1", " EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write(" PIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1678)
	$write("CONTROL_STRAIGHT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1682)
	$write("CONTROL_BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1686)
	$write("CONTROL_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1690)
	$write("CONTROL_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1694)
	$write("CONTROL_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1698)
	$write("CONTROL_MRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1702)
	$write("CONTROL_SRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1706)
	$write("CONTROL_URET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1710)
	$write("CONTROL_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1714)
	$write("CONTROL_TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1734)
	$write("CONTROL_CLEAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("data_to_Stage 2 {pc:%h  instr:%h  priv:%0d\n",
	       near_mem$imem_pc,
	       near_mem$imem_instr,
	       rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("            op_stage2:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1779)
	$write("OP_Stage2_ALU");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1783)
	$write("OP_Stage2_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1787)
	$write("OP_Stage2_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1791)
	$write("OP_Stage2_CLR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1799)
	$write("OP_Stage2_CRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("  rd:%0d  csr_valid:", fv_out_data_to_stage2_rd__h5766);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_390_AND_NOT_near_mem_ETC___d1825)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_390_AND_IF_near_mem__ETC___d1837)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("            addr:%h  val1:%h  val2:%h}",
	       { alu_outputs_addr_tag__h38862,
		 alu_outputs_addr_capability__h38863 },
	       near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2213,
	       { alu_outputs_val2_tag__h45380,
		 alu_outputs_val2_capability__h45381 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2317)
	$write("CONTROL_STRAIGHT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2320)
	$write("CONTROL_BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2323)
	$write("CONTROL_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2326)
	$write("CONTROL_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2329)
	$write("CONTROL_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2332)
	$write("CONTROL_MRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2335)
	$write("CONTROL_SRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2338)
	$write("CONTROL_URET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2341)
	$write("CONTROL_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2344)
	$write("CONTROL_TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2347)
	$write("CONTROL_CLEAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("'h%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("'h%h", fv_out_trap_info_exc_code__h38470);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1388)
	$write("'h%h", value__h38714, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1577)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274)
	$write(" next_pc 0x%08h", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", pc_reset_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete && cur_verbosity__h1374 != 4'd0)
	$display("    restart with PC = 0x%0h", pc_reset_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[276] &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S3.fa_deq: write Rd 0x%0h, rd_val 0x%0h",
		 stage3_rg_stage3[275:271],
		 stage3_rg_stage3[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[270] &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S3.fa_deq: write CSR 0x%0h, val 0x%0h",
		 stage3_rg_stage3[269:258],
		 stage3_rg_stage3[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("    S3.enq: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("data_to_Stage3 {pc:%h  instr:%h  priv:%0d\n",
	       stage2_rg_stage2[644:581],
	       stage2_rg_stage2[580:549],
	       stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("        rd_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2703)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2705)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write(" rd:%0d  rd_val:%h\n",
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("        csr_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	  !stage2_rg_stage2[388])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	  stage2_rg_stage2[388])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write(" csr:%h  csr_val:%h",
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2[128:0],
	       "}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728 &&
	  near_mem$imem_instr[6:0] == 7'b1110011 &&
	  near_mem$imem_instr[14:12] != 3'b0 &&
	  near_mem$imem_instr[14:12] != 3'b100 &&
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1833 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S1: write CSR 0x%0h, val 0x%0h",
		 alu_outputs_addr_capability__h38863[11:0],
		 alu_outputs_val2_capability__h45381[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2728 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S2.enq (Data_Stage1_to_Stage2)");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_665_666_AND_NOT_csr_regfile_interr_ETC___d2791)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_restart_after_csrrx &&
	  cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_restart_after_csrrx &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: rl_stage1_restart_after_csrrx: inum:%0d  pc:%0x  cur_priv:%0d",
		 csr_regfile$read_csr_mcycle,
		 rg_inum,
		 fv_out_next_pc__h5702,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage2_nonpipe", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 != 4'd0)
	$display("    mcause:0x%0h  epc 0x%0h  tval:0x%0h  new pc 0x%0h, new mstatus 0x%0h",
		 csr_regfile$csr_trap_actions[65:2],
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[321:258],
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_ret_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 != 4'd0)
	$display("    xRET: next_pc:0x%0h  new mstatus:0x%0h  new priv:%0d",
		 csr_regfile$csr_ret_actions[129:66],
		 csr_regfile$csr_ret_actions[63:0],
		 csr_regfile$csr_ret_actions[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_FENCE_I &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_FENCE_I", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_FENCE &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_FENCE", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_SFENCE_VMA &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_SFENCE_VMA",
		 csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_WFI && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_WFI &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_stage1_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_WFI_resume && cur_verbosity__h1374 != 4'd0)
	$display("    WFI resume: inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_WFI_resume && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2855)
	$display("%0d: CPU.rl_stage1_trap: Tight infinite trap loop: pc 0x%0x instr 0x%08x",
		 csr_regfile$read_csr_mcycle,
		 csr_regfile$csr_trap_actions[193:130],
		 near_mem$imem_instr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2855)
	$display("CPI: %0d.%0d = (%0d/%0d) since last 'continue'",
		 cpi__h52121,
		 cpifrac__h52122,
		 delta_CPI_cycles__h52117,
		 _theResult____h52119);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2855)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_stage1_trap: priv:%0d  mcause:0x%0h  epc:0x%0h",
		 csr_regfile$read_csr_mcycle,
		 rg_cur_priv,
		 csr_regfile$csr_trap_actions[65:2],
		 near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("    tval:0x%0h  new pc:0x%0h  new mstatus:0x%0h",
		 value__h38714,
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_stage1_interrupt: epc 0x%0h  next PC 0x%0h  new_priv %0d  new mstatus 0x%0h",
		 csr_regfile$read_csr_mcycle,
		 near_mem$imem_pc,
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[1:0],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start)
	begin
	  TASK_testplusargs___d2556 = $test$plusargs("v1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start)
	begin
	  TASK_testplusargs___d2555 = $test$plusargs("v2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_reset_start", csr_regfile$read_csr_mcycle);
  end
  // synopsys translate_on
endmodule  // mkCPU

