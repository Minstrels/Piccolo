//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Tue Apr 30 16:37:40 BST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_hart0_server_reset_request_put  O     1 reg
// RDY_hart0_server_reset_response_get  O     1 reg
// imem_master_awvalid            O     1
// imem_master_awaddr             O    64 reg
// imem_master_awprot             O     3 reg
// imem_master_wvalid             O     1
// imem_master_wdata              O    64 reg
// imem_master_wstrb              O     8 reg
// imem_master_bready             O     1
// imem_master_arvalid            O     1
// imem_master_araddr             O    64 reg
// imem_master_arprot             O     3 reg
// imem_master_rready             O     1
// dmem_master_awvalid            O     1
// dmem_master_awaddr             O    64 reg
// dmem_master_awprot             O     3 reg
// dmem_master_wvalid             O     1
// dmem_master_wdata              O    64 reg
// dmem_master_wstrb              O     8 reg
// dmem_master_bready             O     1
// dmem_master_arvalid            O     1
// dmem_master_araddr             O    64 reg
// dmem_master_arprot             O     3 reg
// dmem_master_rready             O     1
// near_mem_slave_awready         O     1 const
// near_mem_slave_wready          O     1 const
// near_mem_slave_bvalid          O     1 const
// near_mem_slave_bresp           O     2 const
// near_mem_slave_arready         O     1 const
// near_mem_slave_rvalid          O     1 const
// near_mem_slave_rresp           O     2 const
// near_mem_slave_rdata           O    64 const
// RDY_external_interrupt_req     O     1 reg
// RDY_timer_interrupt_req        O     1 reg
// RDY_software_interrupt_req     O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// imem_master_awready            I     1
// imem_master_wready             I     1
// imem_master_bvalid             I     1
// imem_master_bresp              I     2 reg
// imem_master_arready            I     1
// imem_master_rvalid             I     1
// imem_master_rresp              I     2 reg
// imem_master_rdata              I    64 reg
// dmem_master_awready            I     1
// dmem_master_wready             I     1
// dmem_master_bvalid             I     1
// dmem_master_bresp              I     2 reg
// dmem_master_arready            I     1
// dmem_master_rvalid             I     1
// dmem_master_rresp              I     2 reg
// dmem_master_rdata              I    64 reg
// near_mem_slave_awvalid         I     1 unused
// near_mem_slave_awaddr          I    64 unused
// near_mem_slave_awprot          I     3 unused
// near_mem_slave_wvalid          I     1 unused
// near_mem_slave_wdata           I    64 unused
// near_mem_slave_wstrb           I     8 unused
// near_mem_slave_bready          I     1 unused
// near_mem_slave_arvalid         I     1 unused
// near_mem_slave_araddr          I    64 unused
// near_mem_slave_arprot          I     3 unused
// near_mem_slave_rready          I     1 unused
// external_interrupt_req_set_not_clear  I     1 reg
// timer_interrupt_req_set_not_clear  I     1 reg
// software_interrupt_req_set_not_clear  I     1 reg
// EN_hart0_server_reset_request_put  I     1
// EN_hart0_server_reset_response_get  I     1
// EN_external_interrupt_req      I     1
// EN_timer_interrupt_req         I     1
// EN_software_interrupt_req      I     1
//
// Combinational paths from inputs to outputs:
//   (imem_master_awready, imem_master_wready) -> imem_master_bready
//   (imem_master_awready,
//    imem_master_wready,
//    imem_master_arready,
//    dmem_master_awready,
//    dmem_master_wready) -> imem_master_rready
//   (imem_master_awready,
//    imem_master_wready,
//    dmem_master_awready,
//    dmem_master_wready,
//    dmem_master_arready) -> dmem_master_rready
//   (dmem_master_awready, dmem_master_wready) -> dmem_master_bready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCPU(CLK,
	     RST_N,

	     EN_hart0_server_reset_request_put,
	     RDY_hart0_server_reset_request_put,

	     EN_hart0_server_reset_response_get,
	     RDY_hart0_server_reset_response_get,

	     imem_master_awvalid,

	     imem_master_awaddr,

	     imem_master_awprot,

	     imem_master_awready,

	     imem_master_wvalid,

	     imem_master_wdata,

	     imem_master_wstrb,

	     imem_master_wready,

	     imem_master_bvalid,
	     imem_master_bresp,

	     imem_master_bready,

	     imem_master_arvalid,

	     imem_master_araddr,

	     imem_master_arprot,

	     imem_master_arready,

	     imem_master_rvalid,
	     imem_master_rresp,
	     imem_master_rdata,

	     imem_master_rready,

	     dmem_master_awvalid,

	     dmem_master_awaddr,

	     dmem_master_awprot,

	     dmem_master_awready,

	     dmem_master_wvalid,

	     dmem_master_wdata,

	     dmem_master_wstrb,

	     dmem_master_wready,

	     dmem_master_bvalid,
	     dmem_master_bresp,

	     dmem_master_bready,

	     dmem_master_arvalid,

	     dmem_master_araddr,

	     dmem_master_arprot,

	     dmem_master_arready,

	     dmem_master_rvalid,
	     dmem_master_rresp,
	     dmem_master_rdata,

	     dmem_master_rready,

	     near_mem_slave_awvalid,
	     near_mem_slave_awaddr,
	     near_mem_slave_awprot,

	     near_mem_slave_awready,

	     near_mem_slave_wvalid,
	     near_mem_slave_wdata,
	     near_mem_slave_wstrb,

	     near_mem_slave_wready,

	     near_mem_slave_bvalid,

	     near_mem_slave_bresp,

	     near_mem_slave_bready,

	     near_mem_slave_arvalid,
	     near_mem_slave_araddr,
	     near_mem_slave_arprot,

	     near_mem_slave_arready,

	     near_mem_slave_rvalid,

	     near_mem_slave_rresp,

	     near_mem_slave_rdata,

	     near_mem_slave_rready,

	     external_interrupt_req_set_not_clear,
	     EN_external_interrupt_req,
	     RDY_external_interrupt_req,

	     timer_interrupt_req_set_not_clear,
	     EN_timer_interrupt_req,
	     RDY_timer_interrupt_req,

	     software_interrupt_req_set_not_clear,
	     EN_software_interrupt_req,
	     RDY_software_interrupt_req);
  parameter [63 : 0] pc_reset_value = 64'b0;
  input  CLK;
  input  RST_N;

  // action method hart0_server_reset_request_put
  input  EN_hart0_server_reset_request_put;
  output RDY_hart0_server_reset_request_put;

  // action method hart0_server_reset_response_get
  input  EN_hart0_server_reset_response_get;
  output RDY_hart0_server_reset_response_get;

  // value method imem_master_m_awvalid
  output imem_master_awvalid;

  // value method imem_master_m_awaddr
  output [63 : 0] imem_master_awaddr;

  // value method imem_master_m_awprot
  output [2 : 0] imem_master_awprot;

  // value method imem_master_m_awuser

  // action method imem_master_m_awready
  input  imem_master_awready;

  // value method imem_master_m_wvalid
  output imem_master_wvalid;

  // value method imem_master_m_wdata
  output [63 : 0] imem_master_wdata;

  // value method imem_master_m_wstrb
  output [7 : 0] imem_master_wstrb;

  // action method imem_master_m_wready
  input  imem_master_wready;

  // action method imem_master_m_bvalid
  input  imem_master_bvalid;
  input  [1 : 0] imem_master_bresp;

  // value method imem_master_m_bready
  output imem_master_bready;

  // value method imem_master_m_arvalid
  output imem_master_arvalid;

  // value method imem_master_m_araddr
  output [63 : 0] imem_master_araddr;

  // value method imem_master_m_arprot
  output [2 : 0] imem_master_arprot;

  // value method imem_master_m_aruser

  // action method imem_master_m_arready
  input  imem_master_arready;

  // action method imem_master_m_rvalid
  input  imem_master_rvalid;
  input  [1 : 0] imem_master_rresp;
  input  [63 : 0] imem_master_rdata;

  // value method imem_master_m_rready
  output imem_master_rready;

  // value method dmem_master_m_awvalid
  output dmem_master_awvalid;

  // value method dmem_master_m_awaddr
  output [63 : 0] dmem_master_awaddr;

  // value method dmem_master_m_awprot
  output [2 : 0] dmem_master_awprot;

  // value method dmem_master_m_awuser

  // action method dmem_master_m_awready
  input  dmem_master_awready;

  // value method dmem_master_m_wvalid
  output dmem_master_wvalid;

  // value method dmem_master_m_wdata
  output [63 : 0] dmem_master_wdata;

  // value method dmem_master_m_wstrb
  output [7 : 0] dmem_master_wstrb;

  // action method dmem_master_m_wready
  input  dmem_master_wready;

  // action method dmem_master_m_bvalid
  input  dmem_master_bvalid;
  input  [1 : 0] dmem_master_bresp;

  // value method dmem_master_m_bready
  output dmem_master_bready;

  // value method dmem_master_m_arvalid
  output dmem_master_arvalid;

  // value method dmem_master_m_araddr
  output [63 : 0] dmem_master_araddr;

  // value method dmem_master_m_arprot
  output [2 : 0] dmem_master_arprot;

  // value method dmem_master_m_aruser

  // action method dmem_master_m_arready
  input  dmem_master_arready;

  // action method dmem_master_m_rvalid
  input  dmem_master_rvalid;
  input  [1 : 0] dmem_master_rresp;
  input  [63 : 0] dmem_master_rdata;

  // value method dmem_master_m_rready
  output dmem_master_rready;

  // action method near_mem_slave_m_awvalid
  input  near_mem_slave_awvalid;
  input  [63 : 0] near_mem_slave_awaddr;
  input  [2 : 0] near_mem_slave_awprot;

  // value method near_mem_slave_m_awready
  output near_mem_slave_awready;

  // action method near_mem_slave_m_wvalid
  input  near_mem_slave_wvalid;
  input  [63 : 0] near_mem_slave_wdata;
  input  [7 : 0] near_mem_slave_wstrb;

  // value method near_mem_slave_m_wready
  output near_mem_slave_wready;

  // value method near_mem_slave_m_bvalid
  output near_mem_slave_bvalid;

  // value method near_mem_slave_m_bresp
  output [1 : 0] near_mem_slave_bresp;

  // value method near_mem_slave_m_buser

  // action method near_mem_slave_m_bready
  input  near_mem_slave_bready;

  // action method near_mem_slave_m_arvalid
  input  near_mem_slave_arvalid;
  input  [63 : 0] near_mem_slave_araddr;
  input  [2 : 0] near_mem_slave_arprot;

  // value method near_mem_slave_m_arready
  output near_mem_slave_arready;

  // value method near_mem_slave_m_rvalid
  output near_mem_slave_rvalid;

  // value method near_mem_slave_m_rresp
  output [1 : 0] near_mem_slave_rresp;

  // value method near_mem_slave_m_rdata
  output [63 : 0] near_mem_slave_rdata;

  // value method near_mem_slave_m_ruser

  // action method near_mem_slave_m_rready
  input  near_mem_slave_rready;

  // action method external_interrupt_req
  input  external_interrupt_req_set_not_clear;
  input  EN_external_interrupt_req;
  output RDY_external_interrupt_req;

  // action method timer_interrupt_req
  input  timer_interrupt_req_set_not_clear;
  input  EN_timer_interrupt_req;
  output RDY_timer_interrupt_req;

  // action method software_interrupt_req
  input  software_interrupt_req_set_not_clear;
  input  EN_software_interrupt_req;
  output RDY_software_interrupt_req;

  // signals for module outputs
  wire [63 : 0] dmem_master_araddr,
		dmem_master_awaddr,
		dmem_master_wdata,
		imem_master_araddr,
		imem_master_awaddr,
		imem_master_wdata,
		near_mem_slave_rdata;
  wire [7 : 0] dmem_master_wstrb, imem_master_wstrb;
  wire [2 : 0] dmem_master_arprot,
	       dmem_master_awprot,
	       imem_master_arprot,
	       imem_master_awprot;
  wire [1 : 0] near_mem_slave_bresp, near_mem_slave_rresp;
  wire RDY_external_interrupt_req,
       RDY_hart0_server_reset_request_put,
       RDY_hart0_server_reset_response_get,
       RDY_software_interrupt_req,
       RDY_timer_interrupt_req,
       dmem_master_arvalid,
       dmem_master_awvalid,
       dmem_master_bready,
       dmem_master_rready,
       dmem_master_wvalid,
       imem_master_arvalid,
       imem_master_awvalid,
       imem_master_bready,
       imem_master_rready,
       imem_master_wvalid,
       near_mem_slave_arready,
       near_mem_slave_awready,
       near_mem_slave_bvalid,
       near_mem_slave_rvalid,
       near_mem_slave_wready;

  // register cfg_logdelay
  reg [63 : 0] cfg_logdelay;
  wire [63 : 0] cfg_logdelay$D_IN;
  wire cfg_logdelay$EN;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register rg_cur_priv
  reg [1 : 0] rg_cur_priv;
  reg [1 : 0] rg_cur_priv$D_IN;
  wire rg_cur_priv$EN;

  // register rg_halt
  reg rg_halt;
  wire rg_halt$D_IN, rg_halt$EN;

  // register rg_inum
  reg [63 : 0] rg_inum;
  reg [63 : 0] rg_inum$D_IN;
  wire rg_inum$EN;

  // register rg_start_CPI_cycles
  reg [63 : 0] rg_start_CPI_cycles;
  wire [63 : 0] rg_start_CPI_cycles$D_IN;
  wire rg_start_CPI_cycles$EN;

  // register rg_start_CPI_instrs
  reg [63 : 0] rg_start_CPI_instrs;
  wire [63 : 0] rg_start_CPI_instrs$D_IN;
  wire rg_start_CPI_instrs$EN;

  // register rg_state
  reg [2 : 0] rg_state;
  reg [2 : 0] rg_state$D_IN;
  wire rg_state$EN;

  // register stage1_rg_ddc
  reg [128 : 0] stage1_rg_ddc;
  wire [128 : 0] stage1_rg_ddc$D_IN;
  wire stage1_rg_ddc$EN;

  // register stage1_rg_full
  reg stage1_rg_full;
  reg stage1_rg_full$D_IN;
  wire stage1_rg_full$EN;

  // register stage1_rg_run_state
  reg stage1_rg_run_state;
  wire stage1_rg_run_state$D_IN, stage1_rg_run_state$EN;

  // register stage2_rg_f5
  reg [4 : 0] stage2_rg_f5;
  wire [4 : 0] stage2_rg_f5$D_IN;
  wire stage2_rg_f5$EN;

  // register stage2_rg_full
  reg stage2_rg_full;
  wire stage2_rg_full$D_IN, stage2_rg_full$EN;

  // register stage2_rg_run_state
  reg stage2_rg_run_state;
  wire stage2_rg_run_state$D_IN, stage2_rg_run_state$EN;

  // register stage2_rg_stage2
  reg [646 : 0] stage2_rg_stage2;
  wire [646 : 0] stage2_rg_stage2$D_IN;
  wire stage2_rg_stage2$EN;

  // register stage3_rg_full
  reg stage3_rg_full;
  wire stage3_rg_full$D_IN, stage3_rg_full$EN;

  // register stage3_rg_run_state
  reg stage3_rg_run_state;
  wire stage3_rg_run_state$D_IN, stage3_rg_run_state$EN;

  // register stage3_rg_stage3
  reg [374 : 0] stage3_rg_stage3;
  wire [374 : 0] stage3_rg_stage3$D_IN;
  wire stage3_rg_stage3$EN;

  // ports of submodule csr_regfile
  reg [63 : 0] csr_regfile$csr_trap_actions_xtval;
  reg [4 : 0] csr_regfile$csr_trap_actions_exc_code;
  reg [1 : 0] csr_regfile$csr_ret_actions_from_priv;
  wire [193 : 0] csr_regfile$csr_trap_actions;
  wire [129 : 0] csr_regfile$csr_ret_actions;
  wire [128 : 0] csr_regfile$read_csr_cap, csr_regfile$write_csr_cap_value;
  wire [64 : 0] csr_regfile$read_csr;
  wire [63 : 0] csr_regfile$csr_trap_actions_pc,
		csr_regfile$read_csr_mcycle,
		csr_regfile$read_csr_minstret,
		csr_regfile$read_mstatus,
		csr_regfile$read_satp,
		csr_regfile$read_sstatus,
		csr_regfile$write_csr_word;
  wire [27 : 0] csr_regfile$read_misa;
  wire [11 : 0] csr_regfile$csr_counter_read_fault_csr_addr,
		csr_regfile$mav_read_csr_csr_addr,
		csr_regfile$read_csr_csr_addr,
		csr_regfile$read_csr_port2_csr_addr,
		csr_regfile$write_csr_csr_addr;
  wire [5 : 0] csr_regfile$interrupt_pending;
  wire [4 : 0] csr_regfile$read_csr_cap_csr_addr,
	       csr_regfile$write_csr_cap_cap_addr;
  wire [1 : 0] csr_regfile$csr_counter_read_fault_priv,
	       csr_regfile$csr_trap_actions_from_priv,
	       csr_regfile$interrupt_pending_cur_priv;
  wire csr_regfile$EN_csr_minstret_incr,
       csr_regfile$EN_csr_ret_actions,
       csr_regfile$EN_csr_trap_actions,
       csr_regfile$EN_external_interrupt_req,
       csr_regfile$EN_mav_read_csr,
       csr_regfile$EN_server_reset_request_put,
       csr_regfile$EN_server_reset_response_get,
       csr_regfile$EN_software_interrupt_req,
       csr_regfile$EN_timer_interrupt_req,
       csr_regfile$EN_write_csr,
       csr_regfile$EN_write_csr_cap,
       csr_regfile$RDY_external_interrupt_req,
       csr_regfile$RDY_server_reset_request_put,
       csr_regfile$RDY_server_reset_response_get,
       csr_regfile$RDY_software_interrupt_req,
       csr_regfile$RDY_timer_interrupt_req,
       csr_regfile$csr_counter_read_fault,
       csr_regfile$csr_trap_actions_interrupt,
       csr_regfile$external_interrupt_req_set_not_clear,
       csr_regfile$software_interrupt_req_set_not_clear,
       csr_regfile$timer_interrupt_req_set_not_clear,
       csr_regfile$wfi_resume;

  // ports of submodule f_reset_reqs
  wire f_reset_reqs$CLR,
       f_reset_reqs$DEQ,
       f_reset_reqs$EMPTY_N,
       f_reset_reqs$ENQ,
       f_reset_reqs$FULL_N;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule gpr_regfile
  wire [128 : 0] gpr_regfile$read_rs1,
		 gpr_regfile$read_rs2,
		 gpr_regfile$write_rd_rd_val;
  wire [63 : 0] gpr_regfile$write_rd_int_rd_val;
  wire [7 : 0] gpr_regfile$clear_quarter_mask;
  wire [4 : 0] gpr_regfile$read_rs1_port2_rs1,
	       gpr_regfile$read_rs1_rs1,
	       gpr_regfile$read_rs2_rs2,
	       gpr_regfile$write_rd_int_rd,
	       gpr_regfile$write_rd_rd;
  wire [1 : 0] gpr_regfile$clear_quarter_qid;
  wire gpr_regfile$EN_clear_quarter,
       gpr_regfile$EN_server_reset_request_put,
       gpr_regfile$EN_server_reset_response_get,
       gpr_regfile$EN_write_rd,
       gpr_regfile$EN_write_rd_int,
       gpr_regfile$RDY_server_reset_request_put,
       gpr_regfile$RDY_server_reset_response_get,
       gpr_regfile$is_busy;

  // ports of submodule near_mem
  reg [63 : 0] near_mem$imem_req_addr;
  reg [1 : 0] near_mem$imem_req_priv;
  wire [63 : 0] near_mem$dmem_master_araddr,
		near_mem$dmem_master_awaddr,
		near_mem$dmem_master_rdata,
		near_mem$dmem_master_wdata,
		near_mem$dmem_req_addr,
		near_mem$dmem_req_satp,
		near_mem$dmem_req_store_value,
		near_mem$dmem_word64,
		near_mem$imem_master_araddr,
		near_mem$imem_master_awaddr,
		near_mem$imem_master_rdata,
		near_mem$imem_master_wdata,
		near_mem$imem_pc,
		near_mem$imem_req_satp,
		near_mem$near_mem_slave_araddr,
		near_mem$near_mem_slave_awaddr,
		near_mem$near_mem_slave_rdata,
		near_mem$near_mem_slave_wdata;
  wire [31 : 0] near_mem$imem_instr;
  wire [7 : 0] near_mem$dmem_master_wstrb,
	       near_mem$imem_master_wstrb,
	       near_mem$near_mem_slave_wstrb,
	       near_mem$server_fence_request_put;
  wire [4 : 0] near_mem$dmem_exc_code, near_mem$imem_exc_code;
  wire [2 : 0] near_mem$dmem_master_arprot,
	       near_mem$dmem_master_awprot,
	       near_mem$dmem_req_f3,
	       near_mem$imem_master_arprot,
	       near_mem$imem_master_awprot,
	       near_mem$imem_req_f3,
	       near_mem$near_mem_slave_arprot,
	       near_mem$near_mem_slave_awprot;
  wire [1 : 0] near_mem$dmem_master_bresp,
	       near_mem$dmem_master_rresp,
	       near_mem$dmem_req_priv,
	       near_mem$imem_master_bresp,
	       near_mem$imem_master_rresp,
	       near_mem$near_mem_slave_bresp,
	       near_mem$near_mem_slave_rresp;
  wire near_mem$EN_dmem_req,
       near_mem$EN_imem_req,
       near_mem$EN_server_fence_i_request_put,
       near_mem$EN_server_fence_i_response_get,
       near_mem$EN_server_fence_request_put,
       near_mem$EN_server_fence_response_get,
       near_mem$EN_server_reset_request_put,
       near_mem$EN_server_reset_response_get,
       near_mem$EN_sfence_vma,
       near_mem$RDY_server_fence_i_request_put,
       near_mem$RDY_server_fence_i_response_get,
       near_mem$RDY_server_fence_request_put,
       near_mem$RDY_server_fence_response_get,
       near_mem$RDY_server_reset_request_put,
       near_mem$RDY_server_reset_response_get,
       near_mem$dmem_exc,
       near_mem$dmem_master_arready,
       near_mem$dmem_master_arvalid,
       near_mem$dmem_master_awready,
       near_mem$dmem_master_awvalid,
       near_mem$dmem_master_bready,
       near_mem$dmem_master_bvalid,
       near_mem$dmem_master_rready,
       near_mem$dmem_master_rvalid,
       near_mem$dmem_master_wready,
       near_mem$dmem_master_wvalid,
       near_mem$dmem_req_mstatus_MXR,
       near_mem$dmem_req_op,
       near_mem$dmem_req_sstatus_SUM,
       near_mem$dmem_valid,
       near_mem$imem_exc,
       near_mem$imem_master_arready,
       near_mem$imem_master_arvalid,
       near_mem$imem_master_awready,
       near_mem$imem_master_awvalid,
       near_mem$imem_master_bready,
       near_mem$imem_master_bvalid,
       near_mem$imem_master_rready,
       near_mem$imem_master_rvalid,
       near_mem$imem_master_wready,
       near_mem$imem_master_wvalid,
       near_mem$imem_req_mstatus_MXR,
       near_mem$imem_req_sstatus_SUM,
       near_mem$imem_req_trap,
       near_mem$imem_valid,
       near_mem$near_mem_slave_arready,
       near_mem$near_mem_slave_arvalid,
       near_mem$near_mem_slave_awready,
       near_mem$near_mem_slave_awvalid,
       near_mem$near_mem_slave_bready,
       near_mem$near_mem_slave_bvalid,
       near_mem$near_mem_slave_rready,
       near_mem$near_mem_slave_rvalid,
       near_mem$near_mem_slave_wready,
       near_mem$near_mem_slave_wvalid;

  // ports of submodule stage1_f_reset_reqs
  wire stage1_f_reset_reqs$CLR,
       stage1_f_reset_reqs$DEQ,
       stage1_f_reset_reqs$EMPTY_N,
       stage1_f_reset_reqs$ENQ,
       stage1_f_reset_reqs$FULL_N;

  // ports of submodule stage1_f_reset_rsps
  wire stage1_f_reset_rsps$CLR,
       stage1_f_reset_rsps$DEQ,
       stage1_f_reset_rsps$EMPTY_N,
       stage1_f_reset_rsps$ENQ,
       stage1_f_reset_rsps$FULL_N;

  // ports of submodule stage2_f_reset_reqs
  wire stage2_f_reset_reqs$CLR,
       stage2_f_reset_reqs$DEQ,
       stage2_f_reset_reqs$EMPTY_N,
       stage2_f_reset_reqs$ENQ,
       stage2_f_reset_reqs$FULL_N;

  // ports of submodule stage2_f_reset_rsps
  wire stage2_f_reset_rsps$CLR,
       stage2_f_reset_rsps$DEQ,
       stage2_f_reset_rsps$EMPTY_N,
       stage2_f_reset_rsps$ENQ,
       stage2_f_reset_rsps$FULL_N;

  // ports of submodule stage3_f_reset_reqs
  wire stage3_f_reset_reqs$CLR,
       stage3_f_reset_reqs$DEQ,
       stage3_f_reset_reqs$EMPTY_N,
       stage3_f_reset_reqs$ENQ,
       stage3_f_reset_reqs$FULL_N;

  // ports of submodule stage3_f_reset_rsps
  wire stage3_f_reset_rsps$CLR,
       stage3_f_reset_rsps$DEQ,
       stage3_f_reset_rsps$EMPTY_N,
       stage3_f_reset_rsps$ENQ,
       stage3_f_reset_rsps$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_WFI_resume,
       CAN_FIRE_RL_rl_finish_FENCE,
       CAN_FIRE_RL_rl_finish_FENCE_I,
       CAN_FIRE_RL_rl_finish_SFENCE_VMA,
       CAN_FIRE_RL_rl_pipe,
       CAN_FIRE_RL_rl_reset_complete,
       CAN_FIRE_RL_rl_reset_from_WFI,
       CAN_FIRE_RL_rl_reset_start,
       CAN_FIRE_RL_rl_show_pipe,
       CAN_FIRE_RL_rl_stage1_FENCE,
       CAN_FIRE_RL_rl_stage1_FENCE_I,
       CAN_FIRE_RL_rl_stage1_SFENCE_VMA,
       CAN_FIRE_RL_rl_stage1_WFI,
       CAN_FIRE_RL_rl_stage1_interrupt,
       CAN_FIRE_RL_rl_stage1_restart_after_csrrx,
       CAN_FIRE_RL_rl_stage1_trap,
       CAN_FIRE_RL_rl_stage1_xRET,
       CAN_FIRE_RL_rl_stage2_nonpipe,
       CAN_FIRE_RL_stage1_rl_reset,
       CAN_FIRE_RL_stage2_rl_reset,
       CAN_FIRE_RL_stage3_rl_reset,
       CAN_FIRE_dmem_master_m_arready,
       CAN_FIRE_dmem_master_m_awready,
       CAN_FIRE_dmem_master_m_bvalid,
       CAN_FIRE_dmem_master_m_rvalid,
       CAN_FIRE_dmem_master_m_wready,
       CAN_FIRE_external_interrupt_req,
       CAN_FIRE_hart0_server_reset_request_put,
       CAN_FIRE_hart0_server_reset_response_get,
       CAN_FIRE_imem_master_m_arready,
       CAN_FIRE_imem_master_m_awready,
       CAN_FIRE_imem_master_m_bvalid,
       CAN_FIRE_imem_master_m_rvalid,
       CAN_FIRE_imem_master_m_wready,
       CAN_FIRE_near_mem_slave_m_arvalid,
       CAN_FIRE_near_mem_slave_m_awvalid,
       CAN_FIRE_near_mem_slave_m_bready,
       CAN_FIRE_near_mem_slave_m_rready,
       CAN_FIRE_near_mem_slave_m_wvalid,
       CAN_FIRE_software_interrupt_req,
       CAN_FIRE_timer_interrupt_req,
       WILL_FIRE_RL_rl_WFI_resume,
       WILL_FIRE_RL_rl_finish_FENCE,
       WILL_FIRE_RL_rl_finish_FENCE_I,
       WILL_FIRE_RL_rl_finish_SFENCE_VMA,
       WILL_FIRE_RL_rl_pipe,
       WILL_FIRE_RL_rl_reset_complete,
       WILL_FIRE_RL_rl_reset_from_WFI,
       WILL_FIRE_RL_rl_reset_start,
       WILL_FIRE_RL_rl_show_pipe,
       WILL_FIRE_RL_rl_stage1_FENCE,
       WILL_FIRE_RL_rl_stage1_FENCE_I,
       WILL_FIRE_RL_rl_stage1_SFENCE_VMA,
       WILL_FIRE_RL_rl_stage1_WFI,
       WILL_FIRE_RL_rl_stage1_interrupt,
       WILL_FIRE_RL_rl_stage1_restart_after_csrrx,
       WILL_FIRE_RL_rl_stage1_trap,
       WILL_FIRE_RL_rl_stage1_xRET,
       WILL_FIRE_RL_rl_stage2_nonpipe,
       WILL_FIRE_RL_stage1_rl_reset,
       WILL_FIRE_RL_stage2_rl_reset,
       WILL_FIRE_RL_stage3_rl_reset,
       WILL_FIRE_dmem_master_m_arready,
       WILL_FIRE_dmem_master_m_awready,
       WILL_FIRE_dmem_master_m_bvalid,
       WILL_FIRE_dmem_master_m_rvalid,
       WILL_FIRE_dmem_master_m_wready,
       WILL_FIRE_external_interrupt_req,
       WILL_FIRE_hart0_server_reset_request_put,
       WILL_FIRE_hart0_server_reset_response_get,
       WILL_FIRE_imem_master_m_arready,
       WILL_FIRE_imem_master_m_awready,
       WILL_FIRE_imem_master_m_bvalid,
       WILL_FIRE_imem_master_m_rvalid,
       WILL_FIRE_imem_master_m_wready,
       WILL_FIRE_near_mem_slave_m_arvalid,
       WILL_FIRE_near_mem_slave_m_awvalid,
       WILL_FIRE_near_mem_slave_m_bready,
       WILL_FIRE_near_mem_slave_m_rready,
       WILL_FIRE_near_mem_slave_m_wvalid,
       WILL_FIRE_software_interrupt_req,
       WILL_FIRE_timer_interrupt_req;

  // inputs to muxes for submodule ports
  wire [63 : 0] MUX_rg_inum$write_1__VAL_1;
  wire MUX_near_mem$imem_req_1__SEL_1,
       MUX_near_mem$imem_req_1__SEL_3,
       MUX_near_mem$imem_req_1__SEL_4,
       MUX_rg_cur_priv$write_1__SEL_1,
       MUX_rg_inum$write_1__SEL_1,
       MUX_rg_inum$write_1__SEL_2,
       MUX_rg_state$write_1__SEL_1,
       MUX_rg_state$write_1__SEL_2,
       MUX_rg_state$write_1__SEL_4,
       MUX_rg_state$write_1__SEL_5,
       MUX_rg_state$write_1__SEL_6,
       MUX_rg_state$write_1__SEL_7,
       MUX_rg_state$write_1__SEL_8,
       MUX_stage1_rg_full$write_1__VAL_11,
       MUX_stage2_rg_full$write_1__VAL_3;

  // remaining internal signals
  reg [128 : 0] CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q45;
  reg [127 : 0] CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q44,
		CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3,
		IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426,
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437,
		alu_outputs___1_addr_capability__h62966,
		alu_outputs___1_val1_capability__h64059,
		alu_outputs___1_val1_capability__h64161,
		alu_outputs_addr_capability__h62981,
		alu_outputs_val2_capability__h68921,
		ccsr_val_capability__h64132,
		x_out_bypass_rd_val_capability__h4621;
  reg [63 : 0] _theResult_____1_snd__h61530, csr_val__h6361, new_addr__h63981;
  reg [4 : 0] CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q35,
	      CASE_rg_cur_priv_0b0_8_0b1_9_11__q34,
	      IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2682,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702,
	      alu_outputs___1_exc_code__h30870,
	      alu_outputs___1_exc_code__h5858,
	      alu_outputs___1_exc_code__h60740,
	      alu_outputs_exc_code__h60764,
	      check__h57961,
	      fv_out_data_to_stage2_rd__h5766,
	      x_out_data_to_stage3_rd__h4794;
  reg [3 : 0] CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q36,
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q37,
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1907,
	      IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1861,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904,
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914,
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1918;
  reg [2 : 0] CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q38,
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_CAS_ETC__q40,
	      CASE_near_memimem_instr_BITS_31_TO_25_0b0_IF__ETC__q39,
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021;
  reg [1 : 0] CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2,
	      IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151;
  reg CASE_near_memimem_instr_BITS_31_TO_25_0b1011__ETC__q41,
      CASE_near_memimem_instr_BITS_31_TO_25_0b11110_ETC__q28,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1550,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1789,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2760,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2884,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1778,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2746,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2749,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2873,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1557,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1796,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2891,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2906,
      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461,
      TASK_testplusargs___d2797,
      TASK_testplusargs___d2798,
      alu_outputs___1_val1_tag__h64160,
      x_out_bypass_rd_val_tag__h4620;
  wire [128 : 0] near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2440,
		 stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186;
  wire [127 : 0] IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2383,
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322,
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344,
		 IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2396,
		 IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2438,
		 IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317,
		 IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340,
		 _theResult___snd_fst_capability__h64014,
		 _theResult___snd_fst_capability__h64082,
		 alu_outputs___1_addr_capability__h62880,
		 alu_outputs___1_addr_capability__h62894,
		 alu_outputs___1_addr_capability__h62921,
		 alu_outputs___1_val1_capability__h63964,
		 alu_outputs___1_val1_capability__h63972,
		 alu_outputs___1_val1_capability__h63976,
		 alu_outputs___1_val1_capability__h63980,
		 alu_outputs___1_val1_capability__h63984,
		 alu_outputs___1_val1_capability__h63987,
		 alu_outputs___1_val1_capability__h63990,
		 alu_outputs___1_val1_capability__h64000,
		 alu_outputs___1_val1_capability__h64046,
		 alu_outputs___1_val2_capability__h68834,
		 alu_outputs___1_val2_capability__h68850,
		 alu_outputs___2_addr_capability__h62943,
		 alu_outputs_addr_capability__h62863,
		 alu_outputs_addr_capability__h62867,
		 alu_outputs_addr_capability__h62871,
		 alu_outputs_addr_capability__h62883,
		 b_capability__h31147,
		 b_capability__h31159,
		 b_capability__h6618,
		 b_capability__h6630,
		 controller_capability__h59285,
		 csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d3104,
		 new_pcc_capability__h58010,
		 newcap__h31783,
		 out_val_capability__h56956,
		 output_stage2___1_bypass_rd_val_capability__h4613,
		 pcc_capability__h57882,
		 ret_capability__h64010,
		 ret_capability__h64078,
		 rs1_val_bypassed_capability__h6632,
		 rs2_val_bypassed_capability__h31161;
  wire [64 : 0] x0017_SRL_controller_capability9285_BITS_110_T_ETC__q24,
		x0276_SRL_controller_capability9285_BITS_110_T_ETC__q26,
		x0535_SRL_controller_capability9285_BITS_110_T_ETC__q27,
		x0586_SRL_rs1_val_bypassed_capability632_BITS__ETC__q30,
		x0743_SRL_rs1_val_bypassed_capability632_BITS__ETC__q33,
		x1316_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q16,
		x1473_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q17,
		x6931_SRL_rs1_val_bypassed_capability632_BITS__ETC__q22,
		x7162_SRL_rs1_val_bypassed_capability632_BITS__ETC__q21,
		x8540_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q43,
		x9601_SRL_controller_capability9285_BITS_110_T_ETC__q23,
		x9758_SRL_controller_capability9285_BITS_110_T_ETC__q25,
		x__h30586,
		x__h30743,
		x__h31316,
		x__h31473,
		x__h56931,
		x__h57162,
		x__h58540,
		x__h59601,
		x__h59758,
		x__h60017,
		x__h60276,
		x__h60535;
  wire [63 : 0] IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507,
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2779,
		INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224,
		INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699,
		SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1586,
		_theResult_____1_snd__h61523,
		_theResult_____1_snd__h61558,
		_theResult_____4__h69064,
		_theResult_____5__h69063,
		_theResult____h75556,
		_theResult___snd__h61634,
		_theResult___snd__h61641,
		_theResult___snd__h61747,
		_theResult___snd__h65281,
		branch_target__h5843,
		cb_bot__h56823,
		cb_top__h56824,
		cpi__h75558,
		cpifrac__h75559,
		csr_val___1__h69223,
		csr_val___2__h69062,
		csr_val___2__h69071,
		csr_val___2__h69148,
		csr_val___2__h69163,
		csr_val__h63806,
		csr_val__h63811,
		ct_bot__h56818,
		ct_top__h56819,
		delta_CPI_cycles__h75554,
		delta_CPI_instrs___1__h75591,
		delta_CPI_instrs__h75555,
		eaddr__h6106,
		fv_out_next_pc__h5702,
		lower__h56895,
		near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584,
		newVal__h30515,
		newVal__h30521,
		newVal__h30530,
		new_addr__h63969,
		new_addr__h63973,
		new_addr__h63977,
		new_addr__h64101,
		new_addr__h64139,
		new_addr__h68845,
		new_curs__h31817,
		new_offset__h64002,
		new_pc__h5854,
		next_pc__h5872,
		next_pc__h5895,
		range__h6677,
		rd_val___1__h61510,
		rd_val___1__h61518,
		rd_val___1__h61525,
		rd_val___1__h61532,
		rd_val___1__h61539,
		rd_val___1__h61546,
		rd_val___1__h65378,
		rd_val___1__h65430,
		rd_val___1__h65484,
		rd_val___1__h65513,
		rd_val___1__h65611,
		rd_val___1__h65699,
		rd_val___1__h65705,
		rd_val___1__h65750,
		rd_val__h6051,
		rd_val__h6068,
		rd_val__h6357,
		rd_val__h65067,
		rd_val__h65161,
		rd_val__h65183,
		ret_pc__h5871,
		rs1_val__h6356,
		rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q15,
		rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q20,
		rs1_val_bypassed_capability632_BITS_63_TO_0__q10,
		top__h31984,
		top__h6743,
		upper__h30551,
		upper__h31281,
		upper__h56896,
		upper__h58348,
		upper__h59566,
		upper__h59825,
		upper__h60084,
		upper__h60343,
		value__h62828,
		x__h17988,
		x__h26016,
		x__h26017,
		x__h30760,
		x__h31490,
		x__h43247,
		x__h52314,
		x__h57179,
		x__h58557,
		x__h59775,
		x__h60034,
		x__h60293,
		x__h60552,
		x__h75557,
		y__h17987,
		y__h26018,
		y__h43246,
		y__h52316,
		y__h69293;
  wire [31 : 0] IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2524,
		new_offset4002_BITS_31_TO_0__q32,
		rs1_val_bypassed_capability632_BITS_31_TO_0_MI_ETC__q12,
		rs1_val_bypassed_capability632_BITS_31_TO_0_PL_ETC__q11,
		rs1_val_bypassed_capability632_BITS_31_TO_0_SR_ETC__q7,
		rs1_val_bypassed_capability632_BITS_31_TO_0__q6,
		tmp__h65512,
		v32__h6049,
		x__h65433,
		x__h65487,
		x__h65708,
		x__h65753;
  wire [20 : 0] near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q29;
  wire [19 : 0] b__h31282,
		b__h56897,
		b__h59567,
		ct_T__h56817,
		x__h64305,
		x__h64441,
		x__h64580,
		x__h64717;
  wire [14 : 0] newperms__h31782, perms__h60717, y__h64225;
  wire [12 : 0] near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1;
  wire [11 : 0] near_memimem_instr_BITS_31_TO_20__q31,
		near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q8;
  wire [9 : 0] funct10__h6030, x__h67161;
  wire [7 : 0] stage3_rg_stage3_BITS_136_TO_129__q4,
	       x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5;
  wire [6 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1211,
	       IF_near_mem_imem_instr__20_BIT_30_71_THEN_53_E_ETC___d684,
	       _44_MINUS_leading752__q9,
	       _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q13,
	       _63_MINUS_IF_rs2_val_bypassed_capability1161_BI_ETC__q18,
	       increase2227_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q19,
	       increase5929_PLUS_0_CONCAT_63_MINUS_IF_near_me_ETC__q14,
	       increase__h25929,
	       increase__h52227,
	       leading__h6752,
	       x__h15735,
	       x__h15747,
	       x__h15759,
	       x__h15771,
	       x__h15783,
	       x__h15795,
	       x__h15807,
	       x__h15819,
	       x__h15831,
	       x__h15843,
	       x__h15855,
	       x__h40976,
	       x__h40988,
	       x__h41000,
	       x__h41012,
	       x__h41024,
	       x__h41036,
	       x__h41048,
	       x__h41060,
	       x__h41072,
	       x__h41084,
	       x__h41096,
	       x__h41108,
	       x__h41120,
	       x__h41132,
	       x__h41144,
	       x__h41156,
	       x__h41168,
	       x__h41180,
	       x__h41192,
	       x__h41204,
	       x__h41216,
	       x__h41228,
	       x__h41240,
	       x__h41252,
	       x__h41264,
	       x__h41276,
	       x__h41288,
	       x__h41300,
	       x__h41312,
	       x__h41324,
	       x__h41336,
	       x__h41348,
	       x__h41360,
	       x__h41372,
	       x__h41384,
	       x__h41396,
	       x__h41408,
	       x__h41420,
	       x__h41432,
	       x__h41444,
	       x__h41456,
	       x__h41468,
	       x__h41480,
	       x__h41492,
	       x__h41504,
	       x__h41516,
	       x__h41528,
	       x__h41540,
	       x__h41552,
	       x__h41564,
	       x__h41576,
	       x__h41588,
	       x__h41600,
	       x__h41612,
	       x__h41624,
	       x__h41636,
	       x__h41648,
	       x__h41660,
	       x__h41672,
	       x__h41684,
	       x__h41696,
	       x__h41708,
	       x__h41720,
	       y__h15736,
	       y__h15748,
	       y__h15760,
	       y__h15772,
	       y__h15784,
	       y__h15796,
	       y__h15808,
	       y__h15820,
	       y__h15832,
	       y__h15844,
	       y__h15856,
	       y__h40977,
	       y__h40989,
	       y__h41001,
	       y__h41013,
	       y__h41025,
	       y__h41037,
	       y__h41049,
	       y__h41061,
	       y__h41073,
	       y__h41085,
	       y__h41097,
	       y__h41109,
	       y__h41121,
	       y__h41133,
	       y__h41145,
	       y__h41157,
	       y__h41169,
	       y__h41181,
	       y__h41193,
	       y__h41205,
	       y__h41217,
	       y__h41229,
	       y__h41241,
	       y__h41253,
	       y__h41265,
	       y__h41277,
	       y__h41289,
	       y__h41301,
	       y__h41313,
	       y__h41325,
	       y__h41337,
	       y__h41349,
	       y__h41361,
	       y__h41373,
	       y__h41385,
	       y__h41397,
	       y__h41409,
	       y__h41421,
	       y__h41433,
	       y__h41445,
	       y__h41457,
	       y__h41469,
	       y__h41481,
	       y__h41493,
	       y__h41505,
	       y__h41517,
	       y__h41529,
	       y__h41541,
	       y__h41553,
	       y__h41565,
	       y__h41577,
	       y__h41589,
	       y__h41601,
	       y__h41613,
	       y__h41625,
	       y__h41637,
	       y__h41649,
	       y__h41661,
	       y__h41673,
	       y__h41685,
	       y__h41697,
	       y__h41709,
	       y__h41721;
  wire [5 : 0] baseExp__h6746,
	       chosenExp__h31986,
	       chosenExp__h6745,
	       diff__h30444,
	       diff__h56742,
	       diff__h68695,
	       exp__h31971,
	       exp__h6730,
	       shamt__h5945;
  wire [4 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2614,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2632,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2658,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2675,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2596,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2600,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2609,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2628,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2670,
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2685,
	       IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2607,
	       IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2656,
	       IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2673,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2638,
	       IF_NOT_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2617,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2598,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2619,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2630,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2634,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2636,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2660,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2677,
	       _theResult___exc_code__h62050,
	       _theResult___fst__h31968,
	       _theResult___fst__h31976,
	       _theResult___fst__h6727,
	       _theResult___fst__h6735,
	       alu_outputs___1_exc_code__h62321,
	       alu_outputs___1_exc_code__h6371,
	       check__h30541,
	       check__h30880,
	       check__h31541,
	       check__h59257,
	       decoded_instr_rs2__h5316,
	       fv_out_trap_info_exc_code__h62579,
	       out__h59031,
	       trap__h31922,
	       trap__h6679;
  wire [3 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1880,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1889,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1887,
	       IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1827,
	       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920,
	       IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1863,
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1865,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1878,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1881,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1886,
	       IF_rg_cur_priv_9_EQ_0b11_833_OR_rg_cur_priv_9__ETC___d1859,
	       cur_verbosity__h1374;
  wire [2 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2009,
	       x__h68452;
  wire [1 : 0] IF_csr_regfileread_misa_BIT_18_THEN_spp9068_E_ETC__q42,
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114,
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152,
	       IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108,
	       ms_spp__h3168,
	       ms_sxl__h3157,
	       ms_uxl__h3158,
	       spliced_bits__h69119,
	       spp__h69068;
  wire IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1373,
       IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1681,
       IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1711,
       IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856,
       IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1359,
       IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1361,
       IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d2728,
       IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d835,
       IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d837,
       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2407,
       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1357,
       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1714,
       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2406,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1453,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1524,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2644,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2743,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2865,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1413,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1414,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1700,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1883,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2828,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2829,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2834,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2840,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2841,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2858,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2859,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d462,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d899,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937,
       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3101,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1364,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d844,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d847,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1536,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1775,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2216,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2772,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2870,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1511,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1521,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1726,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1738,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1884,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2214,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2863,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2895,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d3114,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3028,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1410,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d453,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d896,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2826,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2832,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2838,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2856,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d454,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d897,
       NOT_0_CONCAT_IF_IF_IF_near_mem_imem_instr__20__ETC___d2202,
       NOT_0_CONCAT_near_mem_imem_instr__20_BIT_31_39_ETC___d693,
       NOT_0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_ETC___d1609,
       NOT_IF_IF_near_mem_imem_instr__20_BITS_19_TO_1_ETC___d1375,
       NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1769,
       NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d928,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2949,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2951,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1709,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2731,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1445,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1474,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1761,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274,
       NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260,
       NOT_near_mem_imem_exc__38_625_AND_IF_near_mem__ETC___d2083,
       NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638,
       NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1980,
       NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d2045,
       NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d2071,
       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1676,
       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2079,
       NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1571,
       NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1684,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1720,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1723,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2837,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2844,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2845,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2854,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2855,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2909,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2920,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2922,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3031,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3032,
       NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2925,
       NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2965,
       NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974,
       NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3026,
       NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3035,
       NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3037,
       NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3040,
       NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d3051,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1147,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1389,
       _0b0_CONCAT_0_CONCAT_IF_IF_near_mem_imem_instr__ETC___d1397,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1370,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1490,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1498,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1508,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1518,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d851,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d915,
       _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d922,
       _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1595,
       _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1602,
       _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810,
       _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d2898,
       alu_outputs___1_addr_tag__h62920,
       alu_outputs___1_addr_tag__h62965,
       alu_outputs___1_val1_tag__h64058,
       alu_outputs_addr_tag__h62980,
       alu_outputs_val2_tag__h68920,
       b_tag__h31146,
       b_tag__h6617,
       controller_tag__h59284,
       csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1636,
       global__h58008,
       global__h64066,
       gpr_regfile_RDY_server_reset_response_get__803_ETC___d2815,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2544,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2547,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2550,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2553,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2556,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2559,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2562,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2565,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2568,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2571,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2574,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262,
       near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_8_ETC___d1838,
       near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426,
       near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1655,
       near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1803,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1381,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1401,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1421,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d859,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d930,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d944,
       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2986,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2962,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2963,
       output_stage2___1_bypass_rd_val_tag__h4612,
       rg_cur_priv_9_EQ_0b11_833_OR_rg_cur_priv_9_EQ__ETC___d1857,
       rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1444,
       rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249,
       rg_halt_914_OR_csr_regfile_interrupt_pending_r_ETC___d3057,
       rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3069,
       rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3082,
       rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3088,
       rg_state_7_EQ_2_820_AND_stage1_rg_full_16_AND__ETC___d3119,
       rg_state_7_EQ_2_820_AND_stage1_rg_full_16_OR_N_ETC___d2928,
       rs1_val_bypassed_tag__h6631,
       rs2_val_bypassed_tag__h31160,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1924,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1928,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1932,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1936,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1940,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1944,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1948,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1952,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1956,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1960,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2025,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2029,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2033,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2037,
       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333,
       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309,
       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332,
       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307,
       stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90;

  // action method hart0_server_reset_request_put
  assign RDY_hart0_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign CAN_FIRE_hart0_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign WILL_FIRE_hart0_server_reset_request_put =
	     EN_hart0_server_reset_request_put ;

  // action method hart0_server_reset_response_get
  assign RDY_hart0_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_hart0_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_hart0_server_reset_response_get =
	     EN_hart0_server_reset_response_get ;

  // value method imem_master_m_awvalid
  assign imem_master_awvalid = near_mem$imem_master_awvalid ;

  // value method imem_master_m_awaddr
  assign imem_master_awaddr = near_mem$imem_master_awaddr ;

  // value method imem_master_m_awprot
  assign imem_master_awprot = near_mem$imem_master_awprot ;

  // action method imem_master_m_awready
  assign CAN_FIRE_imem_master_m_awready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_awready = 1'd1 ;

  // value method imem_master_m_wvalid
  assign imem_master_wvalid = near_mem$imem_master_wvalid ;

  // value method imem_master_m_wdata
  assign imem_master_wdata = near_mem$imem_master_wdata ;

  // value method imem_master_m_wstrb
  assign imem_master_wstrb = near_mem$imem_master_wstrb ;

  // action method imem_master_m_wready
  assign CAN_FIRE_imem_master_m_wready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_wready = 1'd1 ;

  // action method imem_master_m_bvalid
  assign CAN_FIRE_imem_master_m_bvalid = 1'd1 ;
  assign WILL_FIRE_imem_master_m_bvalid = 1'd1 ;

  // value method imem_master_m_bready
  assign imem_master_bready = near_mem$imem_master_bready ;

  // value method imem_master_m_arvalid
  assign imem_master_arvalid = near_mem$imem_master_arvalid ;

  // value method imem_master_m_araddr
  assign imem_master_araddr = near_mem$imem_master_araddr ;

  // value method imem_master_m_arprot
  assign imem_master_arprot = near_mem$imem_master_arprot ;

  // action method imem_master_m_arready
  assign CAN_FIRE_imem_master_m_arready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_arready = 1'd1 ;

  // action method imem_master_m_rvalid
  assign CAN_FIRE_imem_master_m_rvalid = 1'd1 ;
  assign WILL_FIRE_imem_master_m_rvalid = 1'd1 ;

  // value method imem_master_m_rready
  assign imem_master_rready = near_mem$imem_master_rready ;

  // value method dmem_master_m_awvalid
  assign dmem_master_awvalid = near_mem$dmem_master_awvalid ;

  // value method dmem_master_m_awaddr
  assign dmem_master_awaddr = near_mem$dmem_master_awaddr ;

  // value method dmem_master_m_awprot
  assign dmem_master_awprot = near_mem$dmem_master_awprot ;

  // action method dmem_master_m_awready
  assign CAN_FIRE_dmem_master_m_awready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_awready = 1'd1 ;

  // value method dmem_master_m_wvalid
  assign dmem_master_wvalid = near_mem$dmem_master_wvalid ;

  // value method dmem_master_m_wdata
  assign dmem_master_wdata = near_mem$dmem_master_wdata ;

  // value method dmem_master_m_wstrb
  assign dmem_master_wstrb = near_mem$dmem_master_wstrb ;

  // action method dmem_master_m_wready
  assign CAN_FIRE_dmem_master_m_wready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_wready = 1'd1 ;

  // action method dmem_master_m_bvalid
  assign CAN_FIRE_dmem_master_m_bvalid = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_bvalid = 1'd1 ;

  // value method dmem_master_m_bready
  assign dmem_master_bready = near_mem$dmem_master_bready ;

  // value method dmem_master_m_arvalid
  assign dmem_master_arvalid = near_mem$dmem_master_arvalid ;

  // value method dmem_master_m_araddr
  assign dmem_master_araddr = near_mem$dmem_master_araddr ;

  // value method dmem_master_m_arprot
  assign dmem_master_arprot = near_mem$dmem_master_arprot ;

  // action method dmem_master_m_arready
  assign CAN_FIRE_dmem_master_m_arready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_arready = 1'd1 ;

  // action method dmem_master_m_rvalid
  assign CAN_FIRE_dmem_master_m_rvalid = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_rvalid = 1'd1 ;

  // value method dmem_master_m_rready
  assign dmem_master_rready = near_mem$dmem_master_rready ;

  // action method near_mem_slave_m_awvalid
  assign CAN_FIRE_near_mem_slave_m_awvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_awvalid = 1'd1 ;

  // value method near_mem_slave_m_awready
  assign near_mem_slave_awready = near_mem$near_mem_slave_awready ;

  // action method near_mem_slave_m_wvalid
  assign CAN_FIRE_near_mem_slave_m_wvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_wvalid = 1'd1 ;

  // value method near_mem_slave_m_wready
  assign near_mem_slave_wready = near_mem$near_mem_slave_wready ;

  // value method near_mem_slave_m_bvalid
  assign near_mem_slave_bvalid = near_mem$near_mem_slave_bvalid ;

  // value method near_mem_slave_m_bresp
  assign near_mem_slave_bresp = near_mem$near_mem_slave_bresp ;

  // action method near_mem_slave_m_bready
  assign CAN_FIRE_near_mem_slave_m_bready = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_bready = 1'd1 ;

  // action method near_mem_slave_m_arvalid
  assign CAN_FIRE_near_mem_slave_m_arvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_arvalid = 1'd1 ;

  // value method near_mem_slave_m_arready
  assign near_mem_slave_arready = near_mem$near_mem_slave_arready ;

  // value method near_mem_slave_m_rvalid
  assign near_mem_slave_rvalid = near_mem$near_mem_slave_rvalid ;

  // value method near_mem_slave_m_rresp
  assign near_mem_slave_rresp = near_mem$near_mem_slave_rresp ;

  // value method near_mem_slave_m_rdata
  assign near_mem_slave_rdata = near_mem$near_mem_slave_rdata ;

  // action method near_mem_slave_m_rready
  assign CAN_FIRE_near_mem_slave_m_rready = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_rready = 1'd1 ;

  // action method external_interrupt_req
  assign RDY_external_interrupt_req = csr_regfile$RDY_external_interrupt_req ;
  assign CAN_FIRE_external_interrupt_req =
	     csr_regfile$RDY_external_interrupt_req ;
  assign WILL_FIRE_external_interrupt_req = EN_external_interrupt_req ;

  // action method timer_interrupt_req
  assign RDY_timer_interrupt_req = csr_regfile$RDY_timer_interrupt_req ;
  assign CAN_FIRE_timer_interrupt_req = csr_regfile$RDY_timer_interrupt_req ;
  assign WILL_FIRE_timer_interrupt_req = EN_timer_interrupt_req ;

  // action method software_interrupt_req
  assign RDY_software_interrupt_req = csr_regfile$RDY_software_interrupt_req ;
  assign CAN_FIRE_software_interrupt_req =
	     csr_regfile$RDY_software_interrupt_req ;
  assign WILL_FIRE_software_interrupt_req = EN_software_interrupt_req ;

  // submodule csr_regfile
  mkCSR_RegFile csr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .csr_counter_read_fault_csr_addr(csr_regfile$csr_counter_read_fault_csr_addr),
			    .csr_counter_read_fault_priv(csr_regfile$csr_counter_read_fault_priv),
			    .csr_ret_actions_from_priv(csr_regfile$csr_ret_actions_from_priv),
			    .csr_trap_actions_exc_code(csr_regfile$csr_trap_actions_exc_code),
			    .csr_trap_actions_from_priv(csr_regfile$csr_trap_actions_from_priv),
			    .csr_trap_actions_interrupt(csr_regfile$csr_trap_actions_interrupt),
			    .csr_trap_actions_pc(csr_regfile$csr_trap_actions_pc),
			    .csr_trap_actions_xtval(csr_regfile$csr_trap_actions_xtval),
			    .external_interrupt_req_set_not_clear(csr_regfile$external_interrupt_req_set_not_clear),
			    .interrupt_pending_cur_priv(csr_regfile$interrupt_pending_cur_priv),
			    .mav_read_csr_csr_addr(csr_regfile$mav_read_csr_csr_addr),
			    .read_csr_cap_csr_addr(csr_regfile$read_csr_cap_csr_addr),
			    .read_csr_csr_addr(csr_regfile$read_csr_csr_addr),
			    .read_csr_port2_csr_addr(csr_regfile$read_csr_port2_csr_addr),
			    .software_interrupt_req_set_not_clear(csr_regfile$software_interrupt_req_set_not_clear),
			    .timer_interrupt_req_set_not_clear(csr_regfile$timer_interrupt_req_set_not_clear),
			    .write_csr_cap_cap_addr(csr_regfile$write_csr_cap_cap_addr),
			    .write_csr_cap_value(csr_regfile$write_csr_cap_value),
			    .write_csr_csr_addr(csr_regfile$write_csr_csr_addr),
			    .write_csr_word(csr_regfile$write_csr_word),
			    .EN_server_reset_request_put(csr_regfile$EN_server_reset_request_put),
			    .EN_server_reset_response_get(csr_regfile$EN_server_reset_response_get),
			    .EN_mav_read_csr(csr_regfile$EN_mav_read_csr),
			    .EN_write_csr_cap(csr_regfile$EN_write_csr_cap),
			    .EN_write_csr(csr_regfile$EN_write_csr),
			    .EN_csr_trap_actions(csr_regfile$EN_csr_trap_actions),
			    .EN_csr_ret_actions(csr_regfile$EN_csr_ret_actions),
			    .EN_csr_minstret_incr(csr_regfile$EN_csr_minstret_incr),
			    .EN_external_interrupt_req(csr_regfile$EN_external_interrupt_req),
			    .EN_timer_interrupt_req(csr_regfile$EN_timer_interrupt_req),
			    .EN_software_interrupt_req(csr_regfile$EN_software_interrupt_req),
			    .RDY_server_reset_request_put(csr_regfile$RDY_server_reset_request_put),
			    .RDY_server_reset_response_get(csr_regfile$RDY_server_reset_response_get),
			    .read_csr(csr_regfile$read_csr),
			    .read_csr_port2(),
			    .mav_read_csr(),
			    .read_csr_cap(csr_regfile$read_csr_cap),
			    .read_misa(csr_regfile$read_misa),
			    .read_mstatus(csr_regfile$read_mstatus),
			    .read_sstatus(csr_regfile$read_sstatus),
			    .read_satp(csr_regfile$read_satp),
			    .csr_trap_actions(csr_regfile$csr_trap_actions),
			    .RDY_csr_trap_actions(),
			    .csr_ret_actions(csr_regfile$csr_ret_actions),
			    .RDY_csr_ret_actions(),
			    .read_csr_minstret(csr_regfile$read_csr_minstret),
			    .read_csr_mcycle(csr_regfile$read_csr_mcycle),
			    .read_csr_mtime(),
			    .csr_counter_read_fault(csr_regfile$csr_counter_read_fault),
			    .read_csr_mip(),
			    .RDY_external_interrupt_req(csr_regfile$RDY_external_interrupt_req),
			    .RDY_timer_interrupt_req(csr_regfile$RDY_timer_interrupt_req),
			    .RDY_software_interrupt_req(csr_regfile$RDY_software_interrupt_req),
			    .interrupt_pending(csr_regfile$interrupt_pending),
			    .wfi_resume(csr_regfile$wfi_resume));

  // submodule f_reset_reqs
  FIFO20 #(.guarded(32'd1)) f_reset_reqs(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_reqs$ENQ),
					 .DEQ(f_reset_reqs$DEQ),
					 .CLR(f_reset_reqs$CLR),
					 .FULL_N(f_reset_reqs$FULL_N),
					 .EMPTY_N(f_reset_reqs$EMPTY_N));

  // submodule f_reset_rsps
  FIFO20 #(.guarded(32'd1)) f_reset_rsps(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_rsps$ENQ),
					 .DEQ(f_reset_rsps$DEQ),
					 .CLR(f_reset_rsps$CLR),
					 .FULL_N(f_reset_rsps$FULL_N),
					 .EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule gpr_regfile
  mkGPR_RegFile gpr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .clear_quarter_mask(gpr_regfile$clear_quarter_mask),
			    .clear_quarter_qid(gpr_regfile$clear_quarter_qid),
			    .read_rs1_port2_rs1(gpr_regfile$read_rs1_port2_rs1),
			    .read_rs1_rs1(gpr_regfile$read_rs1_rs1),
			    .read_rs2_rs2(gpr_regfile$read_rs2_rs2),
			    .write_rd_int_rd(gpr_regfile$write_rd_int_rd),
			    .write_rd_int_rd_val(gpr_regfile$write_rd_int_rd_val),
			    .write_rd_rd(gpr_regfile$write_rd_rd),
			    .write_rd_rd_val(gpr_regfile$write_rd_rd_val),
			    .EN_server_reset_request_put(gpr_regfile$EN_server_reset_request_put),
			    .EN_server_reset_response_get(gpr_regfile$EN_server_reset_response_get),
			    .EN_write_rd(gpr_regfile$EN_write_rd),
			    .EN_write_rd_int(gpr_regfile$EN_write_rd_int),
			    .EN_clear_quarter(gpr_regfile$EN_clear_quarter),
			    .RDY_server_reset_request_put(gpr_regfile$RDY_server_reset_request_put),
			    .RDY_server_reset_response_get(gpr_regfile$RDY_server_reset_response_get),
			    .read_rs1(gpr_regfile$read_rs1),
			    .read_rs1_port2(),
			    .read_rs2(gpr_regfile$read_rs2),
			    .is_busy(gpr_regfile$is_busy));

  // submodule near_mem
  mkNear_Mem near_mem(.CLK(CLK),
		      .RST_N(RST_N),
		      .dmem_master_arready(near_mem$dmem_master_arready),
		      .dmem_master_awready(near_mem$dmem_master_awready),
		      .dmem_master_bresp(near_mem$dmem_master_bresp),
		      .dmem_master_bvalid(near_mem$dmem_master_bvalid),
		      .dmem_master_rdata(near_mem$dmem_master_rdata),
		      .dmem_master_rresp(near_mem$dmem_master_rresp),
		      .dmem_master_rvalid(near_mem$dmem_master_rvalid),
		      .dmem_master_wready(near_mem$dmem_master_wready),
		      .dmem_req_addr(near_mem$dmem_req_addr),
		      .dmem_req_f3(near_mem$dmem_req_f3),
		      .dmem_req_mstatus_MXR(near_mem$dmem_req_mstatus_MXR),
		      .dmem_req_op(near_mem$dmem_req_op),
		      .dmem_req_priv(near_mem$dmem_req_priv),
		      .dmem_req_satp(near_mem$dmem_req_satp),
		      .dmem_req_sstatus_SUM(near_mem$dmem_req_sstatus_SUM),
		      .dmem_req_store_value(near_mem$dmem_req_store_value),
		      .imem_master_arready(near_mem$imem_master_arready),
		      .imem_master_awready(near_mem$imem_master_awready),
		      .imem_master_bresp(near_mem$imem_master_bresp),
		      .imem_master_bvalid(near_mem$imem_master_bvalid),
		      .imem_master_rdata(near_mem$imem_master_rdata),
		      .imem_master_rresp(near_mem$imem_master_rresp),
		      .imem_master_rvalid(near_mem$imem_master_rvalid),
		      .imem_master_wready(near_mem$imem_master_wready),
		      .imem_req_addr(near_mem$imem_req_addr),
		      .imem_req_f3(near_mem$imem_req_f3),
		      .imem_req_mstatus_MXR(near_mem$imem_req_mstatus_MXR),
		      .imem_req_priv(near_mem$imem_req_priv),
		      .imem_req_satp(near_mem$imem_req_satp),
		      .imem_req_sstatus_SUM(near_mem$imem_req_sstatus_SUM),
		      .imem_req_trap(near_mem$imem_req_trap),
		      .near_mem_slave_araddr(near_mem$near_mem_slave_araddr),
		      .near_mem_slave_arprot(near_mem$near_mem_slave_arprot),
		      .near_mem_slave_arvalid(near_mem$near_mem_slave_arvalid),
		      .near_mem_slave_awaddr(near_mem$near_mem_slave_awaddr),
		      .near_mem_slave_awprot(near_mem$near_mem_slave_awprot),
		      .near_mem_slave_awvalid(near_mem$near_mem_slave_awvalid),
		      .near_mem_slave_bready(near_mem$near_mem_slave_bready),
		      .near_mem_slave_rready(near_mem$near_mem_slave_rready),
		      .near_mem_slave_wdata(near_mem$near_mem_slave_wdata),
		      .near_mem_slave_wstrb(near_mem$near_mem_slave_wstrb),
		      .near_mem_slave_wvalid(near_mem$near_mem_slave_wvalid),
		      .server_fence_request_put(near_mem$server_fence_request_put),
		      .EN_server_reset_request_put(near_mem$EN_server_reset_request_put),
		      .EN_server_reset_response_get(near_mem$EN_server_reset_response_get),
		      .EN_imem_req(near_mem$EN_imem_req),
		      .EN_dmem_req(near_mem$EN_dmem_req),
		      .EN_server_fence_i_request_put(near_mem$EN_server_fence_i_request_put),
		      .EN_server_fence_i_response_get(near_mem$EN_server_fence_i_response_get),
		      .EN_server_fence_request_put(near_mem$EN_server_fence_request_put),
		      .EN_server_fence_response_get(near_mem$EN_server_fence_response_get),
		      .EN_sfence_vma(near_mem$EN_sfence_vma),
		      .RDY_server_reset_request_put(near_mem$RDY_server_reset_request_put),
		      .RDY_server_reset_response_get(near_mem$RDY_server_reset_response_get),
		      .imem_valid(near_mem$imem_valid),
		      .imem_pc(near_mem$imem_pc),
		      .imem_instr(near_mem$imem_instr),
		      .imem_exc(near_mem$imem_exc),
		      .imem_exc_code(near_mem$imem_exc_code),
		      .imem_master_awvalid(near_mem$imem_master_awvalid),
		      .imem_master_awaddr(near_mem$imem_master_awaddr),
		      .imem_master_awprot(near_mem$imem_master_awprot),
		      .imem_master_wvalid(near_mem$imem_master_wvalid),
		      .imem_master_wdata(near_mem$imem_master_wdata),
		      .imem_master_wstrb(near_mem$imem_master_wstrb),
		      .imem_master_bready(near_mem$imem_master_bready),
		      .imem_master_arvalid(near_mem$imem_master_arvalid),
		      .imem_master_araddr(near_mem$imem_master_araddr),
		      .imem_master_arprot(near_mem$imem_master_arprot),
		      .imem_master_rready(near_mem$imem_master_rready),
		      .dmem_valid(near_mem$dmem_valid),
		      .dmem_word64(near_mem$dmem_word64),
		      .dmem_st_amo_val(),
		      .dmem_exc(near_mem$dmem_exc),
		      .dmem_exc_code(near_mem$dmem_exc_code),
		      .dmem_master_awvalid(near_mem$dmem_master_awvalid),
		      .dmem_master_awaddr(near_mem$dmem_master_awaddr),
		      .dmem_master_awprot(near_mem$dmem_master_awprot),
		      .dmem_master_wvalid(near_mem$dmem_master_wvalid),
		      .dmem_master_wdata(near_mem$dmem_master_wdata),
		      .dmem_master_wstrb(near_mem$dmem_master_wstrb),
		      .dmem_master_bready(near_mem$dmem_master_bready),
		      .dmem_master_arvalid(near_mem$dmem_master_arvalid),
		      .dmem_master_araddr(near_mem$dmem_master_araddr),
		      .dmem_master_arprot(near_mem$dmem_master_arprot),
		      .dmem_master_rready(near_mem$dmem_master_rready),
		      .RDY_server_fence_i_request_put(near_mem$RDY_server_fence_i_request_put),
		      .RDY_server_fence_i_response_get(near_mem$RDY_server_fence_i_response_get),
		      .RDY_server_fence_request_put(near_mem$RDY_server_fence_request_put),
		      .RDY_server_fence_response_get(near_mem$RDY_server_fence_response_get),
		      .RDY_sfence_vma(),
		      .near_mem_slave_awready(near_mem$near_mem_slave_awready),
		      .near_mem_slave_wready(near_mem$near_mem_slave_wready),
		      .near_mem_slave_bvalid(near_mem$near_mem_slave_bvalid),
		      .near_mem_slave_bresp(near_mem$near_mem_slave_bresp),
		      .near_mem_slave_arready(near_mem$near_mem_slave_arready),
		      .near_mem_slave_rvalid(near_mem$near_mem_slave_rvalid),
		      .near_mem_slave_rresp(near_mem$near_mem_slave_rresp),
		      .near_mem_slave_rdata(near_mem$near_mem_slave_rdata));

  // submodule stage1_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage1_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage1_f_reset_reqs$ENQ),
						.DEQ(stage1_f_reset_reqs$DEQ),
						.CLR(stage1_f_reset_reqs$CLR),
						.FULL_N(stage1_f_reset_reqs$FULL_N),
						.EMPTY_N(stage1_f_reset_reqs$EMPTY_N));

  // submodule stage1_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage1_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage1_f_reset_rsps$ENQ),
						.DEQ(stage1_f_reset_rsps$DEQ),
						.CLR(stage1_f_reset_rsps$CLR),
						.FULL_N(stage1_f_reset_rsps$FULL_N),
						.EMPTY_N(stage1_f_reset_rsps$EMPTY_N));

  // submodule stage2_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage2_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage2_f_reset_reqs$ENQ),
						.DEQ(stage2_f_reset_reqs$DEQ),
						.CLR(stage2_f_reset_reqs$CLR),
						.FULL_N(stage2_f_reset_reqs$FULL_N),
						.EMPTY_N(stage2_f_reset_reqs$EMPTY_N));

  // submodule stage2_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage2_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage2_f_reset_rsps$ENQ),
						.DEQ(stage2_f_reset_rsps$DEQ),
						.CLR(stage2_f_reset_rsps$CLR),
						.FULL_N(stage2_f_reset_rsps$FULL_N),
						.EMPTY_N(stage2_f_reset_rsps$EMPTY_N));

  // submodule stage3_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage3_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage3_f_reset_reqs$ENQ),
						.DEQ(stage3_f_reset_reqs$DEQ),
						.CLR(stage3_f_reset_reqs$CLR),
						.FULL_N(stage3_f_reset_reqs$FULL_N),
						.EMPTY_N(stage3_f_reset_reqs$EMPTY_N));

  // submodule stage3_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage3_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage3_f_reset_rsps$ENQ),
						.DEQ(stage3_f_reset_rsps$DEQ),
						.CLR(stage3_f_reset_rsps$CLR),
						.FULL_N(stage3_f_reset_rsps$FULL_N),
						.EMPTY_N(stage3_f_reset_rsps$EMPTY_N));

  // rule RL_rl_show_pipe
  assign CAN_FIRE_RL_rl_show_pipe =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     rg_state != 3'd0 &&
	     rg_state != 3'd1 &&
	     rg_state != 3'd7 ;
  assign WILL_FIRE_RL_rl_show_pipe = CAN_FIRE_RL_rl_show_pipe ;

  // rule RL_rl_reset_complete
  assign CAN_FIRE_RL_rl_reset_complete =
	     gpr_regfile_RDY_server_reset_response_get__803_ETC___d2815 &&
	     rg_state == 3'd1 ;
  assign WILL_FIRE_RL_rl_reset_complete = CAN_FIRE_RL_rl_reset_complete ;

  // rule RL_rl_pipe
  assign CAN_FIRE_RL_rl_pipe =
	     rg_state_7_EQ_2_820_AND_stage1_rg_full_16_OR_N_ETC___d2928 &&
	     !gpr_regfile$is_busy ;
  assign WILL_FIRE_RL_rl_pipe = CAN_FIRE_RL_rl_pipe ;

  // rule RL_rl_stage1_restart_after_csrrx
  assign CAN_FIRE_RL_rl_stage1_restart_after_csrrx = rg_state == 3'd3 ;
  assign WILL_FIRE_RL_rl_stage1_restart_after_csrrx =
	     CAN_FIRE_RL_rl_stage1_restart_after_csrrx ;

  // rule RL_rl_stage2_nonpipe
  assign CAN_FIRE_RL_rl_stage2_nonpipe =
	     rg_state == 3'd2 && !stage3_rg_full &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd3 ;
  assign WILL_FIRE_RL_rl_stage2_nonpipe = CAN_FIRE_RL_rl_stage2_nonpipe ;

  // rule RL_rl_stage1_xRET
  assign CAN_FIRE_RL_rl_stage1_xRET =
	     rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3069 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623 &&
	     (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	      4'd5 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	      4'd6 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	      4'd7) ;
  assign WILL_FIRE_RL_rl_stage1_xRET = CAN_FIRE_RL_rl_stage1_xRET ;

  // rule RL_rl_stage1_FENCE_I
  assign CAN_FIRE_RL_rl_stage1_FENCE_I = MUX_rg_state$write_1__SEL_5 ;
  assign WILL_FIRE_RL_rl_stage1_FENCE_I = MUX_rg_state$write_1__SEL_5 ;

  // rule RL_rl_finish_FENCE_I
  assign CAN_FIRE_RL_rl_finish_FENCE_I =
	     near_mem$RDY_server_fence_i_response_get && rg_state == 3'd4 ;
  assign WILL_FIRE_RL_rl_finish_FENCE_I = CAN_FIRE_RL_rl_finish_FENCE_I ;

  // rule RL_rl_stage1_FENCE
  assign CAN_FIRE_RL_rl_stage1_FENCE = MUX_rg_state$write_1__SEL_6 ;
  assign WILL_FIRE_RL_rl_stage1_FENCE = MUX_rg_state$write_1__SEL_6 ;

  // rule RL_rl_finish_FENCE
  assign CAN_FIRE_RL_rl_finish_FENCE =
	     near_mem$RDY_server_fence_response_get && rg_state == 3'd5 ;
  assign WILL_FIRE_RL_rl_finish_FENCE = CAN_FIRE_RL_rl_finish_FENCE ;

  // rule RL_rl_stage1_SFENCE_VMA
  assign CAN_FIRE_RL_rl_stage1_SFENCE_VMA = MUX_rg_state$write_1__SEL_7 ;
  assign WILL_FIRE_RL_rl_stage1_SFENCE_VMA = MUX_rg_state$write_1__SEL_7 ;

  // rule RL_rl_finish_SFENCE_VMA
  assign CAN_FIRE_RL_rl_finish_SFENCE_VMA = rg_state == 3'd6 ;
  assign WILL_FIRE_RL_rl_finish_SFENCE_VMA =
	     CAN_FIRE_RL_rl_finish_SFENCE_VMA ;

  // rule RL_rl_stage1_WFI
  assign CAN_FIRE_RL_rl_stage1_WFI = MUX_rg_state$write_1__SEL_8 ;
  assign WILL_FIRE_RL_rl_stage1_WFI = MUX_rg_state$write_1__SEL_8 ;

  // rule RL_rl_WFI_resume
  assign CAN_FIRE_RL_rl_WFI_resume =
	     rg_state == 3'd7 && csr_regfile$wfi_resume ;
  assign WILL_FIRE_RL_rl_WFI_resume = CAN_FIRE_RL_rl_WFI_resume ;

  // rule RL_rl_reset_from_WFI
  assign CAN_FIRE_RL_rl_reset_from_WFI =
	     rg_state == 3'd7 && f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_from_WFI = MUX_rg_state$write_1__SEL_2 ;

  // rule RL_rl_stage1_trap
  assign CAN_FIRE_RL_rl_stage1_trap =
	     rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3069 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd9 ;
  assign WILL_FIRE_RL_rl_stage1_trap =
	     CAN_FIRE_RL_rl_stage1_trap && !WILL_FIRE_RL_rl_pipe ;

  // rule RL_rl_stage1_interrupt
  assign CAN_FIRE_RL_rl_stage1_interrupt =
	     csr_regfile$interrupt_pending[5] &&
	     rg_state_7_EQ_2_820_AND_stage1_rg_full_16_AND__ETC___d3119 ;
  assign WILL_FIRE_RL_rl_stage1_interrupt =
	     CAN_FIRE_RL_rl_stage1_interrupt && !WILL_FIRE_RL_rl_pipe ;

  // rule RL_rl_reset_start
  assign CAN_FIRE_RL_rl_reset_start =
	     gpr_regfile$RDY_server_reset_request_put &&
	     near_mem$RDY_server_reset_request_put &&
	     csr_regfile$RDY_server_reset_request_put &&
	     stage1_f_reset_reqs$FULL_N &&
	     stage2_f_reset_reqs$FULL_N &&
	     stage3_f_reset_reqs$FULL_N &&
	     rg_state == 3'd0 ;
  assign WILL_FIRE_RL_rl_reset_start = CAN_FIRE_RL_rl_reset_start ;

  // rule RL_stage3_rl_reset
  assign CAN_FIRE_RL_stage3_rl_reset =
	     stage3_f_reset_reqs$EMPTY_N && stage3_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage3_rl_reset = CAN_FIRE_RL_stage3_rl_reset ;

  // rule RL_stage2_rl_reset
  assign CAN_FIRE_RL_stage2_rl_reset =
	     stage2_f_reset_reqs$EMPTY_N && stage2_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage2_rl_reset = CAN_FIRE_RL_stage2_rl_reset ;

  // rule RL_stage1_rl_reset
  assign CAN_FIRE_RL_stage1_rl_reset =
	     stage1_f_reset_reqs$EMPTY_N && stage1_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage1_rl_reset = CAN_FIRE_RL_stage1_rl_reset ;

  // inputs to muxes for submodule ports
  assign MUX_near_mem$imem_req_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3035 ;
  assign MUX_near_mem$imem_req_1__SEL_3 =
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ;
  assign MUX_near_mem$imem_req_1__SEL_4 =
	     WILL_FIRE_RL_rl_stage1_trap || WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_cur_priv$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_inum$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ;
  assign MUX_rg_inum$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_stage1_trap || WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_state$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3026 ;
  assign MUX_rg_state$write_1__SEL_2 =
	     CAN_FIRE_RL_rl_reset_from_WFI && !WILL_FIRE_RL_rl_WFI_resume ;
  assign MUX_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ;
  assign MUX_rg_state$write_1__SEL_5 =
	     near_mem$RDY_server_fence_i_request_put &&
	     rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3082 ;
  assign MUX_rg_state$write_1__SEL_6 =
	     near_mem$RDY_server_fence_request_put &&
	     rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3088 ;
  assign MUX_rg_state$write_1__SEL_7 =
	     rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3069 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd4 ;
  assign MUX_rg_state$write_1__SEL_8 =
	     rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3069 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd8 ;
  assign MUX_rg_inum$write_1__VAL_1 = rg_inum + 64'd1 ;
  assign MUX_stage1_rg_full$write_1__VAL_11 =
	     (!rg_halt && !csr_regfile$interrupt_pending[5] &&
	      (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3028 ||
	       !stage1_rg_full)) ?
	       NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d3051 :
	       rg_halt_914_OR_csr_regfile_interrupt_pending_r_ETC___d3057 &&
	       stage1_rg_full ;
  assign MUX_stage2_rg_full$write_1__VAL_3 =
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3040 ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd2 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ;

  // register cfg_logdelay
  assign cfg_logdelay$D_IN = 64'h0 ;
  assign cfg_logdelay$EN = 1'b0 ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN =
	     TASK_testplusargs___d2797 ?
	       4'd2 :
	       (TASK_testplusargs___d2798 ? 4'd1 : 4'd0) ;
  assign cfg_verbosity$EN = CAN_FIRE_RL_rl_reset_start ;

  // register rg_cur_priv
  always@(MUX_rg_cur_priv$write_1__SEL_1 or
	  csr_regfile$csr_trap_actions or
	  WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or WILL_FIRE_RL_rl_reset_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_cur_priv$write_1__SEL_1:
	  rg_cur_priv$D_IN = csr_regfile$csr_trap_actions[1:0];
      WILL_FIRE_RL_rl_stage1_xRET:
	  rg_cur_priv$D_IN = csr_regfile$csr_ret_actions[65:64];
      WILL_FIRE_RL_rl_reset_start: rg_cur_priv$D_IN = 2'b11;
      default: rg_cur_priv$D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign rg_cur_priv$EN =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_halt
  assign rg_halt$D_IN = 1'd0 ;
  assign rg_halt$EN = CAN_FIRE_RL_rl_reset_start ;

  // register rg_inum
  always@(MUX_rg_inum$write_1__SEL_1 or
	  MUX_rg_inum$write_1__VAL_1 or
	  MUX_rg_inum$write_1__SEL_2 or WILL_FIRE_RL_rl_reset_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_inum$write_1__SEL_1: rg_inum$D_IN = MUX_rg_inum$write_1__VAL_1;
      MUX_rg_inum$write_1__SEL_2: rg_inum$D_IN = MUX_rg_inum$write_1__VAL_1;
      WILL_FIRE_RL_rl_reset_start: rg_inum$D_IN = 64'd1;
      default: rg_inum$D_IN = 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rg_inum$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_start_CPI_cycles
  assign rg_start_CPI_cycles$D_IN = csr_regfile$read_csr_mcycle ;
  assign rg_start_CPI_cycles$EN = CAN_FIRE_RL_rl_reset_complete ;

  // register rg_start_CPI_instrs
  assign rg_start_CPI_instrs$D_IN = csr_regfile$read_csr_minstret ;
  assign rg_start_CPI_instrs$EN = CAN_FIRE_RL_rl_reset_complete ;

  // register rg_state
  always@(MUX_rg_state$write_1__SEL_1 or
	  WILL_FIRE_RL_rl_reset_from_WFI or
	  WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_state$write_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_FENCE_I or
	  WILL_FIRE_RL_rl_stage1_FENCE or
	  WILL_FIRE_RL_rl_stage1_SFENCE_VMA or WILL_FIRE_RL_rl_stage1_WFI)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_state$write_1__SEL_1: rg_state$D_IN = 3'd3;
      WILL_FIRE_RL_rl_reset_from_WFI: rg_state$D_IN = 3'd0;
      WILL_FIRE_RL_rl_reset_start: rg_state$D_IN = 3'd1;
      MUX_rg_state$write_1__SEL_4: rg_state$D_IN = 3'd2;
      WILL_FIRE_RL_rl_stage1_FENCE_I: rg_state$D_IN = 3'd4;
      WILL_FIRE_RL_rl_stage1_FENCE: rg_state$D_IN = 3'd5;
      WILL_FIRE_RL_rl_stage1_SFENCE_VMA: rg_state$D_IN = 3'd6;
      WILL_FIRE_RL_rl_stage1_WFI: rg_state$D_IN = 3'd7;
      default: rg_state$D_IN = 3'b010 /* unspecified value */ ;
    endcase
  end
  assign rg_state$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3026 ||
	     WILL_FIRE_RL_rl_reset_from_WFI ||
	     WILL_FIRE_RL_rl_reset_start ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ||
	     WILL_FIRE_RL_rl_stage1_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_FENCE ||
	     WILL_FIRE_RL_rl_stage1_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_stage1_WFI ;

  // register stage1_rg_ddc
  assign stage1_rg_ddc$D_IN =
	     { alu_outputs_val2_tag__h68920,
	       alu_outputs_val2_capability__h68921 } ;
  assign stage1_rg_ddc$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974 &&
	     near_mem$imem_instr[6:0] == 7'b1011011 &&
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2986 &&
	     alu_outputs_addr_capability__h62981[4:0] == 5'd1 ;

  // register stage1_rg_full
  always@(WILL_FIRE_RL_stage1_rl_reset or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  WILL_FIRE_RL_rl_stage1_trap or
	  WILL_FIRE_RL_rl_WFI_resume or
	  WILL_FIRE_RL_rl_finish_SFENCE_VMA or
	  WILL_FIRE_RL_rl_finish_FENCE or
	  WILL_FIRE_RL_rl_finish_FENCE_I or
	  WILL_FIRE_RL_rl_stage1_xRET or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  WILL_FIRE_RL_rl_stage1_restart_after_csrrx or
	  WILL_FIRE_RL_rl_pipe or
	  MUX_stage1_rg_full$write_1__VAL_11 or
	  WILL_FIRE_RL_rl_reset_complete)
  case (1'b1)
    WILL_FIRE_RL_stage1_rl_reset: stage1_rg_full$D_IN = 1'd0;
    WILL_FIRE_RL_rl_stage1_interrupt || WILL_FIRE_RL_rl_stage1_trap ||
    WILL_FIRE_RL_rl_WFI_resume ||
    WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
    WILL_FIRE_RL_rl_finish_FENCE ||
    WILL_FIRE_RL_rl_finish_FENCE_I ||
    WILL_FIRE_RL_rl_stage1_xRET ||
    WILL_FIRE_RL_rl_stage2_nonpipe ||
    WILL_FIRE_RL_rl_stage1_restart_after_csrrx:
	stage1_rg_full$D_IN = 1'd1;
    WILL_FIRE_RL_rl_pipe:
	stage1_rg_full$D_IN = MUX_stage1_rg_full$write_1__VAL_11;
    WILL_FIRE_RL_rl_reset_complete: stage1_rg_full$D_IN = 1'd1;
    default: stage1_rg_full$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign stage1_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_stage1_rl_reset ||
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ;

  // register stage1_rg_run_state
  assign stage1_rg_run_state$D_IN = 1'd1 ;
  assign stage1_rg_run_state$EN = CAN_FIRE_RL_stage1_rl_reset ;

  // register stage2_rg_f5
  assign stage2_rg_f5$D_IN = 5'h0 ;
  assign stage2_rg_f5$EN = 1'b0 ;

  // register stage2_rg_full
  assign stage2_rg_full$D_IN =
	     !WILL_FIRE_RL_stage2_rl_reset &&
	     !WILL_FIRE_RL_rl_stage2_nonpipe &&
	     MUX_stage2_rg_full$write_1__VAL_3 ;
  assign stage2_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_stage2_rl_reset ;

  // register stage2_rg_run_state
  assign stage2_rg_run_state$D_IN = 1'd1 ;
  assign stage2_rg_run_state$EN = CAN_FIRE_RL_stage2_rl_reset ;

  // register stage2_rg_stage2
  assign stage2_rg_stage2$D_IN =
	     { rg_cur_priv,
	       near_mem$imem_pc,
	       near_mem$imem_instr,
	       near_mem$imem_instr[6:0],
	       near_mem$imem_instr[11:7],
	       near_mem$imem_instr[19:15],
	       decoded_instr_rs2__h5316,
	       near_mem$imem_instr[31:27],
	       near_mem$imem_instr[31:20],
	       near_mem$imem_instr[14:12],
	       near_mem$imem_instr[31:27],
	       near_mem$imem_instr[31:25],
	       funct10__h6030,
	       near_mem$imem_instr[31:20],
	       near_mem$imem_instr[31:25],
	       near_mem$imem_instr[11:7],
	       near_mem$imem_instr[31],
	       near_mem$imem_instr[7],
	       near_mem$imem_instr[30:25],
	       near_mem$imem_instr[11:8],
	       1'b0,
	       near_mem$imem_instr[31:12],
	       near_mem$imem_instr[31],
	       near_mem$imem_instr[19:12],
	       near_mem$imem_instr[20],
	       near_mem$imem_instr[30:21],
	       1'b0,
	       near_mem$imem_instr[27:20],
	       near_mem$imem_instr[26:25],
	       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021,
	       fv_out_data_to_stage2_rd__h5766,
	       near_mem$imem_instr[6:0] == 7'b1110011 &&
	       near_mem$imem_instr[14:12] != 3'b0 &&
	       near_mem$imem_instr[14:12] != 3'b100 &&
	       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2079,
	       near_mem$imem_instr[6:0] == 7'b1011011 &&
	       near_mem$imem_instr[14:12] == 3'b0 &&
	       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2986,
	       alu_outputs_addr_tag__h62980,
	       alu_outputs_addr_capability__h62981,
	       near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2440,
	       alu_outputs_val2_tag__h68920,
	       alu_outputs_val2_capability__h68921 } ;
  assign stage2_rg_stage2$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974 ;

  // register stage3_rg_full
  assign stage3_rg_full$D_IN =
	     !WILL_FIRE_RL_stage3_rl_reset &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ;
  assign stage3_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_stage3_rl_reset ;

  // register stage3_rg_run_state
  assign stage3_rg_run_state$D_IN = 1'd1 ;
  assign stage3_rg_run_state$EN = CAN_FIRE_RL_stage3_rl_reset ;

  // register stage3_rg_stage3
  assign stage3_rg_stage3$D_IN =
	     { stage2_rg_stage2[644:549],
	       stage2_rg_stage2[646:645],
	       stage2_rg_stage2[396:394] != 3'd3 &&
	       (stage2_rg_stage2[396:394] == 3'd0 ||
		near_mem$dmem_valid && !near_mem$dmem_exc),
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2[388],
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186,
	       stage2_rg_stage2[128:0] } ;
  assign stage3_rg_stage3$EN = MUX_rg_inum$write_1__SEL_1 ;

  // submodule csr_regfile
  assign csr_regfile$csr_counter_read_fault_csr_addr =
	     near_mem$imem_instr[31:20] ;
  assign csr_regfile$csr_counter_read_fault_priv = rg_cur_priv ;
  always@(IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920)
  begin
    case (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920)
      4'd5: csr_regfile$csr_ret_actions_from_priv = 2'b11;
      4'd6: csr_regfile$csr_ret_actions_from_priv = 2'b01;
      default: csr_regfile$csr_ret_actions_from_priv = 2'b0;
    endcase
  end
  always@(WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$interrupt_pending or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  near_mem$dmem_exc_code or
	  WILL_FIRE_RL_rl_stage1_trap or fv_out_trap_info_exc_code__h62579)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_interrupt:
	  csr_regfile$csr_trap_actions_exc_code =
	      csr_regfile$interrupt_pending[4:0];
      WILL_FIRE_RL_rl_stage2_nonpipe:
	  csr_regfile$csr_trap_actions_exc_code = near_mem$dmem_exc_code;
      WILL_FIRE_RL_rl_stage1_trap:
	  csr_regfile$csr_trap_actions_exc_code =
	      fv_out_trap_info_exc_code__h62579;
      default: csr_regfile$csr_trap_actions_exc_code =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign csr_regfile$csr_trap_actions_from_priv = rg_cur_priv ;
  assign csr_regfile$csr_trap_actions_interrupt =
	     !WILL_FIRE_RL_rl_stage2_nonpipe && !WILL_FIRE_RL_rl_stage1_trap ;
  assign csr_regfile$csr_trap_actions_pc =
	     WILL_FIRE_RL_rl_stage2_nonpipe ?
	       stage2_rg_stage2[644:581] :
	       near_mem$imem_pc ;
  always@(WILL_FIRE_RL_rl_stage1_interrupt or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  stage2_rg_stage2 or WILL_FIRE_RL_rl_stage1_trap or value__h62828)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_interrupt:
	  csr_regfile$csr_trap_actions_xtval = 64'd0;
      WILL_FIRE_RL_rl_stage2_nonpipe:
	  csr_regfile$csr_trap_actions_xtval = stage2_rg_stage2[321:258];
      WILL_FIRE_RL_rl_stage1_trap:
	  csr_regfile$csr_trap_actions_xtval = value__h62828;
      default: csr_regfile$csr_trap_actions_xtval =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign csr_regfile$external_interrupt_req_set_not_clear =
	     external_interrupt_req_set_not_clear ;
  assign csr_regfile$interrupt_pending_cur_priv = rg_cur_priv ;
  assign csr_regfile$mav_read_csr_csr_addr = 12'h0 ;
  assign csr_regfile$read_csr_cap_csr_addr = decoded_instr_rs2__h5316 ;
  assign csr_regfile$read_csr_csr_addr = near_mem$imem_instr[31:20] ;
  assign csr_regfile$read_csr_port2_csr_addr = 12'h0 ;
  assign csr_regfile$software_interrupt_req_set_not_clear =
	     software_interrupt_req_set_not_clear ;
  assign csr_regfile$timer_interrupt_req_set_not_clear =
	     timer_interrupt_req_set_not_clear ;
  assign csr_regfile$write_csr_cap_cap_addr =
	     alu_outputs_addr_capability__h62981[4:0] ;
  assign csr_regfile$write_csr_cap_value =
	     { alu_outputs_val2_tag__h68920,
	       alu_outputs_val2_capability__h68921 } ;
  assign csr_regfile$write_csr_csr_addr =
	     alu_outputs_addr_capability__h62981[11:0] ;
  assign csr_regfile$write_csr_word =
	     alu_outputs_val2_capability__h68921[63:0] ;
  assign csr_regfile$EN_server_reset_request_put =
	     CAN_FIRE_RL_rl_reset_start ;
  assign csr_regfile$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign csr_regfile$EN_mav_read_csr = 1'b0 ;
  assign csr_regfile$EN_write_csr_cap =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974 &&
	     near_mem$imem_instr[6:0] == 7'b1011011 &&
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2986 &&
	     alu_outputs_addr_capability__h62981[4:0] != 5'd1 ;
  assign csr_regfile$EN_write_csr =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974 &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2079 ;
  assign csr_regfile$EN_csr_trap_actions =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_trap ;
  assign csr_regfile$EN_csr_ret_actions = CAN_FIRE_RL_rl_stage1_xRET ;
  assign csr_regfile$EN_csr_minstret_incr =
	     WILL_FIRE_RL_rl_pipe && stage3_rg_full &&
	     (!stage3_rg_stage3[270] ||
	      stage3_rg_stage3[269:258] != 12'hB02 &&
	      stage3_rg_stage3[269:258] != 12'hB82) ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign csr_regfile$EN_external_interrupt_req = EN_external_interrupt_req ;
  assign csr_regfile$EN_timer_interrupt_req = EN_timer_interrupt_req ;
  assign csr_regfile$EN_software_interrupt_req = EN_software_interrupt_req ;

  // submodule f_reset_reqs
  assign f_reset_reqs$ENQ = EN_hart0_server_reset_request_put ;
  assign f_reset_reqs$DEQ = 1'b0 ;
  assign f_reset_reqs$CLR = 1'b0 ;

  // submodule f_reset_rsps
  assign f_reset_rsps$ENQ =
	     gpr_regfile_RDY_server_reset_response_get__803_ETC___d2815 &&
	     rg_state == 3'd1 ;
  assign f_reset_rsps$DEQ = EN_hart0_server_reset_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule gpr_regfile
  assign gpr_regfile$clear_quarter_mask = 8'h0 ;
  assign gpr_regfile$clear_quarter_qid = 2'h0 ;
  assign gpr_regfile$read_rs1_port2_rs1 = 5'h0 ;
  assign gpr_regfile$read_rs1_rs1 = near_mem$imem_instr[19:15] ;
  assign gpr_regfile$read_rs2_rs2 = decoded_instr_rs2__h5316 ;
  assign gpr_regfile$write_rd_int_rd = 5'h0 ;
  assign gpr_regfile$write_rd_int_rd_val = 64'h0 ;
  assign gpr_regfile$write_rd_rd = stage3_rg_stage3[275:271] ;
  assign gpr_regfile$write_rd_rd_val = stage3_rg_stage3[257:129] ;
  assign gpr_regfile$EN_server_reset_request_put =
	     CAN_FIRE_RL_rl_reset_start ;
  assign gpr_regfile$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign gpr_regfile$EN_write_rd =
	     WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[276] ;
  assign gpr_regfile$EN_write_rd_int = 1'b0 ;
  assign gpr_regfile$EN_clear_quarter = 1'b0 ;

  // submodule near_mem
  assign near_mem$dmem_master_arready = dmem_master_arready ;
  assign near_mem$dmem_master_awready = dmem_master_awready ;
  assign near_mem$dmem_master_bresp = dmem_master_bresp ;
  assign near_mem$dmem_master_bvalid = dmem_master_bvalid ;
  assign near_mem$dmem_master_rdata = dmem_master_rdata ;
  assign near_mem$dmem_master_rresp = dmem_master_rresp ;
  assign near_mem$dmem_master_rvalid = dmem_master_rvalid ;
  assign near_mem$dmem_master_wready = dmem_master_wready ;
  assign near_mem$dmem_req_addr = alu_outputs_addr_capability__h62981[63:0] ;
  assign near_mem$dmem_req_f3 = near_mem$imem_instr[14:12] ;
  assign near_mem$dmem_req_mstatus_MXR = csr_regfile$read_mstatus[19] ;
  assign near_mem$dmem_req_op =
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 !=
	     3'd1 ;
  assign near_mem$dmem_req_priv =
	     csr_regfile$read_mstatus[17] ?
	       csr_regfile$read_mstatus[12:11] :
	       rg_cur_priv ;
  assign near_mem$dmem_req_satp = csr_regfile$read_satp ;
  assign near_mem$dmem_req_sstatus_SUM = csr_regfile$read_sstatus[18] ;
  assign near_mem$dmem_req_store_value =
	     alu_outputs_val2_capability__h68921[63:0] ;
  assign near_mem$imem_master_arready = imem_master_arready ;
  assign near_mem$imem_master_awready = imem_master_awready ;
  assign near_mem$imem_master_bresp = imem_master_bresp ;
  assign near_mem$imem_master_bvalid = imem_master_bvalid ;
  assign near_mem$imem_master_rdata = imem_master_rdata ;
  assign near_mem$imem_master_rresp = imem_master_rresp ;
  assign near_mem$imem_master_rvalid = imem_master_rvalid ;
  assign near_mem$imem_master_wready = imem_master_wready ;
  always@(WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or
	  MUX_near_mem$imem_req_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$csr_trap_actions or
	  WILL_FIRE_RL_rl_reset_complete or
	  pc_reset_value or
	  MUX_near_mem$imem_req_1__SEL_1 or
	  fv_out_next_pc__h5702 or MUX_near_mem$imem_req_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_xRET:
	  near_mem$imem_req_addr = csr_regfile$csr_ret_actions[129:66];
      MUX_near_mem$imem_req_1__SEL_4 || WILL_FIRE_RL_rl_stage1_interrupt:
	  near_mem$imem_req_addr = csr_regfile$csr_trap_actions[193:130];
      WILL_FIRE_RL_rl_reset_complete: near_mem$imem_req_addr = pc_reset_value;
      MUX_near_mem$imem_req_1__SEL_1:
	  near_mem$imem_req_addr = fv_out_next_pc__h5702;
      MUX_near_mem$imem_req_1__SEL_3:
	  near_mem$imem_req_addr = fv_out_next_pc__h5702;
      default: near_mem$imem_req_addr =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign near_mem$imem_req_f3 = 3'b010 ;
  assign near_mem$imem_req_mstatus_MXR =
	     (MUX_near_mem$imem_req_1__SEL_1 ||
	      WILL_FIRE_RL_rl_reset_complete ||
	      MUX_near_mem$imem_req_1__SEL_3 ||
	      MUX_near_mem$imem_req_1__SEL_4 ||
	      WILL_FIRE_RL_rl_stage1_xRET) ?
	       csr_regfile$read_mstatus[19] :
	       csr_regfile$csr_trap_actions[85] ;
  always@(WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or
	  MUX_near_mem$imem_req_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$csr_trap_actions or
	  MUX_near_mem$imem_req_1__SEL_1 or
	  WILL_FIRE_RL_rl_reset_complete or
	  MUX_near_mem$imem_req_1__SEL_3 or rg_cur_priv)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_xRET:
	  near_mem$imem_req_priv = csr_regfile$csr_ret_actions[65:64];
      MUX_near_mem$imem_req_1__SEL_4 || WILL_FIRE_RL_rl_stage1_interrupt:
	  near_mem$imem_req_priv = csr_regfile$csr_trap_actions[1:0];
      MUX_near_mem$imem_req_1__SEL_1 || WILL_FIRE_RL_rl_reset_complete ||
      MUX_near_mem$imem_req_1__SEL_3:
	  near_mem$imem_req_priv = rg_cur_priv;
      default: near_mem$imem_req_priv = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign near_mem$imem_req_satp = csr_regfile$read_satp ;
  assign near_mem$imem_req_sstatus_SUM =
	     (MUX_near_mem$imem_req_1__SEL_1 ||
	      WILL_FIRE_RL_rl_reset_complete ||
	      MUX_near_mem$imem_req_1__SEL_3 ||
	      MUX_near_mem$imem_req_1__SEL_4 ||
	      WILL_FIRE_RL_rl_stage1_xRET) ?
	       csr_regfile$read_sstatus[18] :
	       csr_regfile$csr_trap_actions[84] ;
  assign near_mem$imem_req_trap = !MUX_near_mem$imem_req_1__SEL_1 ;
  assign near_mem$near_mem_slave_araddr = near_mem_slave_araddr ;
  assign near_mem$near_mem_slave_arprot = near_mem_slave_arprot ;
  assign near_mem$near_mem_slave_arvalid = near_mem_slave_arvalid ;
  assign near_mem$near_mem_slave_awaddr = near_mem_slave_awaddr ;
  assign near_mem$near_mem_slave_awprot = near_mem_slave_awprot ;
  assign near_mem$near_mem_slave_awvalid = near_mem_slave_awvalid ;
  assign near_mem$near_mem_slave_bready = near_mem_slave_bready ;
  assign near_mem$near_mem_slave_rready = near_mem_slave_rready ;
  assign near_mem$near_mem_slave_wdata = near_mem_slave_wdata ;
  assign near_mem$near_mem_slave_wstrb = near_mem_slave_wstrb ;
  assign near_mem$near_mem_slave_wvalid = near_mem_slave_wvalid ;
  assign near_mem$server_fence_request_put =
	     8'b10101010 /* unspecified value */  ;
  assign near_mem$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_start ;
  assign near_mem$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign near_mem$EN_imem_req =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3035 ||
	     WILL_FIRE_RL_rl_reset_complete ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_xRET ;
  assign near_mem$EN_dmem_req =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974 &&
	     (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 ==
	      3'd1 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 ==
	      3'd2) ;
  assign near_mem$EN_server_fence_i_request_put =
	     MUX_rg_state$write_1__SEL_5 ;
  assign near_mem$EN_server_fence_i_response_get =
	     CAN_FIRE_RL_rl_finish_FENCE_I ;
  assign near_mem$EN_server_fence_request_put = MUX_rg_state$write_1__SEL_6 ;
  assign near_mem$EN_server_fence_response_get = CAN_FIRE_RL_rl_finish_FENCE ;
  assign near_mem$EN_sfence_vma = MUX_rg_state$write_1__SEL_7 ;

  // submodule stage1_f_reset_reqs
  assign stage1_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage1_f_reset_reqs$DEQ = CAN_FIRE_RL_stage1_rl_reset ;
  assign stage1_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage1_f_reset_rsps
  assign stage1_f_reset_rsps$ENQ = CAN_FIRE_RL_stage1_rl_reset ;
  assign stage1_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage1_f_reset_rsps$CLR = 1'b0 ;

  // submodule stage2_f_reset_reqs
  assign stage2_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage2_f_reset_reqs$DEQ = CAN_FIRE_RL_stage2_rl_reset ;
  assign stage2_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage2_f_reset_rsps
  assign stage2_f_reset_rsps$ENQ = CAN_FIRE_RL_stage2_rl_reset ;
  assign stage2_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage2_f_reset_rsps$CLR = 1'b0 ;

  // submodule stage3_f_reset_reqs
  assign stage3_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage3_f_reset_reqs$DEQ = CAN_FIRE_RL_stage3_rl_reset ;
  assign stage3_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage3_f_reset_rsps
  assign stage3_f_reset_rsps$ENQ = CAN_FIRE_RL_stage3_rl_reset ;
  assign stage3_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage3_f_reset_rsps$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1373 =
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1361 ?
	       !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1364 :
	       (IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367 ?
		  !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1370 :
		  b__h56897 != 20'b0) ;
  assign IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1681 =
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d837 ?
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d844 :
	       (IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d847 ?
		  _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d851 :
		  b__h56897 == 20'b0) ;
  assign IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1711 =
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1361 ?
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1364 :
	       (IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367 ?
		  _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1370 :
		  b__h56897 == 20'b0) ;
  assign IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856 =
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d837 ?
	       !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d844 :
	       (IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d847 ?
		  !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d851 :
		  b__h56897 != 20'b0) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1359 =
	     exp__h31971 <= rs1_val_bypassed_capability__h6632[110:105] ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1361 =
	     exp__h31971 == rs1_val_bypassed_capability__h6632[110:105] ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d2728 =
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1359 &&
	     IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1711 &&
	     (near_mem$imem_instr[31:25] != 7'b0001001 ||
	      IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1714) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d835 =
	     exp__h6730 <= rs1_val_bypassed_capability__h6632[110:105] ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d837 =
	     exp__h6730 == rs1_val_bypassed_capability__h6632[110:105] ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1211 =
	     rs2_val_bypassed_capability__h31161[62] ?
	       7'd1 :
	       (rs2_val_bypassed_capability__h31161[61] ?
		  7'd2 :
		  (rs2_val_bypassed_capability__h31161[60] ?
		     7'd3 :
		     (rs2_val_bypassed_capability__h31161[59] ?
			7'd4 :
			(rs2_val_bypassed_capability__h31161[58] ?
			   7'd5 :
			   (rs2_val_bypassed_capability__h31161[57] ?
			      7'd6 :
			      (rs2_val_bypassed_capability__h31161[56] ?
				 7'd7 :
				 (rs2_val_bypassed_capability__h31161[55] ?
				    7'd8 :
				    (rs2_val_bypassed_capability__h31161[54] ?
				       7'd9 :
				       (rs2_val_bypassed_capability__h31161[53] ?
					  7'd10 :
					  (rs2_val_bypassed_capability__h31161[52] ?
					     7'd11 :
					     (rs2_val_bypassed_capability__h31161[51] ?
						7'd12 :
						(rs2_val_bypassed_capability__h31161[50] ?
						   7'd13 :
						   (rs2_val_bypassed_capability__h31161[49] ?
						      7'd14 :
						      (rs2_val_bypassed_capability__h31161[48] ?
							 7'd15 :
							 (rs2_val_bypassed_capability__h31161[47] ?
							    7'd16 :
							    (rs2_val_bypassed_capability__h31161[46] ?
							       7'd17 :
							       (rs2_val_bypassed_capability__h31161[45] ?
								  7'd18 :
								  (rs2_val_bypassed_capability__h31161[44] ?
								     7'd19 :
								     (rs2_val_bypassed_capability__h31161[43] ?
									7'd20 :
									(rs2_val_bypassed_capability__h31161[42] ?
									   7'd21 :
									   (rs2_val_bypassed_capability__h31161[41] ?
									      7'd22 :
									      (rs2_val_bypassed_capability__h31161[40] ?
										 7'd23 :
										 (rs2_val_bypassed_capability__h31161[39] ?
										    7'd24 :
										    (rs2_val_bypassed_capability__h31161[38] ?
										       7'd25 :
										       (rs2_val_bypassed_capability__h31161[37] ?
											  7'd26 :
											  (rs2_val_bypassed_capability__h31161[36] ?
											     7'd27 :
											     (rs2_val_bypassed_capability__h31161[35] ?
												7'd28 :
												(rs2_val_bypassed_capability__h31161[34] ?
												   7'd29 :
												   (rs2_val_bypassed_capability__h31161[33] ?
												      7'd30 :
												      (rs2_val_bypassed_capability__h31161[32] ?
													 7'd31 :
													 (rs2_val_bypassed_capability__h31161[31] ?
													    7'd32 :
													    (rs2_val_bypassed_capability__h31161[30] ?
													       7'd33 :
													       (rs2_val_bypassed_capability__h31161[29] ?
														  7'd34 :
														  (rs2_val_bypassed_capability__h31161[28] ?
														     7'd35 :
														     (rs2_val_bypassed_capability__h31161[27] ?
															7'd36 :
															(rs2_val_bypassed_capability__h31161[26] ?
															   7'd37 :
															   (rs2_val_bypassed_capability__h31161[25] ?
															      7'd38 :
															      (rs2_val_bypassed_capability__h31161[24] ?
																 7'd39 :
																 (rs2_val_bypassed_capability__h31161[23] ?
																    7'd40 :
																    (rs2_val_bypassed_capability__h31161[22] ?
																       7'd41 :
																       (rs2_val_bypassed_capability__h31161[21] ?
																	  7'd42 :
																	  (rs2_val_bypassed_capability__h31161[20] ?
																	     7'd43 :
																	     (rs2_val_bypassed_capability__h31161[19] ?
																		7'd44 :
																		(rs2_val_bypassed_capability__h31161[18] ?
																		   7'd45 :
																		   (rs2_val_bypassed_capability__h31161[17] ?
																		      7'd46 :
																		      (rs2_val_bypassed_capability__h31161[16] ?
																			 7'd47 :
																			 (rs2_val_bypassed_capability__h31161[15] ?
																			    7'd48 :
																			    (rs2_val_bypassed_capability__h31161[14] ?
																			       7'd49 :
																			       (rs2_val_bypassed_capability__h31161[13] ?
																				  7'd50 :
																				  (rs2_val_bypassed_capability__h31161[12] ?
																				     7'd51 :
																				     (rs2_val_bypassed_capability__h31161[11] ?
																					7'd52 :
																					(rs2_val_bypassed_capability__h31161[10] ?
																					   7'd53 :
																					   (rs2_val_bypassed_capability__h31161[9] ?
																					      7'd54 :
																					      (rs2_val_bypassed_capability__h31161[8] ?
																						 7'd55 :
																						 (rs2_val_bypassed_capability__h31161[7] ?
																						    7'd56 :
																						    (rs2_val_bypassed_capability__h31161[6] ?
																						       7'd57 :
																						       (rs2_val_bypassed_capability__h31161[5] ?
																							  7'd58 :
																							  (rs2_val_bypassed_capability__h31161[4] ?
																							     7'd59 :
																							     (rs2_val_bypassed_capability__h31161[3] ?
																								7'd60 :
																								(rs2_val_bypassed_capability__h31161[2] ?
																								   7'd61 :
																								   (rs2_val_bypassed_capability__h31161[1] ?
																								      7'd62 :
																								      (rs2_val_bypassed_capability__h31161[0] ?
																									 7'd63 :
																									 7'd64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1880 =
	     rs2_val_bypassed_capability__h31161[104] ?
	       ((!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1389 ||
		 !_0b0_CONCAT_0_CONCAT_IF_IF_near_mem_imem_instr__ETC___d1397) ?
		  4'd9 :
		  4'd0) :
	       4'd0 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1889 =
	     (IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1453 ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1524) ?
	       4'd9 :
	       ((!decoded_instr_rs2__h5316[3] ||
		 decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		 !decoded_instr_rs2__h5316[2] ||
		 decoded_instr_rs2__h5316[1:0] == 2'b0) ?
		  4'd0 :
		  4'd9) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2009 =
	     (IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1453 ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1524) ?
	       3'd0 :
	       ((!decoded_instr_rs2__h5316[3] ||
		 decoded_instr_rs2__h5316[2:0] == 3'b101) ?
		  3'd1 :
		  ((!decoded_instr_rs2__h5316[2] ||
		    decoded_instr_rs2__h5316[1:0] == 2'b0) ?
		     3'd2 :
		     3'd0)) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2407 =
	     (rs2_val_bypassed_capability__h31161[110:105] ==
	      rs1_val_bypassed_capability__h6632[110:105]) ?
	       b__h31282 == b__h56897 :
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2406 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2614 =
	     rs2_val_bypassed_capability__h31161[104] ?
	       5'd21 :
	       (IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937 ?
		  (b_capability__h31159[122] ? 5'd16 : 5'd20) :
		  5'd24) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2632 =
	     rs2_val_bypassed_capability__h31161[104] ?
	       ((!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1389 ||
		 !_0b0_CONCAT_0_CONCAT_IF_IF_near_mem_imem_instr__ETC___d1397) ?
		  5'd19 :
		  5'd2) :
	       5'd2 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2658 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2644 ?
	       ((rs1_val_bypassed_capability__h6632[114] ||
		 !rs2_val_bypassed_capability__h31161[114]) ?
		  5'd20 :
		  IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2656) :
	       5'd24 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2675 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2644 ?
	       ((rs1_val_bypassed_capability__h6632[114] ||
		 !rs2_val_bypassed_capability__h31161[114]) ?
		  5'd20 :
		  IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2673) :
	       5'd24 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1357 =
	     baseExp__h6746 <= chosenExp__h31986 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1714 =
	     IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1357 &&
	     _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1147 &&
	     (rs1_val_bypassed_capability__h6632[63:0] & y__h43246) == 64'd0 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2406 =
	     (diff__h68695 < 6'd20) ?
	       { 1'b0, b__h56897 } == { 1'b0, b__h31282 } >> diff__h68695 :
	       b__h56897 == 20'b0 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2596 =
	     (rs1_val_bypassed_capability__h6632[104] ||
	      !IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d835 ||
	      IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856) ?
	       trap__h6679 :
	       5'd2 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2600 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       ((near_mem$imem_instr[19:15] == 5'd0 ||
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
		  5'd18 :
		  5'd16) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2609 =
	     (rs1_val_bypassed_capability__h6632[104] ||
	      rs2_val_bypassed_capability__h31161[104]) ?
	       5'd21 :
	       (b_capability__h31159[120] ?
		  IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2607 :
		  5'd20) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2628 =
	     (rs1_val_bypassed_capability__h6632[104] ||
	      !IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1359 ||
	      IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1373) ?
	       trap__h31922 :
	       ((near_mem$imem_instr[31:25] == 7'b0001001 &&
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
		 NOT_IF_IF_near_mem_imem_instr__20_BITS_19_TO_1_ETC___d1375) ?
		  5'd23 :
		  5'd2) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2670 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       (({ b_capability__h31159[95:84],
		   b_capability__h31159[75:64] } ==
		 b_capability__h6630[23:0]) ?
		  (b_capability__h6630[122] ? 5'd16 : 5'd20) :
		  5'd24) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1453 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 :
	       !stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1524 =
	     controller_capability__h59285[104] ||
	     decoded_instr_rs2__h5316[3:2] == 2'b11 ||
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1474 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1521 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2383 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900 ||
	      rs2_val_bypassed_capability__h31161[63:0] ==
	      64'hFFFFFFFFFFFFFFFF) ?
	       rs1_val_bypassed_capability__h6632 :
	       { b_capability__h6630[127:105],
		 1'b1,
		 rs1_val_bypassed_capability__h6632[103:84],
		 b_capability__h31159[19:0],
		 rs1_val_bypassed_capability__h6632[63:0] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2644 =
	     rs2_val_bypassed_capability__h31161[83:64] ==
	     rs1_val_bypassed_capability__h6632[83:64] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2685 =
	     (decoded_instr_rs2__h5316[3:2] == 2'b11) ?
	       5'd2 :
	       (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1474 ?
		  5'd20 :
		  (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1521 ?
		     5'd19 :
		     5'd16)) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2743 =
	     controller_tag__h59284 &&
	     (NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1769 ||
	      !controller_capability__h59285[104] &&
	      decoded_instr_rs2__h5316[3:2] == 2'b11) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2865 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 :
	       stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 =
	     rs2_val_bypassed_capability__h31161[63:0] <=
	     64'h00000000000FFFFF ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1413 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       b_tag__h31146 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1414 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) &&
	       b_tag__h31146 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1413 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1700 =
	     b_capability__h31159[120] &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d915 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d922 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1883 =
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1414 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31161[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1700 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2828 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2826 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2829 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2826 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2828 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2834 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2832 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2832 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2834 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2840 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2838 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2841 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2838 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2840 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2858 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2856 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2859 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2856 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2858 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_capability__h4621 :
	       b_capability__h6618 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_capability__h4621 :
	       b_capability__h31147 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       b_tag__h6617 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) &&
	       b_tag__h6617 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d462 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d454 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d454 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d462 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d899 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d897 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d897 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d899 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937 =
	     { b_capability__h6630[95:84], b_capability__h6630[75:64] } ==
	     b_capability__h31159[23:0] ;
  assign IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2607 =
	     (!_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d915 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d922) ?
	       5'd19 :
	       (IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 ?
		  5'd16 :
		  5'd27) ;
  assign IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2656 =
	     (!_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d915 ||
	      x8540_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q43[19:0] !=
	      b__h31282) ?
	       5'd19 :
	       5'd26 ;
  assign IF_NOT_0b0_CONCAT_IF_IF_near_mem_imem_instr__2_ETC___d2673 =
	     (!_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d915 ||
	      x8540_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q43[19:0] !=
	      b__h31282) ?
	       5'd19 :
	       out__h59031 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1887 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1445 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       4'd9 :
	       4'd0 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2396 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1445 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       { 125'd0, x__h68452 } :
	       ccsr_val_capability__h64132 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2638 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1445 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       alu_outputs___1_exc_code__h62321 :
	       5'd2 ;
  assign IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1827 =
	     NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 ?
	       4'd9 :
	       4'd0 ;
  assign IF_NOT_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2617 =
	     (rs1_val_bypassed_tag__h6631 && rs2_val_bypassed_tag__h31160 &&
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705) ?
	       5'd2 :
	       check__h31541 ;
  assign IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 =
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ?
	       4'd9 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1918 ;
  assign IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3101 =
	     near_mem$imem_pc == csr_regfile$csr_trap_actions[193:130] ;
  assign IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507 =
	     csr_regfile$read_misa[20] ?
	       (csr_regfile$read_misa[13] ?
		  _theResult_____4__h69064 :
		  csr_val___2__h69148) :
	       csr_val___2__h69148 ;
  assign IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2524 =
	     { IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[31:13],
	       spliced_bits__h69119,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[10:9],
	       IF_csr_regfileread_misa_BIT_18_THEN_spp9068_E_ETC__q42[0],
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[7:0] } ;
  assign IF_csr_regfileread_misa_BIT_18_THEN_spp9068_E_ETC__q42 =
	     csr_regfile$read_misa[18] ? spp__h69068 : 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1863 =
	     near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_8_ETC___d1838 ?
	       4'd4 :
	       ((near_mem$imem_instr[11:7] == 5'd0 &&
		 near_mem$imem_instr[19:15] == 5'd0) ?
		  IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1861 :
		  4'd9) ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1865 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1863 :
	       ((near_mem$imem_instr[14:12] == 3'b100 ||
		 near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426) ?
		  4'd9 :
		  4'd0) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1364 =
	     rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q20[19:0] ==
	     b__h56897 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1367 =
	     diff__h56742 < 6'd20 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705 =
	     rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31161[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937 &&
	     b_capability__h31159[122] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1878 =
	     near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1381 ?
	       4'd9 :
	       4'd0 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1881 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      rs1_val_bypassed_capability__h6632[104]) ?
	       4'd9 :
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1880 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1886 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       4'd9 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1884 ?
		  4'd0 :
		  4'd9) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2598 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (rs1_val_bypassed_capability__h6632[104] ?
		  5'd21 :
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2596) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2619 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (rs1_val_bypassed_capability__h6632[104] ? 5'd21 : 5'd2) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2630 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (rs1_val_bypassed_capability__h6632[104] ?
		  5'd21 :
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2628) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2634 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (rs1_val_bypassed_capability__h6632[104] ?
		  5'd21 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2632) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2636 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1884 ?
		  5'd2 :
		  check__h30880) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2660 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900) ?
	       5'd18 :
	       ((!rs1_val_bypassed_capability__h6632[104] ||
		 !rs2_val_bypassed_capability__h31161[104]) ?
		  5'd22 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2658) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2677 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900) ?
	       5'd18 :
	       ((!rs1_val_bypassed_capability__h6632[104] ||
		 !rs2_val_bypassed_capability__h31161[104]) ?
		  5'd22 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2675) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 =
	     rs1_val_bypassed_capability__h6632[63:0] ==
	     rs2_val_bypassed_capability__h31161[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350 =
	     (rs1_val_bypassed_capability__h6632[63:0] ^
	      64'h8000000000000000) <
	     (rs2_val_bypassed_capability__h31161[63:0] ^
	      64'h8000000000000000) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 =
	     rs1_val_bypassed_capability__h6632[63:0] <
	     rs2_val_bypassed_capability__h31161[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d844 =
	     rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q15[19:0] ==
	     b__h56897 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d847 =
	     diff__h30444 < 6'd20 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1536 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1445 ||
	       decoded_instr_rs2__h5316 == 5'b0 &&
	       near_mem$imem_instr[19:15] != 5'd0 :
	       ((near_mem$imem_instr[31:25] == 7'b0) ?
		  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1453 ||
		  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1524 ||
		  decoded_instr_rs2__h5316[3] &&
		  decoded_instr_rs2__h5316[2:0] != 3'b101 &&
		  decoded_instr_rs2__h5316[2] &&
		  decoded_instr_rs2__h5316[1:0] != 2'b0 :
		  near_mem$imem_instr[31:25] != 7'b0100000) ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1775 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1738 &&
	       (decoded_instr_rs2__h5316 != 5'b0 ||
		near_mem$imem_instr[19:15] == 5'd0) :
	       ((near_mem$imem_instr[31:25] == 7'b0) ?
		  controller_tag__h59284 &&
		  NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1769 &&
		  (!decoded_instr_rs2__h5316[3] ||
		   decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		   !decoded_instr_rs2__h5316[2] ||
		   decoded_instr_rs2__h5316[1:0] == 2'b0) :
		  near_mem$imem_instr[31:25] == 7'b0100000) ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2216 =
	     (near_mem$imem_instr[31:25] == 7'b0010011) ?
	       rs2_val_bypassed_capability__h31161[63:0] != 64'b0 &&
	       rs1_val_bypassed_tag__h6631 :
	       near_mem$imem_instr[31:25] == 7'b0000001 &&
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2214 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2772 =
	     (near_mem$imem_instr[31:25] == 7'b1111111) ?
	       decoded_instr_rs2__h5316 == 5'b01100 &&
	       _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810 :
	       near_mem$imem_instr[31:25] == 7'b1111110 &&
	       near_mem$imem_instr[24:20] == 5'h01 &&
	       rs2_val_bypassed_capability__h31161[1:0] != 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2870 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1738 &&
	       (decoded_instr_rs2__h5316 != 5'b0 ||
		near_mem$imem_instr[19:15] == 5'd0) :
	       ((near_mem$imem_instr[31:25] == 7'b0) ?
		  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2865 &&
		  NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1769 &&
		  (!decoded_instr_rs2__h5316[3] ||
		   decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		   !decoded_instr_rs2__h5316[2] ||
		   decoded_instr_rs2__h5316[1:0] == 2'b0) :
		  near_mem$imem_instr[31:25] == 7'b0100000) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1511 =
	     decoded_instr_rs2__h5316[1:0] == 2'b0 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1490 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b01 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1498 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b10 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1508 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1521 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1511 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b11 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 &&
	     _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1518 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       near_mem$imem_instr[14:12] != 3'b0 &&
	       near_mem$imem_instr[14:12] != 3'b001 &&
	       near_mem$imem_instr[14:12] != 3'b100 &&
	       near_mem$imem_instr[14:12] != 3'b101 &&
	       near_mem$imem_instr[14:12] != 3'b110 &&
	       near_mem$imem_instr[14:12] != 3'b111 ||
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 :
	       near_mem$imem_instr[6:0] == 7'b1101111 ||
	       near_mem$imem_instr[6:0] == 7'b1100111 ||
	       (near_mem$imem_instr[6:0] != 7'b0010011 &&
		near_mem$imem_instr[6:0] != 7'b0110011 ||
		near_mem$imem_instr[14:12] != 3'b001 &&
		near_mem$imem_instr[14:12] != 3'b101) &&
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1557 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1726 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900 ||
	     rs2_val_bypassed_capability__h31161[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1414 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31161[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1700 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1738 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      (decoded_instr_rs2__h5316[4:2] == 3'b001 ||
	       decoded_instr_rs2__h5316[4:2] == 3'b011 ||
	       decoded_instr_rs2__h5316[4:2] == 3'b111) &&
	      decoded_instr_rs2__h5316[1:0] != 2'b01) &&
	     !rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1444 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       (near_mem$imem_instr[14:12] == 3'b0 ||
		near_mem$imem_instr[14:12] == 3'b001 ||
		near_mem$imem_instr[14:12] == 3'b100 ||
		near_mem$imem_instr[14:12] == 3'b101 ||
		near_mem$imem_instr[14:12] == 3'b110 ||
		near_mem$imem_instr[14:12] == 3'b111) &&
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 :
	       near_mem$imem_instr[6:0] != 7'b1101111 &&
	       near_mem$imem_instr[6:0] != 7'b1100111 &&
	       ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		 near_mem$imem_instr[6:0] == 7'b0110011) &&
		(near_mem$imem_instr[14:12] == 3'b001 ||
		 near_mem$imem_instr[14:12] == 3'b101) ||
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1796) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1884 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900 ||
	     rs2_val_bypassed_capability__h31161[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1883 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2214 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1738 &&
	     (decoded_instr_rs2__h5316 != 5'b0 ||
	      near_mem$imem_instr[19:15] == 5'd0) &&
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      ((decoded_instr_rs2__h5316 == 5'b00001) ?
		 stage1_rg_ddc[128] :
		 csr_regfile$read_csr_cap[128])) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2438 =
	     ((near_mem$imem_instr[6:0] == 7'b0010011 ||
	       near_mem$imem_instr[6:0] == 7'b0110011) &&
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101)) ?
	       alu_outputs___1_val1_capability__h63972 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2779 =
	     (near_mem$imem_instr[6:0] == 7'b1110011 &&
	      near_mem$imem_instr[13:12] != 2'b0 &&
	      NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 ||
	      ((near_mem$imem_instr[6:0] == 7'b1100011) ?
		 near_mem$imem_instr[14:12] != 3'b0 &&
		 near_mem$imem_instr[14:12] != 3'b001 &&
		 near_mem$imem_instr[14:12] != 3'b100 &&
		 near_mem$imem_instr[14:12] != 3'b101 &&
		 near_mem$imem_instr[14:12] != 3'b110 &&
		 near_mem$imem_instr[14:12] != 3'b111 :
		 near_mem$imem_instr[6:0] != 7'b1101111 &&
		 near_mem$imem_instr[6:0] != 7'b1100111 &&
		 ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		    near_mem$imem_instr[14:12] != 3'b0 ||
		    near_mem$imem_instr[11:7] != 5'd0 ||
		    near_mem$imem_instr[19:15] != 5'd0 ||
		    near_mem$imem_instr[31:20] != 12'b0 &&
		    near_mem$imem_instr[31:20] != 12'b000000000001 :
		    near_mem$imem_instr[6:0] != 7'b1011011 ||
		    IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2760))) ?
	       { 32'd0, near_mem$imem_instr } :
	       (((near_mem$imem_instr[6:0] == 7'b1100011) ?
		   near_mem$imem_instr[14:12] == 3'b0 ||
		   near_mem$imem_instr[14:12] == 3'b001 ||
		   near_mem$imem_instr[14:12] == 3'b100 ||
		   near_mem$imem_instr[14:12] == 3'b101 ||
		   near_mem$imem_instr[14:12] == 3'b110 ||
		   near_mem$imem_instr[14:12] == 3'b111 :
		   near_mem$imem_instr[6:0] == 7'b1101111 ||
		   near_mem$imem_instr[6:0] == 7'b1100111 ||
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2772) ?
		  alu_outputs_addr_capability__h62981[63:0] :
		  64'b0) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2863 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2859 ||
	     rs2_val_bypassed_capability__h31161[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2841 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31161[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1700 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2895 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       (near_mem$imem_instr[14:12] == 3'b0 ||
		near_mem$imem_instr[14:12] == 3'b001 ||
		near_mem$imem_instr[14:12] == 3'b100 ||
		near_mem$imem_instr[14:12] == 3'b101 ||
		near_mem$imem_instr[14:12] == 3'b110 ||
		near_mem$imem_instr[14:12] == 3'b111) &&
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 :
	       near_mem$imem_instr[6:0] != 7'b1101111 &&
	       near_mem$imem_instr[6:0] != 7'b1100111 &&
	       ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		 near_mem$imem_instr[6:0] == 7'b0110011) &&
		(near_mem$imem_instr[14:12] == 3'b001 ||
		 near_mem$imem_instr[14:12] == 3'b101) ||
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2891) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d3114 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620 ;
  assign IF_near_mem_imem_instr__20_BIT_30_71_THEN_53_E_ETC___d684 =
	     near_mem$imem_instr[30] ?
	       7'd53 :
	       (near_mem$imem_instr[29] ?
		  7'd54 :
		  (near_mem$imem_instr[28] ?
		     7'd55 :
		     (near_mem$imem_instr[27] ?
			7'd56 :
			(near_mem$imem_instr[26] ?
			   7'd57 :
			   (near_mem$imem_instr[25] ?
			      7'd58 :
			      (near_mem$imem_instr[24] ?
				 7'd59 :
				 (near_mem$imem_instr[23] ?
				    7'd60 :
				    (near_mem$imem_instr[22] ?
				       7'd61 :
				       (near_mem$imem_instr[21] ?
					  7'd62 :
					  (near_mem$imem_instr[20] ?
					     7'd63 :
					     7'd64)))))))))) ;
  assign IF_rg_cur_priv_9_EQ_0b11_833_OR_rg_cur_priv_9__ETC___d1859 =
	     ((rg_cur_priv == 2'b11 ||
	       rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[22]) &&
	      near_mem$imem_instr[31:20] == 12'b000100000010) ?
	       4'd6 :
	       (rg_cur_priv_9_EQ_0b11_833_OR_rg_cur_priv_9_EQ__ETC___d1857 ?
		  4'd8 :
		  4'd9) ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 =
	     stage2_rg_full ?
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 :
	       2'd0 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 =
	     stage2_rg_full ?
	       IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 :
	       2'd0 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 =
	     stage2_rg_stage2[393:389] == near_mem$imem_instr[19:15] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231 =
	     stage2_rg_stage2[393:389] == decoded_instr_rs2__h5316 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	     2'd1 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ||
	     gpr_regfile$is_busy ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 =
	     x_out_bypass_rd_val_capability__h4621[9:8] ==
	     near_mem$imem_instr[19:18] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3028 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd2 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0) &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2963 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 =
	     x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5[near_mem$imem_instr[17:15]] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 =
	     x_out_bypass_rd_val_capability__h4621[9:8] ==
	     decoded_instr_rs2__h5316[4:3] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 =
	     x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5[decoded_instr_rs2__h5316[2:0]] ;
  assign IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108 =
	     (stage2_rg_stage2[393:389] == 5'd0) ?
	       2'd0 :
	       ((near_mem$dmem_valid && !near_mem$dmem_exc) ? 2'd2 : 2'd1) ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1410 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       stage3_rg_stage3[257] :
	       gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       stage3_rg_stage3[256:129] :
	       gpr_regfile$read_rs1[127:0] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       stage3_rg_stage3[256:129] :
	       gpr_regfile$read_rs2[127:0] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       stage3_rg_stage3[257] :
	       gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d453 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       !stage3_rg_stage3[257] :
	       !gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d896 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       !stage3_rg_stage3[257] :
	       !gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2826 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 ||
	       !gpr_regfile$read_rs1[128] :
	       !gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2832 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) &&
	       gpr_regfile$read_rs1[128] :
	       gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2838 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) &&
	       gpr_regfile$read_rs2[128] :
	       gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2856 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 ||
	       !gpr_regfile$read_rs2[128] :
	       !gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d454 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 ||
	       !gpr_regfile$read_rs1[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d453 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d897 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 ||
	       !gpr_regfile$read_rs2[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d896 ;
  assign INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224 =
	     x__h52314 >>
	     _63_MINUS_IF_rs2_val_bypassed_capability1161_BI_ETC__q18[5:0] ;
  assign INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699 =
	     x__h26016 >>
	     _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q13[5:0] ;
  assign NOT_0_CONCAT_IF_IF_IF_near_mem_imem_instr__20__ETC___d2202 =
	     ct_bot__h56818 >= cb_bot__h56823 &&
	     ct_top__h56819 <= cb_top__h56824 &&
	     rs1_val_bypassed_tag__h6631 ;
  assign NOT_0_CONCAT_near_mem_imem_instr__20_BIT_31_39_ETC___d693 =
	     x__h15735 + y__h15736 > 7'd1 ||
	     (rs1_val_bypassed_capability__h6632[63:0] & y__h17987) != 64'd0 ;
  assign NOT_0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_ETC___d1609 =
	     !_0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1595 ||
	     !_0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1602 ||
	     !rs1_val_bypassed_capability__h6632[114] ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ;
  assign NOT_IF_IF_near_mem_imem_instr__20_BITS_19_TO_1_ETC___d1375 =
	     !IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1357 ||
	     !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1147 ||
	     (rs1_val_bypassed_capability__h6632[63:0] & y__h43246) != 64'd0 ;
  assign NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1769 =
	     !controller_capability__h59285[104] &&
	     decoded_instr_rs2__h5316[3:2] != 2'b11 &&
	     (decoded_instr_rs2__h5316[3] &&
	      decoded_instr_rs2__h5316[2:0] != 3'b101 ||
	      controller_capability__h59285[117]) &&
	     (!decoded_instr_rs2__h5316[3] ||
	      decoded_instr_rs2__h5316[2] &&
	      decoded_instr_rs2__h5316[1:0] != 2'b0 ||
	      controller_capability__h59285[116]) &&
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1761 &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b11 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1518) ;
  assign NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d928 =
	     !b_capability__h31159[120] ||
	     !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d915 ||
	     !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d922 ||
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 =
	     cur_verbosity__h1374 > 4'd1 ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2949 =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     (stage2_rg_stage2[396:394] == 3'd3 ||
	      stage2_rg_stage2[396:394] != 3'd0 &&
	      (!near_mem$dmem_valid || near_mem$dmem_exc)) ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2951 =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     stage2_rg_stage2[396:394] != 3'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd0 ||
	      near_mem$dmem_valid && !near_mem$dmem_exc) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1709 =
	     !rs1_val_bypassed_capability__h6632[104] ||
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs2_val_bypassed_capability__h31161[63:0] == 64'b0 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2731 =
	     !rs1_val_bypassed_capability__h6632[104] &&
	     (!rs2_val_bypassed_capability__h31161[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1389 &&
	      _0b0_CONCAT_0_CONCAT_IF_IF_near_mem_imem_instr__ETC___d1397) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1445 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     decoded_instr_rs2__h5316 != 5'b00001 &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b001 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b011 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b111 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) ||
	     rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1444 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1474 =
	     (!decoded_instr_rs2__h5316[3] ||
	      decoded_instr_rs2__h5316[2:0] == 3'b101) &&
	     !controller_capability__h59285[117] ||
	     decoded_instr_rs2__h5316[3] &&
	     (!decoded_instr_rs2__h5316[2] ||
	      decoded_instr_rs2__h5316[1:0] == 2'b0) &&
	     !controller_capability__h59285[116] ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1761 =
	     (decoded_instr_rs2__h5316[1:0] != 2'b0 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1490) &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b01 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1498) &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b10 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 ||
	      !_0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1508) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd3 ||
	      stage2_rg_stage2[396:394] != 3'd0 &&
	      (!near_mem$dmem_valid || near_mem$dmem_exc)) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd3 &&
	     stage2_rg_stage2[396:394] != 3'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd0 ||
	      near_mem$dmem_valid && !near_mem$dmem_exc) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 !=
	      2'd1 ||
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 &&
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) &&
	     !gpr_regfile$is_busy ;
  assign NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 =
	     !csr_regfile$read_csr[64] ||
	     rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 ||
	     csr_regfile$csr_counter_read_fault ||
	     (near_mem$imem_instr[13:12] == 2'b01 ||
	      near_mem$imem_instr[19:15] != 5'd0) &&
	     near_mem$imem_instr[31:30] == 2'b11 ;
  assign NOT_near_mem_imem_exc__38_625_AND_IF_near_mem__ETC___d2083 =
	     !near_mem$imem_exc &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2079 ;
  assign NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 =
	     !near_mem$imem_exc &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1636) ;
  assign NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1980 =
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd3 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd4 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd5 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd6 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd7 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd8 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd9 ;
  assign NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d2045 =
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 !=
	     3'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 !=
	     3'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 !=
	     3'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 !=
	     3'd3 ;
  assign NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d2071 =
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      near_mem$imem_instr[14:12] == 3'b100 ||
	      near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 ||
	      ((near_mem$imem_instr[13:12] == 2'd2) ?
		 near_mem$imem_instr[19:15] == 5'd0 :
		 near_mem$imem_instr[13:12] == 2'd3 &&
		 near_mem$imem_instr[19:15] == 5'd0)) ;
  assign NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1676 =
	     near_mem$imem_instr[13:12] != 2'b0 && csr_regfile$read_csr[64] &&
	     !rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 &&
	     !csr_regfile$csr_counter_read_fault &&
	     (near_mem$imem_instr[13:12] != 2'b01 &&
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      near_mem$imem_instr[31:30] != 2'b11) &&
	     (near_mem$imem_instr[31:20] != 12'h180 ||
	      !csr_regfile$read_mstatus[20]) ;
  assign NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2079 =
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1676 &&
	     ((near_mem$imem_instr[13:12] == 2'd2) ?
		near_mem$imem_instr[19:15] != 5'd0 :
		near_mem$imem_instr[13:12] != 2'd3 ||
		near_mem$imem_instr[19:15] != 5'd0) ;
  assign NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1571 =
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b001 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     near_mem$imem_instr[14:12] != 3'b101 &&
	     near_mem$imem_instr[14:12] != 3'b110 &&
	     near_mem$imem_instr[14:12] != 3'b111 ||
	     IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 &&
	     branch_target__h5843[1] ;
  assign NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 =
	     (near_mem$imem_instr[14:12] != 3'b0 ||
	      near_mem$imem_instr[6:0] == 7'b0110011 &&
	      near_mem$imem_instr[30]) &&
	     (near_mem$imem_instr[14:12] != 3'b0 ||
	      near_mem$imem_instr[6:0] != 7'b0110011 ||
	      !near_mem$imem_instr[30]) &&
	     near_mem$imem_instr[14:12] != 3'b010 &&
	     near_mem$imem_instr[14:12] != 3'b011 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     near_mem$imem_instr[14:12] != 3'b110 &&
	     near_mem$imem_instr[14:12] != 3'b111 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1684 =
	     rs1_val_bypassed_tag__h6631 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d835 &&
	     IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1681 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702 =
	     rs1_val_bypassed_tag__h6631 && rs2_val_bypassed_tag__h31160 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31161[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1700 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1720 =
	     rs1_val_bypassed_tag__h6631 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1359 &&
	     IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1711 &&
	     (near_mem$imem_instr[31:25] != 7'b0001001 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1714) ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1723 =
	     rs1_val_bypassed_tag__h6631 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     (!rs2_val_bypassed_capability__h31161[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1389 &&
	      _0b0_CONCAT_0_CONCAT_IF_IF_near_mem_imem_instr__ETC___d1397) ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2837 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d835 &&
	     IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1681 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2844 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2841 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     !rs2_val_bypassed_capability__h31161[104] &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1700 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2845 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2841 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2854 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1359 &&
	     IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1711 &&
	     (near_mem$imem_instr[31:25] != 7'b0001001 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2829 ||
	      IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1714) ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2855 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     (!rs2_val_bypassed_capability__h31161[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1389 &&
	      _0b0_CONCAT_0_CONCAT_IF_IF_near_mem_imem_instr__ETC___d1397) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2909 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2895 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2906) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2920 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620 ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2922 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3031 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	     2'd1 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3032 =
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3031 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620 ;
  assign NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2925 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] ||
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2920) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2922) ;
  assign NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2965 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd2 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0) &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2963 ;
  assign NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974 =
	     NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2965 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3026 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     !stage3_rg_full &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2963 &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 ;
  assign NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3035 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3028 ||
	      !stage1_rg_full) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3032 ||
	      near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0) ;
  assign NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3037 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d3028 ||
	      !stage1_rg_full) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3032 ||
	      near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0) &&
	     cur_verbosity__h1374 != 4'd0 ;
  assign NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3040 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2963 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d3051 =
	     !stage1_rg_full ||
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d3031 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620 ||
	     near_mem$imem_instr[6:0] != 7'b1110011 ||
	     near_mem$imem_instr[13:12] == 2'b0 ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ||
	     stage3_rg_full ;
  assign SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1586 =
	     { {52{near_memimem_instr_BITS_31_TO_20__q31[11]}},
	       near_memimem_instr_BITS_31_TO_20__q31 } ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1147 =
	     x__h40976 + y__h40977 <= 7'd1 ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1389 =
	     x6931_SRL_rs1_val_bypassed_capability632_BITS__ETC__q22[19:0] ==
	     b__h56897 ;
  assign _0b0_CONCAT_0_CONCAT_IF_IF_near_mem_imem_instr__ETC___d1397 =
	     x7162_SRL_rs1_val_bypassed_capability632_BITS__ETC__q21[19:0] ==
	     b__h56897 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1370 =
	     { 1'b0, b__h56897 } ==
	     { 1'b0,
	       rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q20[19:0] } >>
	     diff__h56742 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1484 =
	     x9601_SRL_controller_capability9285_BITS_110_T_ETC__q23[19:0] ==
	     b__h59567 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1490 =
	     x9758_SRL_controller_capability9285_BITS_110_T_ETC__q25[19:0] ==
	     b__h59567 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1498 =
	     x0017_SRL_controller_capability9285_BITS_110_T_ETC__q24[19:0] ==
	     b__h59567 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1508 =
	     x0276_SRL_controller_capability9285_BITS_110_T_ETC__q26[19:0] ==
	     b__h59567 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d1518 =
	     x0535_SRL_controller_capability9285_BITS_110_T_ETC__q27[19:0] ==
	     b__h59567 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d851 =
	     { 1'b0, b__h56897 } ==
	     { 1'b0,
	       rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q15[19:0] } >>
	     diff__h30444 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d915 =
	     x1316_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q16[19:0] ==
	     b__h31282 ;
  assign _0b0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS__ETC___d922 =
	     x1473_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q17[19:0] ==
	     b__h31282 ;
  assign _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1595 =
	     x0586_SRL_rs1_val_bypassed_capability632_BITS__ETC__q30[19:0] ==
	     b__h56897 ;
  assign _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1602 =
	     x0743_SRL_rs1_val_bypassed_capability632_BITS__ETC__q33[19:0] ==
	     b__h56897 ;
  assign _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810 =
	     _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1595 &&
	     _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1602 &&
	     rs1_val_bypassed_capability__h6632[114] &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     rs1_val_bypassed_tag__h6631 ;
  assign _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d2898 =
	     _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1595 &&
	     _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1602 &&
	     rs1_val_bypassed_capability__h6632[114] &&
	     !rs1_val_bypassed_capability__h6632[104] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 ;
  assign _44_MINUS_leading752__q9 = 7'd44 - leading__h6752 ;
  assign _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q13 =
	     7'd63 -
	     (near_mem$imem_instr[31] ?
		7'd52 :
		IF_near_mem_imem_instr__20_BIT_30_71_THEN_53_E_ETC___d684) ;
  assign _63_MINUS_IF_rs2_val_bypassed_capability1161_BI_ETC__q18 =
	     7'd63 -
	     (rs2_val_bypassed_capability__h31161[63] ?
		7'd0 :
		IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1211) ;
  assign _theResult_____1_snd__h61523 =
	     (near_mem$imem_instr[14:12] == 3'b0 &&
	      near_mem$imem_instr[6:0] == 7'b0110011 &&
	      near_mem$imem_instr[30]) ?
	       rd_val___1__h61518 :
	       _theResult_____1_snd__h61530 ;
  assign _theResult_____1_snd__h61558 =
	     rs1_val_bypassed_capability__h6632[63:0] &
	     _theResult___snd__h65281 ;
  assign _theResult_____4__h69064 =
	     csr_regfile$read_misa[18] ?
	       _theResult_____5__h69063 :
	       csr_val___2__h69163 ;
  assign _theResult_____5__h69063 =
	     (!csr_regfile$read_misa[18] && !csr_regfile$read_misa[5] &&
	      !csr_regfile$read_misa[3]) ?
	       csr_val___1__h69223 :
	       csr_val___2__h69062 ;
  assign _theResult____h75556 =
	     (delta_CPI_instrs__h75555 == 64'd0) ?
	       delta_CPI_instrs___1__h75591 :
	       delta_CPI_instrs__h75555 ;
  assign _theResult___exc_code__h62050 =
	     (rs1_val_bypassed_tag__h6631 &&
	      rs1_val_bypassed_capability__h6632[104]) ?
	       5'd21 :
	       5'd2 ;
  assign _theResult___fst__h31968 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       _theResult___fst__h31976 ;
  assign _theResult___fst__h31976 =
	     (!IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1359 ||
	      IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1373) ?
	       5'd23 :
	       5'd16 ;
  assign _theResult___fst__h6727 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       5'd21 :
	       _theResult___fst__h6735 ;
  assign _theResult___fst__h6735 =
	     (!IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d835 ||
	      IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856) ?
	       5'd23 :
	       5'd16 ;
  assign _theResult___snd__h61634 =
	     (near_mem$imem_instr[14:12] == 3'b001 &&
	      !near_mem$imem_instr[25]) ?
	       rd_val___1__h65430 :
	       _theResult___snd__h61641 ;
  assign _theResult___snd__h61641 =
	     near_mem$imem_instr[30] ?
	       rd_val___1__h65513 :
	       rd_val___1__h65484 ;
  assign _theResult___snd__h61747 =
	     { {32{rs1_val_bypassed_capability632_BITS_31_TO_0_SR_ETC__q7[31]}},
	       rs1_val_bypassed_capability632_BITS_31_TO_0_SR_ETC__q7 } ;
  assign _theResult___snd__h65281 =
	     (near_mem$imem_instr[6:0] == 7'b0010011) ?
	       SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1586 :
	       rs2_val_bypassed_capability__h31161[63:0] ;
  assign _theResult___snd_fst_capability__h64014 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      rs1_val_bypassed_capability__h6632[104]) ?
	       128'd0 :
	       ret_capability__h64010 ;
  assign _theResult___snd_fst_capability__h64082 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      rs1_val_bypassed_capability__h6632[104]) ?
	       128'd0 :
	       ret_capability__h64078 ;
  assign alu_outputs___1_addr_capability__h62880 =
	     { 64'd0, new_offset__h64002 } ;
  assign alu_outputs___1_addr_capability__h62894 =
	     { 116'd0, near_mem$imem_instr[31:20] } ;
  assign alu_outputs___1_addr_capability__h62921 =
	     rs1_val_bypassed_capability__h6632 ;
  assign alu_outputs___1_addr_tag__h62920 = rs1_val_bypassed_tag__h6631 ;
  assign alu_outputs___1_addr_tag__h62965 =
	     (near_mem$imem_instr[31:25] == 7'b1111111) ?
	       alu_outputs___1_addr_tag__h62920 :
	       near_mem$imem_instr[31:25] != 7'b0000001 &&
	       ((near_mem$imem_instr[31:25] == 7'b1111110) ?
		  rs2_val_bypassed_tag__h31160 :
		  controller_tag__h59284) ;
  assign alu_outputs___1_exc_code__h62321 =
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1445 ?
	       5'd2 :
	       5'd20 ;
  assign alu_outputs___1_exc_code__h6371 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       (near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_8_ETC___d1838 ?
		  5'd2 :
		  ((near_mem$imem_instr[11:7] == 5'd0 &&
		    near_mem$imem_instr[19:15] == 5'd0) ?
		     CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q35 :
		     5'd2)) :
	       5'd2 ;
  assign alu_outputs___1_val1_capability__h63964 =
	     { 64'hFFFE7E0000011111, ret_pc__h5871 } ;
  assign alu_outputs___1_val1_capability__h63972 =
	     { 64'd0, new_addr__h63969 } ;
  assign alu_outputs___1_val1_capability__h63976 =
	     { 64'd0, new_addr__h63973 } ;
  assign alu_outputs___1_val1_capability__h63980 =
	     { 64'd0, new_addr__h63977 } ;
  assign alu_outputs___1_val1_capability__h63984 =
	     { 64'd0, new_addr__h63981 } ;
  assign alu_outputs___1_val1_capability__h63987 = { 64'd0, rd_val__h6051 } ;
  assign alu_outputs___1_val1_capability__h63990 = { 64'd0, rd_val__h6068 } ;
  assign alu_outputs___1_val1_capability__h64000 = { 64'd0, rd_val__h6357 } ;
  assign alu_outputs___1_val1_capability__h64046 = { 118'd0, x__h67161 } ;
  assign alu_outputs___1_val1_tag__h64058 =
	     (decoded_instr_rs2__h5316 == 5'b01010) ?
	       rs1_val_bypassed_tag__h6631 :
	       decoded_instr_rs2__h5316 == 5'b01100 ;
  assign alu_outputs___1_val2_capability__h68834 =
	     { 64'hFFFE7E0000011111, branch_target__h5843 } ;
  assign alu_outputs___1_val2_capability__h68850 =
	     { 64'd0, new_addr__h68845 } ;
  assign alu_outputs___2_addr_capability__h62943 =
	     { 123'd0, decoded_instr_rs2__h5316 } ;
  assign alu_outputs_addr_capability__h62863 =
	     { 64'hFFFE7E0000011111, new_pc__h5854 } ;
  assign alu_outputs_addr_capability__h62867 =
	     { 64'hFFFE7E0000011111, next_pc__h5872 } ;
  assign alu_outputs_addr_capability__h62871 =
	     { 64'hFFFE7E0000011111, next_pc__h5895 } ;
  assign alu_outputs_addr_capability__h62883 = { 64'd0, eaddr__h6106 } ;
  assign alu_outputs_addr_tag__h62980 =
	     near_mem$imem_instr[6:0] == 7'b1100011 ||
	     near_mem$imem_instr[6:0] == 7'b1101111 ||
	     near_mem$imem_instr[6:0] == 7'b1100111 ||
	     near_mem$imem_instr[6:0] != 7'b0000011 &&
	     near_mem$imem_instr[6:0] != 7'b0100011 &&
	     near_mem$imem_instr[6:0] != 7'b1110011 &&
	     alu_outputs___1_addr_tag__h62965 ;
  assign alu_outputs_val2_tag__h68920 =
	     near_mem$imem_instr[6:0] == 7'b1100011 ||
	     ((near_mem$imem_instr[6:0] == 7'b0100011) ?
		rs2_val_bypassed_tag__h31160 :
		near_mem$imem_instr[6:0] != 7'b1110011 &&
		rs1_val_bypassed_tag__h6631) ;
  assign b__h31282 =
	     rs2_val_bypassed_capability__h31161[104] ?
	       { rs2_val_bypassed_capability__h31161[103:96], 12'h0 } :
	       rs2_val_bypassed_capability__h31161[103:84] ;
  assign b__h56897 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       { rs1_val_bypassed_capability__h6632[103:96], 12'h0 } :
	       rs1_val_bypassed_capability__h6632[103:84] ;
  assign b__h59567 =
	     controller_capability__h59285[104] ?
	       { controller_capability__h59285[103:96], 12'h0 } :
	       controller_capability__h59285[103:84] ;
  assign b_capability__h31147 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       ((stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
		 stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) ?
		  128'd0 :
		  gpr_regfile$read_rs2[127:0]) :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340 ;
  assign b_capability__h31159 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       ((IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
		 IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) ?
		  128'd0 :
		  b_capability__h31147) :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344 ;
  assign b_capability__h6618 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       ((stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
		 stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) ?
		  128'd0 :
		  gpr_regfile$read_rs1[127:0]) :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317 ;
  assign b_capability__h6630 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       ((IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
		 IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) ?
		  128'd0 :
		  b_capability__h6618) :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322 ;
  assign b_tag__h31146 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) &&
	       gpr_regfile$read_rs2[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d1410 ;
  assign b_tag__h6617 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) &&
	       gpr_regfile$read_rs1[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439 ;
  assign baseExp__h6746 =
	     (rs1_val_bypassed_capability__h6632[63] ||
	      rs1_val_bypassed_capability__h6632[62] ||
	      rs1_val_bypassed_capability__h6632[61] ||
	      rs1_val_bypassed_capability__h6632[60] ||
	      rs1_val_bypassed_capability__h6632[59] ||
	      rs1_val_bypassed_capability__h6632[58] ||
	      rs1_val_bypassed_capability__h6632[57] ||
	      rs1_val_bypassed_capability__h6632[56] ||
	      rs1_val_bypassed_capability__h6632[55] ||
	      rs1_val_bypassed_capability__h6632[54] ||
	      rs1_val_bypassed_capability__h6632[53] ||
	      rs1_val_bypassed_capability__h6632[52] ||
	      rs1_val_bypassed_capability__h6632[51] ||
	      rs1_val_bypassed_capability__h6632[50] ||
	      rs1_val_bypassed_capability__h6632[49] ||
	      rs1_val_bypassed_capability__h6632[48] ||
	      rs1_val_bypassed_capability__h6632[47] ||
	      rs1_val_bypassed_capability__h6632[46] ||
	      rs1_val_bypassed_capability__h6632[45] ||
	      rs1_val_bypassed_capability__h6632[44] ||
	      rs1_val_bypassed_capability__h6632[43] ||
	      rs1_val_bypassed_capability__h6632[42] ||
	      rs1_val_bypassed_capability__h6632[41] ||
	      rs1_val_bypassed_capability__h6632[40] ||
	      rs1_val_bypassed_capability__h6632[39] ||
	      rs1_val_bypassed_capability__h6632[38] ||
	      rs1_val_bypassed_capability__h6632[37] ||
	      rs1_val_bypassed_capability__h6632[36] ||
	      rs1_val_bypassed_capability__h6632[35] ||
	      rs1_val_bypassed_capability__h6632[34] ||
	      rs1_val_bypassed_capability__h6632[33] ||
	      rs1_val_bypassed_capability__h6632[32] ||
	      rs1_val_bypassed_capability__h6632[31] ||
	      rs1_val_bypassed_capability__h6632[30] ||
	      rs1_val_bypassed_capability__h6632[29] ||
	      rs1_val_bypassed_capability__h6632[28] ||
	      rs1_val_bypassed_capability__h6632[27] ||
	      rs1_val_bypassed_capability__h6632[26] ||
	      rs1_val_bypassed_capability__h6632[25] ||
	      rs1_val_bypassed_capability__h6632[24] ||
	      rs1_val_bypassed_capability__h6632[23] ||
	      rs1_val_bypassed_capability__h6632[22] ||
	      rs1_val_bypassed_capability__h6632[21] ||
	      rs1_val_bypassed_capability__h6632[20]) ?
	       _44_MINUS_leading752__q9[5:0] :
	       6'd0 ;
  assign branch_target__h5843 =
	     near_mem$imem_pc +
	     { {51{near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1[12]}},
	       near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1 } ;
  assign cb_bot__h56823 = { 44'd0, x__h64441 } ;
  assign cb_top__h56824 =
	     { 44'd0, x__h64717 } <<
	     rs1_val_bypassed_capability__h6632[110:105] ;
  assign check__h30541 =
	     (!_0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1595 ||
	      !_0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1602) ?
	       5'd19 :
	       (rs1_val_bypassed_capability__h6632[114] ?
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2600 :
		  5'd20) ;
  assign check__h30880 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900) ?
	       5'd18 :
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2609 ;
  assign check__h31541 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900) ?
	       5'd18 :
	       (rs1_val_bypassed_capability__h6632[104] ?
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2614 :
		  5'd22) ;
  assign check__h59257 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1453 ?
	       5'd18 :
	       (controller_capability__h59285[104] ?
		  5'd21 :
		  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2685) ;
  assign chosenExp__h31986 =
	     (!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1147 ||
	      (rs1_val_bypassed_capability__h6632[63:0] & y__h43246) !=
	      64'd0) ?
	       increase2227_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q19[5:0] :
	       _63_MINUS_IF_rs2_val_bypassed_capability1161_BI_ETC__q18[5:0] ;
  assign chosenExp__h6745 =
	     NOT_0_CONCAT_near_mem_imem_instr__20_BIT_31_39_ETC___d693 ?
	       increase5929_PLUS_0_CONCAT_63_MINUS_IF_near_me_ETC__q14[5:0] :
	       _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q13[5:0] ;
  assign controller_capability__h59285 =
	     decoded_instr_rs2__h5316[4] ?
	       rs1_val_bypassed_capability__h6632 :
	       stage1_rg_ddc[127:0] ;
  assign controller_tag__h59284 =
	     decoded_instr_rs2__h5316[4] ?
	       rs1_val_bypassed_tag__h6631 :
	       stage1_rg_ddc[128] ;
  assign cpi__h75558 = x__h75557 / 64'd10 ;
  assign cpifrac__h75559 = x__h75557 % 64'd10 ;
  assign csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d3104 =
	     delta_CPI_cycles__h75554 * 64'd10 ;
  assign csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1636 =
	     csr_regfile$read_csr[64] &&
	     !rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 &&
	     !csr_regfile$csr_counter_read_fault &&
	     (near_mem$imem_instr[13:12] != 2'b01 &&
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      near_mem$imem_instr[31:30] != 2'b11) ;
  assign csr_val___1__h69223 =
	     { csr_val__h6361[63],
	       27'd0,
	       csr_val__h6361[35:32],
	       9'd0,
	       csr_val__h6361[22:15],
	       2'd0,
	       csr_val__h6361[12:11],
	       2'd0,
	       csr_val__h6361[8:7],
	       1'd0,
	       csr_val__h6361[5:3],
	       1'd0,
	       csr_val__h6361[1:0] } ;
  assign csr_val___2__h69062 =
	     { csr_val__h6361[63],
	       27'd0,
	       csr_val__h6361[35:32],
	       9'd0,
	       csr_val__h6361[22:11],
	       2'd0,
	       csr_val__h6361[8:7],
	       1'd0,
	       csr_val__h6361[5:3],
	       1'd0,
	       csr_val__h6361[1:0] } ;
  assign csr_val___2__h69071 =
	     { IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[63:36],
	       4'b1010,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2524 } ;
  assign csr_val___2__h69148 =
	     { _theResult_____4__h69064[63:5],
	       1'd0,
	       _theResult_____4__h69064[3:1],
	       1'd0 } ;
  assign csr_val___2__h69163 =
	     { _theResult_____5__h69063[63:9],
	       1'd0,
	       _theResult_____5__h69063[7:6],
	       1'd0,
	       _theResult_____5__h69063[4:2],
	       1'd0,
	       _theResult_____5__h69063[0] } ;
  assign csr_val__h63806 = csr_regfile$read_csr[63:0] | rs1_val__h6356 ;
  assign csr_val__h63811 = csr_regfile$read_csr[63:0] & y__h69293 ;
  assign ct_T__h56817 =
	     rs2_val_bypassed_capability__h31161[104] ?
	       { rs2_val_bypassed_capability__h31161[83:76], 12'h0 } :
	       rs2_val_bypassed_capability__h31161[83:64] ;
  assign ct_bot__h56818 = { 44'd0, x__h64305 } ;
  assign ct_top__h56819 =
	     { 44'd0, x__h64580 } <<
	     rs2_val_bypassed_capability__h31161[110:105] ;
  assign cur_verbosity__h1374 =
	     (csr_regfile$read_csr_minstret < cfg_logdelay) ?
	       4'd0 :
	       cfg_verbosity ;
  assign decoded_instr_rs2__h5316 =
	     (near_mem$imem_instr[6:0] == 7'b1011011 &&
	      near_mem$imem_instr[31:25] == 7'b1111110) ?
	       near_mem$imem_instr[11:7] :
	       near_mem$imem_instr[24:20] ;
  assign delta_CPI_cycles__h75554 =
	     csr_regfile$read_csr_mcycle - rg_start_CPI_cycles ;
  assign delta_CPI_instrs___1__h75591 = delta_CPI_instrs__h75555 + 64'd1 ;
  assign delta_CPI_instrs__h75555 =
	     csr_regfile$read_csr_minstret - rg_start_CPI_instrs ;
  assign diff__h30444 =
	     rs1_val_bypassed_capability__h6632[110:105] - exp__h6730 ;
  assign diff__h56742 =
	     rs1_val_bypassed_capability__h6632[110:105] - exp__h31971 ;
  assign diff__h68695 =
	     rs1_val_bypassed_capability__h6632[110:105] -
	     rs2_val_bypassed_capability__h31161[110:105] ;
  assign eaddr__h6106 =
	     rs1_val_bypassed_capability__h6632[63:0] +
	     { {52{near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q8[11]}},
	       near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q8 } ;
  assign exp__h31971 =
	     IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d1357 ?
	       chosenExp__h31986 :
	       baseExp__h6746 ;
  assign exp__h6730 =
	     (baseExp__h6746 <= chosenExp__h6745) ?
	       chosenExp__h6745 :
	       baseExp__h6746 ;
  assign funct10__h6030 =
	     { near_mem$imem_instr[31:25], near_mem$imem_instr[14:12] } ;
  assign fv_out_next_pc__h5702 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818 ?
	       alu_outputs_addr_capability__h62981[63:0] :
	       ret_pc__h5871 ;
  assign fv_out_trap_info_exc_code__h62579 =
	     near_mem$imem_exc ?
	       near_mem$imem_exc_code :
	       ((near_mem$imem_instr[6:0] == 7'b1110011 &&
		 near_mem$imem_instr[13:12] != 2'b0 &&
		 NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260) ?
		  5'd2 :
		  alu_outputs_exc_code__h60764) ;
  assign global__h58008 =
	     rs2_val_bypassed_capability__h31161[113] &
	     rs1_val_bypassed_capability__h6632[113] ;
  assign global__h64066 =
	     rs1_val_bypassed_capability__h6632[113] &
	     rs2_val_bypassed_capability__h31161[113] ;
  assign gpr_regfile_RDY_server_reset_response_get__803_ETC___d2815 =
	     gpr_regfile$RDY_server_reset_response_get &&
	     near_mem$RDY_server_reset_response_get &&
	     csr_regfile$RDY_server_reset_response_get &&
	     stage1_f_reset_rsps$EMPTY_N &&
	     stage2_f_reset_rsps$EMPTY_N &&
	     stage3_f_reset_rsps$EMPTY_N &&
	     f_reset_rsps$FULL_N ;
  assign increase2227_PLUS_0_CONCAT_63_MINUS_IF_rs2_val_ETC__q19 =
	     increase__h52227 +
	     { 1'd0,
	       _63_MINUS_IF_rs2_val_bypassed_capability1161_BI_ETC__q18[5:0] } ;
  assign increase5929_PLUS_0_CONCAT_63_MINUS_IF_near_me_ETC__q14 =
	     increase__h25929 +
	     { 1'd0,
	       _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q13[5:0] } ;
  assign increase__h25929 =
	     INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[0] ?
	       7'd0 :
	       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[1] ?
		  7'd1 :
		  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[2] ?
		     7'd2 :
		     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[3] ?
			7'd3 :
			(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[4] ?
			   7'd4 :
			   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[5] ?
			      7'd5 :
			      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[6] ?
				 7'd6 :
				 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[7] ?
				    7'd7 :
				    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[8] ?
				       7'd8 :
				       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[9] ?
					  7'd9 :
					  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[10] ?
					     7'd10 :
					     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[11] ?
						7'd11 :
						(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[12] ?
						   7'd12 :
						   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[13] ?
						      7'd13 :
						      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[14] ?
							 7'd14 :
							 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[15] ?
							    7'd15 :
							    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[16] ?
							       7'd16 :
							       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[17] ?
								  7'd17 :
								  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[18] ?
								     7'd18 :
								     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[19] ?
									7'd19 :
									(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[20] ?
									   7'd20 :
									   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[21] ?
									      7'd21 :
									      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[22] ?
										 7'd22 :
										 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[23] ?
										    7'd23 :
										    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[24] ?
										       7'd24 :
										       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[25] ?
											  7'd25 :
											  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[26] ?
											     7'd26 :
											     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[27] ?
												7'd27 :
												(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[28] ?
												   7'd28 :
												   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[29] ?
												      7'd29 :
												      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[30] ?
													 7'd30 :
													 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[31] ?
													    7'd31 :
													    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[32] ?
													       7'd32 :
													       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[33] ?
														  7'd33 :
														  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[34] ?
														     7'd34 :
														     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[35] ?
															7'd35 :
															(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[36] ?
															   7'd36 :
															   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[37] ?
															      7'd37 :
															      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[38] ?
																 7'd38 :
																 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[39] ?
																    7'd39 :
																    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[40] ?
																       7'd40 :
																       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[41] ?
																	  7'd41 :
																	  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[42] ?
																	     7'd42 :
																	     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[43] ?
																		7'd43 :
																		(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[44] ?
																		   7'd44 :
																		   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[45] ?
																		      7'd45 :
																		      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[46] ?
																			 7'd46 :
																			 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[47] ?
																			    7'd47 :
																			    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[48] ?
																			       7'd48 :
																			       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[49] ?
																				  7'd49 :
																				  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[50] ?
																				     7'd50 :
																				     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[51] ?
																					7'd51 :
																					(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[52] ?
																					   7'd52 :
																					   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[53] ?
																					      7'd53 :
																					      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[54] ?
																						 7'd54 :
																						 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[55] ?
																						    7'd55 :
																						    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[56] ?
																						       7'd56 :
																						       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[57] ?
																							  7'd57 :
																							  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[58] ?
																							     7'd58 :
																							     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[59] ?
																								7'd59 :
																								(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[60] ?
																								   7'd60 :
																								   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[61] ?
																								      7'd61 :
																								      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[62] ?
																									 7'd62 :
																									 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d699[63] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign increase__h52227 =
	     INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[0] ?
	       7'd0 :
	       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[1] ?
		  7'd1 :
		  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[2] ?
		     7'd2 :
		     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[3] ?
			7'd3 :
			(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[4] ?
			   7'd4 :
			   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[5] ?
			      7'd5 :
			      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[6] ?
				 7'd6 :
				 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[7] ?
				    7'd7 :
				    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[8] ?
				       7'd8 :
				       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[9] ?
					  7'd9 :
					  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[10] ?
					     7'd10 :
					     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[11] ?
						7'd11 :
						(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[12] ?
						   7'd12 :
						   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[13] ?
						      7'd13 :
						      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[14] ?
							 7'd14 :
							 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[15] ?
							    7'd15 :
							    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[16] ?
							       7'd16 :
							       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[17] ?
								  7'd17 :
								  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[18] ?
								     7'd18 :
								     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[19] ?
									7'd19 :
									(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[20] ?
									   7'd20 :
									   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[21] ?
									      7'd21 :
									      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[22] ?
										 7'd22 :
										 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[23] ?
										    7'd23 :
										    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[24] ?
										       7'd24 :
										       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[25] ?
											  7'd25 :
											  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[26] ?
											     7'd26 :
											     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[27] ?
												7'd27 :
												(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[28] ?
												   7'd28 :
												   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[29] ?
												      7'd29 :
												      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[30] ?
													 7'd30 :
													 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[31] ?
													    7'd31 :
													    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[32] ?
													       7'd32 :
													       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[33] ?
														  7'd33 :
														  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[34] ?
														     7'd34 :
														     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[35] ?
															7'd35 :
															(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[36] ?
															   7'd36 :
															   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[37] ?
															      7'd37 :
															      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[38] ?
																 7'd38 :
																 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[39] ?
																    7'd39 :
																    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[40] ?
																       7'd40 :
																       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[41] ?
																	  7'd41 :
																	  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[42] ?
																	     7'd42 :
																	     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[43] ?
																		7'd43 :
																		(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[44] ?
																		   7'd44 :
																		   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[45] ?
																		      7'd45 :
																		      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[46] ?
																			 7'd46 :
																			 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[47] ?
																			    7'd47 :
																			    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[48] ?
																			       7'd48 :
																			       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[49] ?
																				  7'd49 :
																				  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[50] ?
																				     7'd50 :
																				     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[51] ?
																					7'd51 :
																					(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[52] ?
																					   7'd52 :
																					   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[53] ?
																					      7'd53 :
																					      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[54] ?
																						 7'd54 :
																						 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[55] ?
																						    7'd55 :
																						    (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[56] ?
																						       7'd56 :
																						       (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[57] ?
																							  7'd57 :
																							  (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[58] ?
																							     7'd58 :
																							     (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[59] ?
																								7'd59 :
																								(INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[60] ?
																								   7'd60 :
																								   (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[61] ?
																								      7'd61 :
																								      (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[62] ?
																									 7'd62 :
																									 (INV_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1224[63] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign leading__h6752 =
	     rs1_val_bypassed_capability__h6632[63] ?
	       7'd0 :
	       (rs1_val_bypassed_capability__h6632[62] ?
		  7'd1 :
		  (rs1_val_bypassed_capability__h6632[61] ?
		     7'd2 :
		     (rs1_val_bypassed_capability__h6632[60] ?
			7'd3 :
			(rs1_val_bypassed_capability__h6632[59] ?
			   7'd4 :
			   (rs1_val_bypassed_capability__h6632[58] ?
			      7'd5 :
			      (rs1_val_bypassed_capability__h6632[57] ?
				 7'd6 :
				 (rs1_val_bypassed_capability__h6632[56] ?
				    7'd7 :
				    (rs1_val_bypassed_capability__h6632[55] ?
				       7'd8 :
				       (rs1_val_bypassed_capability__h6632[54] ?
					  7'd9 :
					  (rs1_val_bypassed_capability__h6632[53] ?
					     7'd10 :
					     (rs1_val_bypassed_capability__h6632[52] ?
						7'd11 :
						(rs1_val_bypassed_capability__h6632[51] ?
						   7'd12 :
						   (rs1_val_bypassed_capability__h6632[50] ?
						      7'd13 :
						      (rs1_val_bypassed_capability__h6632[49] ?
							 7'd14 :
							 (rs1_val_bypassed_capability__h6632[48] ?
							    7'd15 :
							    (rs1_val_bypassed_capability__h6632[47] ?
							       7'd16 :
							       (rs1_val_bypassed_capability__h6632[46] ?
								  7'd17 :
								  (rs1_val_bypassed_capability__h6632[45] ?
								     7'd18 :
								     (rs1_val_bypassed_capability__h6632[44] ?
									7'd19 :
									(rs1_val_bypassed_capability__h6632[43] ?
									   7'd20 :
									   (rs1_val_bypassed_capability__h6632[42] ?
									      7'd21 :
									      (rs1_val_bypassed_capability__h6632[41] ?
										 7'd22 :
										 (rs1_val_bypassed_capability__h6632[40] ?
										    7'd23 :
										    (rs1_val_bypassed_capability__h6632[39] ?
										       7'd24 :
										       (rs1_val_bypassed_capability__h6632[38] ?
											  7'd25 :
											  (rs1_val_bypassed_capability__h6632[37] ?
											     7'd26 :
											     (rs1_val_bypassed_capability__h6632[36] ?
												7'd27 :
												(rs1_val_bypassed_capability__h6632[35] ?
												   7'd28 :
												   (rs1_val_bypassed_capability__h6632[34] ?
												      7'd29 :
												      (rs1_val_bypassed_capability__h6632[33] ?
													 7'd30 :
													 (rs1_val_bypassed_capability__h6632[32] ?
													    7'd31 :
													    (rs1_val_bypassed_capability__h6632[31] ?
													       7'd32 :
													       (rs1_val_bypassed_capability__h6632[30] ?
														  7'd33 :
														  (rs1_val_bypassed_capability__h6632[29] ?
														     7'd34 :
														     (rs1_val_bypassed_capability__h6632[28] ?
															7'd35 :
															(rs1_val_bypassed_capability__h6632[27] ?
															   7'd36 :
															   (rs1_val_bypassed_capability__h6632[26] ?
															      7'd37 :
															      (rs1_val_bypassed_capability__h6632[25] ?
																 7'd38 :
																 (rs1_val_bypassed_capability__h6632[24] ?
																    7'd39 :
																    (rs1_val_bypassed_capability__h6632[23] ?
																       7'd40 :
																       (rs1_val_bypassed_capability__h6632[22] ?
																	  7'd41 :
																	  (rs1_val_bypassed_capability__h6632[21] ?
																	     7'd42 :
																	     (rs1_val_bypassed_capability__h6632[20] ?
																		7'd43 :
																		(rs1_val_bypassed_capability__h6632[19] ?
																		   7'd44 :
																		   (rs1_val_bypassed_capability__h6632[18] ?
																		      7'd45 :
																		      (rs1_val_bypassed_capability__h6632[17] ?
																			 7'd46 :
																			 (rs1_val_bypassed_capability__h6632[16] ?
																			    7'd47 :
																			    (rs1_val_bypassed_capability__h6632[15] ?
																			       7'd48 :
																			       (rs1_val_bypassed_capability__h6632[14] ?
																				  7'd49 :
																				  (rs1_val_bypassed_capability__h6632[13] ?
																				     7'd50 :
																				     (rs1_val_bypassed_capability__h6632[12] ?
																					7'd51 :
																					(rs1_val_bypassed_capability__h6632[11] ?
																					   7'd52 :
																					   (rs1_val_bypassed_capability__h6632[10] ?
																					      7'd53 :
																					      (rs1_val_bypassed_capability__h6632[9] ?
																						 7'd54 :
																						 (rs1_val_bypassed_capability__h6632[8] ?
																						    7'd55 :
																						    (rs1_val_bypassed_capability__h6632[7] ?
																						       7'd56 :
																						       (rs1_val_bypassed_capability__h6632[6] ?
																							  7'd57 :
																							  (rs1_val_bypassed_capability__h6632[5] ?
																							     7'd58 :
																							     (rs1_val_bypassed_capability__h6632[4] ?
																								7'd59 :
																								(rs1_val_bypassed_capability__h6632[3] ?
																								   7'd60 :
																								   (rs1_val_bypassed_capability__h6632[2] ?
																								      7'd61 :
																								      (rs1_val_bypassed_capability__h6632[1] ?
																									 7'd62 :
																									 (rs1_val_bypassed_capability__h6632[0] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign lower__h56895 =
	     { 44'd0, rs2_val_bypassed_capability__h31161[83:64] } ;
  assign ms_spp__h3168 = csr_regfile$read_mstatus[8] ? 2'b01 : 2'b0 ;
  assign ms_sxl__h3157 =
	     csr_regfile$read_misa[18] ? csr_regfile$read_misa[27:26] : 2'd0 ;
  assign ms_uxl__h3158 =
	     csr_regfile$read_misa[20] ? csr_regfile$read_misa[27:26] : 2'd0 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2544 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd0 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2547 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd1 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2550 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd2 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2553 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd3 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2556 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd4 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2559 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd5 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2562 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd6 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2565 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd7 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2568 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd8 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2571 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd9 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2574 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd3 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd4 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd5 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd6 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd7 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd8 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 !=
	     4'd9 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 =
	     near_mem$imem_exc ||
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 &&
	     NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 ;
  assign near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_8_ETC___d1838 =
	     near_mem$imem_instr[11:7] == 5'd0 &&
	     (rg_cur_priv == 2'b11 ||
	      rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[20]) &&
	     near_mem$imem_instr[31:25] == 7'b0001001 ;
  assign near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 =
	     near_mem$imem_instr[13:12] == 2'b0 ||
	     !csr_regfile$read_csr[64] ||
	     rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 ||
	     csr_regfile$csr_counter_read_fault ||
	     (near_mem$imem_instr[13:12] == 2'b01 ||
	      near_mem$imem_instr[19:15] != 5'd0) &&
	     near_mem$imem_instr[31:30] == 2'b11 ||
	     near_mem$imem_instr[31:20] == 12'h180 &&
	     csr_regfile$read_mstatus[20] ;
  assign near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1655 =
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     (near_mem$imem_instr[6:0] != 7'b0110011 ||
	      !near_mem$imem_instr[30]) ||
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem$imem_instr[6:0] == 7'b0110011 &&
	     near_mem$imem_instr[30] ||
	     near_mem$imem_instr[14:12] == 3'b010 ||
	     near_mem$imem_instr[14:12] == 3'b011 ||
	     near_mem$imem_instr[14:12] == 3'b100 ||
	     near_mem$imem_instr[14:12] == 3'b110 ||
	     near_mem$imem_instr[14:12] == 3'b111 ;
  assign near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1803 =
	     (near_mem$imem_instr[14:12] == 3'b0 ||
	      near_mem$imem_instr[14:12] == 3'b001 ||
	      near_mem$imem_instr[14:12] == 3'b100 ||
	      near_mem$imem_instr[14:12] == 3'b101 ||
	      near_mem$imem_instr[14:12] == 3'b110 ||
	      near_mem$imem_instr[14:12] == 3'b111) &&
	     (IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 ||
	      !branch_target__h5843[1]) ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1381 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     !IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d1359 ||
	     IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1373 ||
	     near_mem$imem_instr[31:25] == 7'b0001001 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     NOT_IF_IF_near_mem_imem_instr__20_BITS_19_TO_1_ETC___d1375 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1401 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     rs2_val_bypassed_capability__h31161[104] &&
	     (!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d1389 ||
	      !_0b0_CONCAT_0_CONCAT_IF_IF_near_mem_imem_instr__ETC___d1397) ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1421 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs2_val_bypassed_tag__h31160 &&
	     rs2_val_bypassed_capability__h31161[63:0] !=
	     64'hFFFFFFFFFFFFFFFF &&
	     (IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900 ||
	      rs1_val_bypassed_capability__h6632[104] ||
	      rs2_val_bypassed_capability__h31161[104] ||
	      NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d928) ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d859 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     !IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d835 ||
	     IF_IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d856 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d930 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900 ||
	     rs1_val_bypassed_capability__h6632[104] ||
	     rs2_val_bypassed_capability__h31161[104] ||
	     NOT_IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_s_ETC___d928 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d944 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900 ||
	     !rs1_val_bypassed_capability__h6632[104] ||
	     rs2_val_bypassed_capability__h31161[104] ||
	     !IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d937 ||
	     !b_capability__h31159[122] ;
  assign near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2986 =
	     near_mem$imem_instr[31:25] == 7'b0000001 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1738 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     near_mem$imem_instr[19:15] != 5'd0 ;
  assign near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2440 =
	     { near_mem$imem_instr[6:0] == 7'b1101111 ||
	       near_mem$imem_instr[6:0] == 7'b1100111 ||
	       near_mem$imem_instr[6:0] != 7'b0010011 &&
	       near_mem$imem_instr[6:0] != 7'b0110011 &&
	       near_mem$imem_instr[6:0] != 7'b0011011 &&
	       near_mem$imem_instr[6:0] != 7'b0111011 &&
	       near_mem$imem_instr[6:0] != 7'b0110111 &&
	       near_mem$imem_instr[6:0] != 7'b0010111 &&
	       near_mem$imem_instr[6:0] != 7'b1110011 &&
	       alu_outputs___1_val1_tag__h64160,
	       CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q44 } ;
  assign near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584 =
	     near_mem$imem_pc +
	     { {43{near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q29[20]}},
	       near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q29 } ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623 =
	     near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1561 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821 =
	     near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2962 =
	     near_mem$imem_valid &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 !=
	      2'd1 ||
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 &&
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2963 =
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2962 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) ;
  assign near_memimem_instr_BITS_31_TO_20__q31 = near_mem$imem_instr[31:20] ;
  assign near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q8 =
	     { near_mem$imem_instr[31:25], near_mem$imem_instr[11:7] } ;
  assign near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1 =
	     { near_mem$imem_instr[31],
	       near_mem$imem_instr[7],
	       near_mem$imem_instr[30:25],
	       near_mem$imem_instr[11:8],
	       1'b0 } ;
  assign near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q29 =
	     { near_mem$imem_instr[31],
	       near_mem$imem_instr[19:12],
	       near_mem$imem_instr[20],
	       near_mem$imem_instr[30:21],
	       1'b0 } ;
  assign newVal__h30515 =
	     rs1_val_bypassed_capability__h6632[104] ?
	       { 44'd0, rs1_val_bypassed_capability__h6632[83:64] } :
	       64'hFFFFFFFFFFFFFFFF ;
  assign newVal__h30521 =
	     64'b0000000000000000000000000000000000000000000000000000000000000001 <<
	     rs1_val_bypassed_capability__h6632[110:105] ;
  assign newVal__h30530 =
	     rs1_val_bypassed_capability__h6632[63:0] - cb_bot__h56823 ;
  assign new_addr__h63969 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       rd_val__h65067 :
	       (near_mem$imem_instr[30] ? rd_val__h65183 : rd_val__h65161) ;
  assign new_addr__h63973 =
	     (near_mem$imem_instr[14:12] == 3'b0 &&
	      (near_mem$imem_instr[6:0] != 7'b0110011 ||
	       !near_mem$imem_instr[30])) ?
	       rd_val___1__h61510 :
	       _theResult_____1_snd__h61523 ;
  assign new_addr__h63977 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       rd_val___1__h65378 :
	       _theResult___snd__h61634 ;
  assign new_addr__h64101 =
	     rs1_val_bypassed_capability__h6632[63:0] - ct_bot__h56818 ;
  assign new_addr__h64139 =
	     (rs2_val_bypassed_capability__h31161[110:105] <=
	      rs1_val_bypassed_capability__h6632[110:105] &&
	      IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2407 &&
	      perms__h60717 == 15'd0) ?
	       64'b0000000000000000000000000000000000000000000000000000000000000001 :
	       64'b0 ;
  assign new_addr__h68845 =
	     (near_mem$imem_instr[31:20] == 12'h300) ?
	       csr_val___2__h69071 :
	       csr_val__h6361 ;
  assign new_curs__h31817 =
	     rs2_val_bypassed_capability__h31161[63:0] + cb_bot__h56823 ;
  assign new_offset4002_BITS_31_TO_0__q32 = new_offset__h64002[31:0] ;
  assign new_offset__h64002 =
	     rs1_val_bypassed_capability__h6632[63:0] +
	     SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1586 ;
  assign new_pc__h5854 =
	     IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 ?
	       branch_target__h5843 :
	       ret_pc__h5871 ;
  assign new_pcc_capability__h58010 =
	     { rs2_val_bypassed_capability__h31161[127:114],
	       global__h58008,
	       rs2_val_bypassed_capability__h31161[112:105],
	       1'b0,
	       rs2_val_bypassed_capability__h31161[103:0] } ;
  assign newcap__h31783 =
	     { newperms__h31782, rs1_val_bypassed_capability__h6632[112:0] } ;
  assign newperms__h31782 =
	     rs2_val_bypassed_capability__h31161[14:0] &
	     rs1_val_bypassed_capability__h6632[127:113] ;
  assign next_pc__h5872 =
	     { near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584[63:1],
	       1'd0 } ;
  assign next_pc__h5895 = { new_offset__h64002[63:1], 1'd0 } ;
  assign out__h59031 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d900 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       (rs2_val_bypassed_capability__h31161[104] ?
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2670 :
		  5'd22) ;
  assign out_val_capability__h56956 =
	     { rs1_val_bypassed_capability__h6632[127:64], lower__h56895 } ;
  assign output_stage2___1_bypass_rd_val_capability__h4613 =
	     (stage2_rg_stage2[393:389] == 5'd0) ?
	       stage2_rg_stage2[256:129] :
	       { 64'd0, near_mem$dmem_word64 } ;
  assign output_stage2___1_bypass_rd_val_tag__h4612 =
	     stage2_rg_stage2[393:389] == 5'd0 && stage2_rg_stage2[257] ;
  assign pcc_capability__h57882 = { 64'hFFFE7E0000011111, near_mem$imem_pc } ;
  assign perms__h60717 =
	     rs2_val_bypassed_capability__h31161[127:113] & y__h64225 ;
  assign range__h6677 = { 52'd0, near_mem$imem_instr[31:20] } ;
  assign rd_val___1__h61510 =
	     rs1_val_bypassed_capability__h6632[63:0] +
	     _theResult___snd__h65281 ;
  assign rd_val___1__h61518 =
	     rs1_val_bypassed_capability__h6632[63:0] -
	     _theResult___snd__h65281 ;
  assign rd_val___1__h61525 =
	     ((rs1_val_bypassed_capability__h6632[63:0] ^
	       64'h8000000000000000) <
	      (_theResult___snd__h65281 ^ 64'h8000000000000000)) ?
	       64'd1 :
	       64'd0 ;
  assign rd_val___1__h61532 =
	     (rs1_val_bypassed_capability__h6632[63:0] <
	      _theResult___snd__h65281) ?
	       64'd1 :
	       64'd0 ;
  assign rd_val___1__h61539 =
	     rs1_val_bypassed_capability__h6632[63:0] ^
	     _theResult___snd__h65281 ;
  assign rd_val___1__h61546 =
	     rs1_val_bypassed_capability__h6632[63:0] |
	     _theResult___snd__h65281 ;
  assign rd_val___1__h65378 =
	     { {32{new_offset4002_BITS_31_TO_0__q32[31]}},
	       new_offset4002_BITS_31_TO_0__q32 } ;
  assign rd_val___1__h65430 = { {32{x__h65433[31]}}, x__h65433 } ;
  assign rd_val___1__h65484 = { {32{x__h65487[31]}}, x__h65487 } ;
  assign rd_val___1__h65513 = { {32{tmp__h65512[31]}}, tmp__h65512 } ;
  assign rd_val___1__h65611 =
	     { {32{rs1_val_bypassed_capability632_BITS_31_TO_0_PL_ETC__q11[31]}},
	       rs1_val_bypassed_capability632_BITS_31_TO_0_PL_ETC__q11 } ;
  assign rd_val___1__h65699 =
	     { {32{rs1_val_bypassed_capability632_BITS_31_TO_0_MI_ETC__q12[31]}},
	       rs1_val_bypassed_capability632_BITS_31_TO_0_MI_ETC__q12 } ;
  assign rd_val___1__h65705 = { {32{x__h65708[31]}}, x__h65708 } ;
  assign rd_val___1__h65750 = { {32{x__h65753[31]}}, x__h65753 } ;
  assign rd_val__h6051 = { {32{v32__h6049[31]}}, v32__h6049 } ;
  assign rd_val__h6068 = near_mem$imem_pc + rd_val__h6051 ;
  assign rd_val__h6357 =
	     (near_mem$imem_instr[11:7] == 5'd0) ?
	       64'd0 :
	       csr_regfile$read_csr[63:0] ;
  assign rd_val__h65067 =
	     rs1_val_bypassed_capability__h6632[63:0] << shamt__h5945 ;
  assign rd_val__h65161 =
	     rs1_val_bypassed_capability__h6632[63:0] >> shamt__h5945 ;
  assign rd_val__h65183 =
	     rs1_val_bypassed_capability__h6632[63:0] >> shamt__h5945 |
	     ~(64'hFFFFFFFFFFFFFFFF >> shamt__h5945) &
	     {64{rs1_val_bypassed_capability632_BITS_63_TO_0__q10[63]}} ;
  assign ret_capability__h64010 =
	     { rs1_val_bypassed_capability__h6632[127:111],
	       exp__h6730,
	       rs1_val_bypassed_capability__h6632[104],
	       rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q15[19:0],
	       rs1_val_bypassed_capability__h6632[83:0] } ;
  assign ret_capability__h64078 =
	     { rs1_val_bypassed_capability__h6632[127:111],
	       exp__h31971,
	       rs1_val_bypassed_capability__h6632[104],
	       rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q20[19:0],
	       rs1_val_bypassed_capability__h6632[83:0] } ;
  assign ret_pc__h5871 = near_mem$imem_pc + 64'd4 ;
  assign rg_cur_priv_9_EQ_0b11_833_OR_rg_cur_priv_9_EQ__ETC___d1857 =
	     (rg_cur_priv == 2'b11 ||
	      rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[21] ||
	      rg_cur_priv == 2'b0 && csr_regfile$read_misa[13]) &&
	     near_mem$imem_instr[31:20] == 12'b000100000101 ;
  assign rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1444 =
	     rg_cur_priv < decoded_instr_rs2__h5316[4:3] ;
  assign rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 =
	     rg_cur_priv < near_mem$imem_instr[29:28] ;
  assign rg_halt_914_OR_csr_regfile_interrupt_pending_r_ETC___d3057 =
	     rg_halt || csr_regfile$interrupt_pending[5] ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd2 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ||
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2920 ||
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) ;
  assign rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3069 =
	     rg_state == 3'd2 && !rg_halt &&
	     !csr_regfile$interrupt_pending[5] &&
	     !stage3_rg_full ;
  assign rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3082 =
	     rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3069 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd3 ;
  assign rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3088 =
	     rg_state_7_EQ_2_820_AND_NOT_rg_halt_914_915_AN_ETC___d3069 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd2 ;
  assign rg_state_7_EQ_2_820_AND_stage1_rg_full_16_AND__ETC___d3119 =
	     rg_state == 3'd2 && stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d3114 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     !stage3_rg_full ;
  assign rg_state_7_EQ_2_820_AND_stage1_rg_full_16_OR_N_ETC___d2928 =
	     rg_state == 3'd2 &&
	     (stage1_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) &&
	     (stage3_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd3) &&
	     (stage3_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      !stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2909) &&
	     (NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2925 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) ;
  assign rs1_val__h6356 =
	     near_mem$imem_instr[14] ?
	       { 59'd0, near_mem$imem_instr[19:15] } :
	       rs1_val_bypassed_capability__h6632[63:0] ;
  assign rs1_val_bypassed_capability632_BITS_31_TO_0_MI_ETC__q12 =
	     rs1_val_bypassed_capability__h6632[31:0] -
	     rs2_val_bypassed_capability__h31161[31:0] ;
  assign rs1_val_bypassed_capability632_BITS_31_TO_0_PL_ETC__q11 =
	     rs1_val_bypassed_capability__h6632[31:0] +
	     rs2_val_bypassed_capability__h31161[31:0] ;
  assign rs1_val_bypassed_capability632_BITS_31_TO_0_SR_ETC__q7 =
	     rs1_val_bypassed_capability__h6632[31:0] >>
	     rs2_val_bypassed_capability__h31161[4:0] |
	     ~(32'hFFFFFFFF >> rs2_val_bypassed_capability__h31161[4:0]) &
	     {32{rs1_val_bypassed_capability632_BITS_31_TO_0__q6[31]}} ;
  assign rs1_val_bypassed_capability632_BITS_31_TO_0__q6 =
	     rs1_val_bypassed_capability__h6632[31:0] ;
  assign rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q15 =
	     rs1_val_bypassed_capability__h6632[63:0] >> exp__h6730 ;
  assign rs1_val_bypassed_capability632_BITS_63_TO_0_SR_ETC__q20 =
	     rs1_val_bypassed_capability__h6632[63:0] >> exp__h31971 ;
  assign rs1_val_bypassed_capability632_BITS_63_TO_0__q10 =
	     rs1_val_bypassed_capability__h6632[63:0] ;
  assign rs1_val_bypassed_capability__h6632 =
	     (near_mem$imem_instr[19:15] == 5'd0) ?
	       128'd0 :
	       b_capability__h6630 ;
  assign rs1_val_bypassed_tag__h6631 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign rs2_val_bypassed_capability__h31161 =
	     (decoded_instr_rs2__h5316 == 5'b0) ?
	       128'd0 :
	       b_capability__h31159 ;
  assign rs2_val_bypassed_tag__h31160 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1414 ;
  assign shamt__h5945 =
	     (near_mem$imem_instr[6:0] == 7'b0010011) ?
	       near_mem$imem_instr[25:20] :
	       rs2_val_bypassed_capability__h31161[5:0] ;
  assign spliced_bits__h69119 =
	     csr_regfile$read_misa[20] ?
	       (csr_regfile$read_misa[18] ?
		  ((IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[12:11] ==
		    2'b10) ?
		     2'b01 :
		     IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[12:11]) :
		  ((IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[12:11] ==
		    2'b11) ?
		     IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[12:11] :
		     2'b0)) :
	       2'b11 ;
  assign spp__h69068 =
	     { 1'd0,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2507[8] } ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1924 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd0 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1928 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd1 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1932 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd2 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1936 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd3 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1940 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd4 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1944 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd5 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1948 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd6 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1952 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd7 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1956 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd8 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1960 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1920 ==
	     4'd9 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2025 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 ==
	     3'd0 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2029 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 ==
	     3'd1 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2033 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 ==
	     3'd2 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2037 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1638 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1800 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 ==
	     3'd3 ;
  assign stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186 =
	     { (stage2_rg_stage2[396:394] == 3'd3 ||
		stage2_rg_stage2[396:394] == 3'd0) &&
	       stage2_rg_stage2[257],
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 } ;
  assign stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 =
	     stage3_rg_stage3_BITS_136_TO_129__q4[decoded_instr_rs2__h5316[2:0]] ;
  assign stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 =
	     stage3_rg_stage3_BITS_136_TO_129__q4[near_mem$imem_instr[17:15]] ;
  assign stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 =
	     stage3_rg_stage3[138:137] == decoded_instr_rs2__h5316[4:3] ;
  assign stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 =
	     stage3_rg_stage3[138:137] == near_mem$imem_instr[19:18] ;
  assign stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 =
	     stage3_rg_stage3[285:279] == 7'b1011011 &&
	     stage3_rg_stage3[293:291] == 3'b0 &&
	     (stage3_rg_stage3[303:299] == 5'h0D ||
	      stage3_rg_stage3[303:299] == 5'h10) &&
	     stage3_rg_stage3[310:304] == 7'b1111111 ;
  assign stage3_rg_stage3_BITS_136_TO_129__q4 = stage3_rg_stage3[136:129] ;
  assign tmp__h65512 =
	     rs1_val_bypassed_capability__h6632[31:0] >>
	     near_mem$imem_instr[24:20] |
	     ~(32'hFFFFFFFF >> near_mem$imem_instr[24:20]) &
	     {32{rs1_val_bypassed_capability632_BITS_31_TO_0__q6[31]}} ;
  assign top__h31984 =
	     rs1_val_bypassed_capability__h6632[63:0] +
	     rs2_val_bypassed_capability__h31161[63:0] ;
  assign top__h6743 =
	     rs1_val_bypassed_capability__h6632[63:0] + range__h6677 ;
  assign trap__h31922 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       _theResult___fst__h31968 ;
  assign trap__h6679 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
	       5'd18 :
	       _theResult___fst__h6727 ;
  assign upper__h30551 = x__h30760 - 64'd1 ;
  assign upper__h31281 = x__h31490 - 64'd1 ;
  assign upper__h56896 = x__h57179 - 64'd1 ;
  assign upper__h58348 = x__h58557 - 64'd1 ;
  assign upper__h59566 = x__h59775 - 64'd1 ;
  assign upper__h59825 = x__h60034 - 64'd1 ;
  assign upper__h60084 = x__h60293 - 64'd1 ;
  assign upper__h60343 = x__h60552 - 64'd1 ;
  assign v32__h6049 = { near_mem$imem_instr[31:12], 12'h0 } ;
  assign value__h62828 =
	     near_mem$imem_exc ?
	       near_mem$imem_pc :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2779 ;
  assign x0017_SRL_controller_capability9285_BITS_110_T_ETC__q24 =
	     x__h60017 >> controller_capability__h59285[110:105] ;
  assign x0276_SRL_controller_capability9285_BITS_110_T_ETC__q26 =
	     x__h60276 >> controller_capability__h59285[110:105] ;
  assign x0535_SRL_controller_capability9285_BITS_110_T_ETC__q27 =
	     x__h60535 >> controller_capability__h59285[110:105] ;
  assign x0586_SRL_rs1_val_bypassed_capability632_BITS__ETC__q30 =
	     x__h30586 >> rs1_val_bypassed_capability__h6632[110:105] ;
  assign x0743_SRL_rs1_val_bypassed_capability632_BITS__ETC__q33 =
	     x__h30743 >> rs1_val_bypassed_capability__h6632[110:105] ;
  assign x1316_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q16 =
	     x__h31316 >> rs2_val_bypassed_capability__h31161[110:105] ;
  assign x1473_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q17 =
	     x__h31473 >> rs2_val_bypassed_capability__h31161[110:105] ;
  assign x6931_SRL_rs1_val_bypassed_capability632_BITS__ETC__q22 =
	     x__h56931 >> rs1_val_bypassed_capability__h6632[110:105] ;
  assign x7162_SRL_rs1_val_bypassed_capability632_BITS__ETC__q21 =
	     x__h57162 >> rs1_val_bypassed_capability__h6632[110:105] ;
  assign x8540_SRL_rs2_val_bypassed_capability1161_BITS_ETC__q43 =
	     x__h58540 >> rs2_val_bypassed_capability__h31161[110:105] ;
  assign x9601_SRL_controller_capability9285_BITS_110_T_ETC__q23 =
	     x__h59601 >> controller_capability__h59285[110:105] ;
  assign x9758_SRL_controller_capability9285_BITS_110_T_ETC__q25 =
	     x__h59758 >> controller_capability__h59285[110:105] ;
  assign x__h15735 = x__h15747 + y__h15748 ;
  assign x__h15747 = x__h15759 + y__h15760 ;
  assign x__h15759 = x__h15771 + y__h15772 ;
  assign x__h15771 = x__h15783 + y__h15784 ;
  assign x__h15783 = x__h15795 + y__h15796 ;
  assign x__h15795 = x__h15807 + y__h15808 ;
  assign x__h15807 = x__h15819 + y__h15820 ;
  assign x__h15819 = x__h15831 + y__h15832 ;
  assign x__h15831 = x__h15843 + y__h15844 ;
  assign x__h15843 = x__h15855 + y__h15856 ;
  assign x__h15855 = { 6'd0, near_mem$imem_instr[31] } ;
  assign x__h17988 =
	     64'hFFFFFFFFFFFFFFFF <<
	     _63_MINUS_IF_near_memimem_instr_BIT_31_THEN_52_ETC__q13[5:0] ;
  assign x__h26016 = x__h26017 & y__h26018 ;
  assign x__h26017 = ~rs1_val_bypassed_capability__h6632[63:0] ;
  assign x__h30586 = { 1'b0, rs1_val_bypassed_capability__h6632[63:0] } ;
  assign x__h30743 = { 1'b0, upper__h30551 } ;
  assign x__h30760 = rs1_val_bypassed_capability__h6632[63:0] + 64'd4 ;
  assign x__h31316 = { 1'b0, rs2_val_bypassed_capability__h31161[63:0] } ;
  assign x__h31473 = { 1'b0, upper__h31281 } ;
  assign x__h31490 = rs2_val_bypassed_capability__h31161[63:0] + 64'd1 ;
  assign x__h40976 = x__h40988 + y__h40989 ;
  assign x__h40988 = x__h41000 + y__h41001 ;
  assign x__h41000 = x__h41012 + y__h41013 ;
  assign x__h41012 = x__h41024 + y__h41025 ;
  assign x__h41024 = x__h41036 + y__h41037 ;
  assign x__h41036 = x__h41048 + y__h41049 ;
  assign x__h41048 = x__h41060 + y__h41061 ;
  assign x__h41060 = x__h41072 + y__h41073 ;
  assign x__h41072 = x__h41084 + y__h41085 ;
  assign x__h41084 = x__h41096 + y__h41097 ;
  assign x__h41096 = x__h41108 + y__h41109 ;
  assign x__h41108 = x__h41120 + y__h41121 ;
  assign x__h41120 = x__h41132 + y__h41133 ;
  assign x__h41132 = x__h41144 + y__h41145 ;
  assign x__h41144 = x__h41156 + y__h41157 ;
  assign x__h41156 = x__h41168 + y__h41169 ;
  assign x__h41168 = x__h41180 + y__h41181 ;
  assign x__h41180 = x__h41192 + y__h41193 ;
  assign x__h41192 = x__h41204 + y__h41205 ;
  assign x__h41204 = x__h41216 + y__h41217 ;
  assign x__h41216 = x__h41228 + y__h41229 ;
  assign x__h41228 = x__h41240 + y__h41241 ;
  assign x__h41240 = x__h41252 + y__h41253 ;
  assign x__h41252 = x__h41264 + y__h41265 ;
  assign x__h41264 = x__h41276 + y__h41277 ;
  assign x__h41276 = x__h41288 + y__h41289 ;
  assign x__h41288 = x__h41300 + y__h41301 ;
  assign x__h41300 = x__h41312 + y__h41313 ;
  assign x__h41312 = x__h41324 + y__h41325 ;
  assign x__h41324 = x__h41336 + y__h41337 ;
  assign x__h41336 = x__h41348 + y__h41349 ;
  assign x__h41348 = x__h41360 + y__h41361 ;
  assign x__h41360 = x__h41372 + y__h41373 ;
  assign x__h41372 = x__h41384 + y__h41385 ;
  assign x__h41384 = x__h41396 + y__h41397 ;
  assign x__h41396 = x__h41408 + y__h41409 ;
  assign x__h41408 = x__h41420 + y__h41421 ;
  assign x__h41420 = x__h41432 + y__h41433 ;
  assign x__h41432 = x__h41444 + y__h41445 ;
  assign x__h41444 = x__h41456 + y__h41457 ;
  assign x__h41456 = x__h41468 + y__h41469 ;
  assign x__h41468 = x__h41480 + y__h41481 ;
  assign x__h41480 = x__h41492 + y__h41493 ;
  assign x__h41492 = x__h41504 + y__h41505 ;
  assign x__h41504 = x__h41516 + y__h41517 ;
  assign x__h41516 = x__h41528 + y__h41529 ;
  assign x__h41528 = x__h41540 + y__h41541 ;
  assign x__h41540 = x__h41552 + y__h41553 ;
  assign x__h41552 = x__h41564 + y__h41565 ;
  assign x__h41564 = x__h41576 + y__h41577 ;
  assign x__h41576 = x__h41588 + y__h41589 ;
  assign x__h41588 = x__h41600 + y__h41601 ;
  assign x__h41600 = x__h41612 + y__h41613 ;
  assign x__h41612 = x__h41624 + y__h41625 ;
  assign x__h41624 = x__h41636 + y__h41637 ;
  assign x__h41636 = x__h41648 + y__h41649 ;
  assign x__h41648 = x__h41660 + y__h41661 ;
  assign x__h41660 = x__h41672 + y__h41673 ;
  assign x__h41672 = x__h41684 + y__h41685 ;
  assign x__h41684 = x__h41696 + y__h41697 ;
  assign x__h41696 = x__h41708 + y__h41709 ;
  assign x__h41708 = x__h41720 + y__h41721 ;
  assign x__h41720 = { 6'd0, rs2_val_bypassed_capability__h31161[63] } ;
  assign x__h43247 =
	     64'hFFFFFFFFFFFFFFFF <<
	     _63_MINUS_IF_rs2_val_bypassed_capability1161_BI_ETC__q18[5:0] ;
  assign x__h52314 = x__h26017 & y__h52316 ;
  assign x__h56931 = { 45'd0, rs2_val_bypassed_capability__h31161[83:64] } ;
  assign x__h57162 = { 1'b0, upper__h56896 } ;
  assign x__h57179 = lower__h56895 + 64'd1 ;
  assign x__h58540 = { 1'b0, upper__h58348 } ;
  assign x__h58557 = rs2_val_bypassed_capability__h31161[63:0] + 64'd4 ;
  assign x__h59601 = { 1'b0, controller_capability__h59285[63:0] } ;
  assign x__h59758 = { 1'b0, upper__h59566 } ;
  assign x__h59775 = controller_capability__h59285[63:0] + 64'd1 ;
  assign x__h60017 = { 1'b0, upper__h59825 } ;
  assign x__h60034 = controller_capability__h59285[63:0] + 64'd2 ;
  assign x__h60276 = { 1'b0, upper__h60084 } ;
  assign x__h60293 = controller_capability__h59285[63:0] + 64'd4 ;
  assign x__h60535 = { 1'b0, upper__h60343 } ;
  assign x__h60552 = controller_capability__h59285[63:0] + 64'd8 ;
  assign x__h64305 =
	     b__h31282 << rs2_val_bypassed_capability__h31161[110:105] ;
  assign x__h64441 =
	     b__h56897 << rs1_val_bypassed_capability__h6632[110:105] ;
  assign x__h64580 = b__h31282 + 20'd1 ;
  assign x__h64717 = b__h56897 + 20'd1 ;
  assign x__h65433 =
	     rs1_val_bypassed_capability__h6632[31:0] <<
	     near_mem$imem_instr[24:20] ;
  assign x__h65487 =
	     rs1_val_bypassed_capability__h6632[31:0] >>
	     near_mem$imem_instr[24:20] ;
  assign x__h65708 =
	     rs1_val_bypassed_capability__h6632[31:0] <<
	     rs2_val_bypassed_capability__h31161[4:0] ;
  assign x__h65753 =
	     rs1_val_bypassed_capability__h6632[31:0] >>
	     rs2_val_bypassed_capability__h31161[4:0] ;
  assign x__h67161 =
	     { near_mem$imem_instr[19:15], near_mem$imem_instr[11:7] } ;
  assign x__h68452 =
	     { !rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1444,
	       1'd1,
	       decoded_instr_rs2__h5316 == 5'b0 ||
	       decoded_instr_rs2__h5316 == 5'b00001 ||
	       (decoded_instr_rs2__h5316[4:2] == 3'b001 ||
		decoded_instr_rs2__h5316[4:2] == 3'b011 ||
		decoded_instr_rs2__h5316[4:2] == 3'b111) &&
	       decoded_instr_rs2__h5316[1:0] != 2'b01 } ;
  assign x__h75557 =
	     csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d3104[63:0] /
	     _theResult____h75556 ;
  assign x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5 =
	     x_out_bypass_rd_val_capability__h4621[7:0] ;
  assign y__h15736 = { 6'd0, near_mem$imem_instr[20] } ;
  assign y__h15748 = { 6'd0, near_mem$imem_instr[21] } ;
  assign y__h15760 = { 6'd0, near_mem$imem_instr[22] } ;
  assign y__h15772 = { 6'd0, near_mem$imem_instr[23] } ;
  assign y__h15784 = { 6'd0, near_mem$imem_instr[24] } ;
  assign y__h15796 = { 6'd0, near_mem$imem_instr[25] } ;
  assign y__h15808 = { 6'd0, near_mem$imem_instr[26] } ;
  assign y__h15820 = { 6'd0, near_mem$imem_instr[27] } ;
  assign y__h15832 = { 6'd0, near_mem$imem_instr[28] } ;
  assign y__h15844 = { 6'd0, near_mem$imem_instr[29] } ;
  assign y__h15856 = { 6'd0, near_mem$imem_instr[30] } ;
  assign y__h17987 = ~x__h17988 ;
  assign y__h26018 = ~top__h6743 ;
  assign y__h40977 = { 6'd0, rs2_val_bypassed_capability__h31161[0] } ;
  assign y__h40989 = { 6'd0, rs2_val_bypassed_capability__h31161[1] } ;
  assign y__h41001 = { 6'd0, rs2_val_bypassed_capability__h31161[2] } ;
  assign y__h41013 = { 6'd0, rs2_val_bypassed_capability__h31161[3] } ;
  assign y__h41025 = { 6'd0, rs2_val_bypassed_capability__h31161[4] } ;
  assign y__h41037 = { 6'd0, rs2_val_bypassed_capability__h31161[5] } ;
  assign y__h41049 = { 6'd0, rs2_val_bypassed_capability__h31161[6] } ;
  assign y__h41061 = { 6'd0, rs2_val_bypassed_capability__h31161[7] } ;
  assign y__h41073 = { 6'd0, rs2_val_bypassed_capability__h31161[8] } ;
  assign y__h41085 = { 6'd0, rs2_val_bypassed_capability__h31161[9] } ;
  assign y__h41097 = { 6'd0, rs2_val_bypassed_capability__h31161[10] } ;
  assign y__h41109 = { 6'd0, rs2_val_bypassed_capability__h31161[11] } ;
  assign y__h41121 = { 6'd0, rs2_val_bypassed_capability__h31161[12] } ;
  assign y__h41133 = { 6'd0, rs2_val_bypassed_capability__h31161[13] } ;
  assign y__h41145 = { 6'd0, rs2_val_bypassed_capability__h31161[14] } ;
  assign y__h41157 = { 6'd0, rs2_val_bypassed_capability__h31161[15] } ;
  assign y__h41169 = { 6'd0, rs2_val_bypassed_capability__h31161[16] } ;
  assign y__h41181 = { 6'd0, rs2_val_bypassed_capability__h31161[17] } ;
  assign y__h41193 = { 6'd0, rs2_val_bypassed_capability__h31161[18] } ;
  assign y__h41205 = { 6'd0, rs2_val_bypassed_capability__h31161[19] } ;
  assign y__h41217 = { 6'd0, rs2_val_bypassed_capability__h31161[20] } ;
  assign y__h41229 = { 6'd0, rs2_val_bypassed_capability__h31161[21] } ;
  assign y__h41241 = { 6'd0, rs2_val_bypassed_capability__h31161[22] } ;
  assign y__h41253 = { 6'd0, rs2_val_bypassed_capability__h31161[23] } ;
  assign y__h41265 = { 6'd0, rs2_val_bypassed_capability__h31161[24] } ;
  assign y__h41277 = { 6'd0, rs2_val_bypassed_capability__h31161[25] } ;
  assign y__h41289 = { 6'd0, rs2_val_bypassed_capability__h31161[26] } ;
  assign y__h41301 = { 6'd0, rs2_val_bypassed_capability__h31161[27] } ;
  assign y__h41313 = { 6'd0, rs2_val_bypassed_capability__h31161[28] } ;
  assign y__h41325 = { 6'd0, rs2_val_bypassed_capability__h31161[29] } ;
  assign y__h41337 = { 6'd0, rs2_val_bypassed_capability__h31161[30] } ;
  assign y__h41349 = { 6'd0, rs2_val_bypassed_capability__h31161[31] } ;
  assign y__h41361 = { 6'd0, rs2_val_bypassed_capability__h31161[32] } ;
  assign y__h41373 = { 6'd0, rs2_val_bypassed_capability__h31161[33] } ;
  assign y__h41385 = { 6'd0, rs2_val_bypassed_capability__h31161[34] } ;
  assign y__h41397 = { 6'd0, rs2_val_bypassed_capability__h31161[35] } ;
  assign y__h41409 = { 6'd0, rs2_val_bypassed_capability__h31161[36] } ;
  assign y__h41421 = { 6'd0, rs2_val_bypassed_capability__h31161[37] } ;
  assign y__h41433 = { 6'd0, rs2_val_bypassed_capability__h31161[38] } ;
  assign y__h41445 = { 6'd0, rs2_val_bypassed_capability__h31161[39] } ;
  assign y__h41457 = { 6'd0, rs2_val_bypassed_capability__h31161[40] } ;
  assign y__h41469 = { 6'd0, rs2_val_bypassed_capability__h31161[41] } ;
  assign y__h41481 = { 6'd0, rs2_val_bypassed_capability__h31161[42] } ;
  assign y__h41493 = { 6'd0, rs2_val_bypassed_capability__h31161[43] } ;
  assign y__h41505 = { 6'd0, rs2_val_bypassed_capability__h31161[44] } ;
  assign y__h41517 = { 6'd0, rs2_val_bypassed_capability__h31161[45] } ;
  assign y__h41529 = { 6'd0, rs2_val_bypassed_capability__h31161[46] } ;
  assign y__h41541 = { 6'd0, rs2_val_bypassed_capability__h31161[47] } ;
  assign y__h41553 = { 6'd0, rs2_val_bypassed_capability__h31161[48] } ;
  assign y__h41565 = { 6'd0, rs2_val_bypassed_capability__h31161[49] } ;
  assign y__h41577 = { 6'd0, rs2_val_bypassed_capability__h31161[50] } ;
  assign y__h41589 = { 6'd0, rs2_val_bypassed_capability__h31161[51] } ;
  assign y__h41601 = { 6'd0, rs2_val_bypassed_capability__h31161[52] } ;
  assign y__h41613 = { 6'd0, rs2_val_bypassed_capability__h31161[53] } ;
  assign y__h41625 = { 6'd0, rs2_val_bypassed_capability__h31161[54] } ;
  assign y__h41637 = { 6'd0, rs2_val_bypassed_capability__h31161[55] } ;
  assign y__h41649 = { 6'd0, rs2_val_bypassed_capability__h31161[56] } ;
  assign y__h41661 = { 6'd0, rs2_val_bypassed_capability__h31161[57] } ;
  assign y__h41673 = { 6'd0, rs2_val_bypassed_capability__h31161[58] } ;
  assign y__h41685 = { 6'd0, rs2_val_bypassed_capability__h31161[59] } ;
  assign y__h41697 = { 6'd0, rs2_val_bypassed_capability__h31161[60] } ;
  assign y__h41709 = { 6'd0, rs2_val_bypassed_capability__h31161[61] } ;
  assign y__h41721 = { 6'd0, rs2_val_bypassed_capability__h31161[62] } ;
  assign y__h43246 = ~x__h43247 ;
  assign y__h52316 = ~top__h31984 ;
  assign y__h64225 = ~rs1_val_bypassed_capability__h6632[127:113] ;
  assign y__h69293 = ~rs1_val__h6356 ;
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011,
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0110011,
      7'b0110111,
      7'b0111011,
      7'b1100111,
      7'b1101111:
	  fv_out_data_to_stage2_rd__h5766 = near_mem$imem_instr[11:7];
      7'b1100011: fv_out_data_to_stage2_rd__h5766 = 5'd0;
      default: fv_out_data_to_stage2_rd__h5766 = near_mem$imem_instr[11:7];
    endcase
  end
  always@(stage2_rg_stage2)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd1: x_out_data_to_stage3_rd__h4794 = stage2_rg_stage2[393:389];
      3'd3: x_out_data_to_stage3_rd__h4794 = 5'd0;
      default: x_out_data_to_stage3_rd__h4794 = 5'd0;
    endcase
  end
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0, 3'b001, 3'b100, 3'b101, 3'b110, 3'b111:
	  alu_outputs___1_exc_code__h5858 = 5'd0;
      default: alu_outputs___1_exc_code__h5858 = 5'd2;
    endcase
  end
  always@(stage2_rg_stage2 or output_stage2___1_bypass_rd_val_tag__h4612)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3: x_out_bypass_rd_val_tag__h4620 = stage2_rg_stage2[257];
      default: x_out_bypass_rd_val_tag__h4620 =
		   output_stage2___1_bypass_rd_val_tag__h4612;
    endcase
  end
  always@(stage2_rg_stage2 or
	  output_stage2___1_bypass_rd_val_capability__h4613)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  x_out_bypass_rd_val_capability__h4621 = stage2_rg_stage2[256:129];
      default: x_out_bypass_rd_val_capability__h4621 =
		   output_stage2___1_bypass_rd_val_capability__h4613;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  csr_regfile$read_csr_cap or pcc_capability__h57882 or stage1_rg_ddc)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0: ccsr_val_capability__h64132 = pcc_capability__h57882;
      5'b00001: ccsr_val_capability__h64132 = stage1_rg_ddc[127:0];
      default: ccsr_val_capability__h64132 = csr_regfile$read_csr_cap[127:0];
    endcase
  end
  always@(stage2_rg_stage2 or
	  IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd2;
      3'd1:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 =
	      IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108;
      3'd3: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd3;
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd0;
    endcase
  end
  always@(stage2_rg_stage2 or near_mem$dmem_valid or near_mem$dmem_exc)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 = 2'd2;
      default: IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 =
		   near_mem$dmem_valid ?
		     (near_mem$dmem_exc ? 2'd3 : 2'd2) :
		     2'd1;
    endcase
  end
  always@(stage2_rg_stage2 or near_mem$dmem_word64)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 =
	      stage2_rg_stage2[256:129];
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 =
		   { 64'd0, near_mem$dmem_word64 };
    endcase
  end
  always@(near_mem$imem_instr or
	  controller_capability__h59285 or
	  alu_outputs___2_addr_capability__h62943 or
	  new_pcc_capability__h58010 or
	  alu_outputs___1_addr_capability__h62921)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  alu_outputs___1_addr_capability__h62966 =
	      alu_outputs___2_addr_capability__h62943;
      7'b1111110:
	  alu_outputs___1_addr_capability__h62966 =
	      new_pcc_capability__h58010;
      7'b1111111:
	  alu_outputs___1_addr_capability__h62966 =
	      alu_outputs___1_addr_capability__h62921;
      default: alu_outputs___1_addr_capability__h62966 =
		   controller_capability__h59285;
    endcase
  end
  always@(near_mem$imem_instr or
	  csr_regfile$read_csr or
	  rs1_val__h6356 or csr_val__h63806 or csr_val__h63811)
  begin
    case (near_mem$imem_instr[13:12])
      2'd0: csr_val__h6361 = csr_regfile$read_csr[63:0];
      2'b01: csr_val__h6361 = rs1_val__h6356;
      2'd2: csr_val__h6361 = csr_val__h63806;
      2'd3: csr_val__h6361 = csr_val__h63811;
    endcase
  end
  always@(funct10__h6030 or
	  _theResult___snd__h61747 or
	  rd_val___1__h65611 or
	  rd_val___1__h65705 or rd_val___1__h65750 or rd_val___1__h65699)
  begin
    case (funct10__h6030)
      10'b0: new_addr__h63981 = rd_val___1__h65611;
      10'b0000000001: new_addr__h63981 = rd_val___1__h65705;
      10'b0000000101: new_addr__h63981 = rd_val___1__h65750;
      10'b0100000000: new_addr__h63981 = rd_val___1__h65699;
      default: new_addr__h63981 = _theResult___snd__h61747;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  alu_outputs___1_val1_capability__h64046 or
	  rs1_val_bypassed_capability__h6632 or
	  newVal__h30515 or
	  x__h64441 or
	  newVal__h30521 or
	  rs1_val_bypassed_tag__h6631 or
	  newVal__h30530 or alu_outputs___1_val1_capability__h63964)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0:
	  alu_outputs___1_val1_capability__h64059 =
	      { 113'd0, rs1_val_bypassed_capability__h6632[127:113] };
      5'b00001:
	  alu_outputs___1_val1_capability__h64059 = { 64'd0, newVal__h30515 };
      5'b00010:
	  alu_outputs___1_val1_capability__h64059 = { 108'd0, x__h64441 };
      5'b00011:
	  alu_outputs___1_val1_capability__h64059 = { 64'd0, newVal__h30521 };
      5'b00100:
	  alu_outputs___1_val1_capability__h64059 =
	      { 127'd0, rs1_val_bypassed_tag__h6631 };
      5'b00101:
	  alu_outputs___1_val1_capability__h64059 =
	      { 127'd0, rs1_val_bypassed_capability__h6632[104] };
      5'b00110:
	  alu_outputs___1_val1_capability__h64059 = { 64'd0, newVal__h30530 };
      5'b01010, 5'b01011:
	  alu_outputs___1_val1_capability__h64059 =
	      rs1_val_bypassed_capability__h6632;
      5'b01100:
	  alu_outputs___1_val1_capability__h64059 =
	      alu_outputs___1_val1_capability__h63964;
      5'b01111:
	  alu_outputs___1_val1_capability__h64059 =
	      { 64'd0, rs1_val_bypassed_capability__h6632[63:0] };
      default: alu_outputs___1_val1_capability__h64059 =
		   alu_outputs___1_val1_capability__h64046;
    endcase
  end
  always@(stage2_rg_stage2)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 =
	      !stage2_rg_stage2[257];
      default: IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d461 =
		   stage2_rg_stage2[393:389] != 5'd0 ||
		   !stage2_rg_stage2[257];
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1536 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1401 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1421)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  CASE_near_memimem_instr_BITS_31_TO_25_0b11110_ETC__q28 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1401;
      7'b0011111:
	  CASE_near_memimem_instr_BITS_31_TO_25_0b11110_ETC__q28 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1421;
      default: CASE_near_memimem_instr_BITS_31_TO_25_0b11110_ETC__q28 =
		   near_mem$imem_instr[31:25] != 7'b0010010 &&
		   near_mem$imem_instr[31:25] != 7'b0010011 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1536;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_31_TO_25_0b11110_ETC__q28 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1381 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d930 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d944 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  rs1_val_bypassed_capability__h6632 or
	  rs1_val_bypassed_tag__h6631 or
	  rs2_val_bypassed_capability__h31161 or decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d1381;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d930;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d944;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      rs1_val_bypassed_capability__h6632[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 =
	      rs1_val_bypassed_capability__h6632[104] &&
	      rs1_val_bypassed_tag__h6631;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 =
	      rs1_val_bypassed_capability__h6632[104] &&
	      rs1_val_bypassed_tag__h6631 &&
	      rs2_val_bypassed_capability__h31161[63:0] != 64'b0;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 =
	      decoded_instr_rs2__h5316 != 5'b0 &&
	      decoded_instr_rs2__h5316 != 5'b00001 &&
	      decoded_instr_rs2__h5316 != 5'b00010 &&
	      decoded_instr_rs2__h5316 != 5'b00011 &&
	      decoded_instr_rs2__h5316 != 5'b00100 &&
	      decoded_instr_rs2__h5316 != 5'b00101 &&
	      decoded_instr_rs2__h5316 != 5'b00110 &&
	      decoded_instr_rs2__h5316 != 5'b01111 &&
	      decoded_instr_rs2__h5316 != 5'b01011 &&
	      decoded_instr_rs2__h5316 != 5'b01010 &&
	      decoded_instr_rs2__h5316 != 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 =
		   near_mem$imem_instr[31:25] != 7'b0011101 &&
		   CASE_near_memimem_instr_BITS_31_TO_25_0b11110_ETC__q28;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b100:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b101:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b110:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
		   near_mem$imem_instr[14:12] == 3'b111 &&
		   !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_addr_capability__h62966 or
	  alu_outputs___1_addr_capability__h62880 or
	  alu_outputs_addr_capability__h62883 or
	  alu_outputs_addr_capability__h62863 or
	  alu_outputs_addr_capability__h62871 or
	  alu_outputs_addr_capability__h62867 or
	  alu_outputs___1_addr_capability__h62894)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011:
	  alu_outputs_addr_capability__h62981 =
	      alu_outputs___1_addr_capability__h62880;
      7'b0100011:
	  alu_outputs_addr_capability__h62981 =
	      alu_outputs_addr_capability__h62883;
      7'b1100011:
	  alu_outputs_addr_capability__h62981 =
	      alu_outputs_addr_capability__h62863;
      7'b1100111:
	  alu_outputs_addr_capability__h62981 =
	      alu_outputs_addr_capability__h62871;
      7'b1101111:
	  alu_outputs_addr_capability__h62981 =
	      alu_outputs_addr_capability__h62867;
      7'b1110011:
	  alu_outputs_addr_capability__h62981 =
	      alu_outputs___1_addr_capability__h62894;
      default: alu_outputs_addr_capability__h62981 =
		   alu_outputs___1_addr_capability__h62966;
    endcase
  end
  always@(near_mem$imem_instr or
	  _theResult_____1_snd__h61558 or
	  rd_val___1__h61525 or
	  rd_val___1__h61532 or rd_val___1__h61539 or rd_val___1__h61546)
  begin
    case (near_mem$imem_instr[14:12])
      3'b010: _theResult_____1_snd__h61530 = rd_val___1__h61525;
      3'b011: _theResult_____1_snd__h61530 = rd_val___1__h61532;
      3'b100: _theResult_____1_snd__h61530 = rd_val___1__h61539;
      3'b110: _theResult_____1_snd__h61530 = rd_val___1__h61546;
      default: _theResult_____1_snd__h61530 = _theResult_____1_snd__h61558;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547 or
	  rs1_val_bypassed_tag__h6631 or
	  rs1_val_bypassed_capability__h6632 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d859)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1550 =
	      rs1_val_bypassed_tag__h6631 &&
	      rs1_val_bypassed_capability__h6632[104];
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1550 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d859;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1550 =
		   near_mem$imem_instr[14:12] != 3'b0 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1547;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b100:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b101:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b110:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 =
		   near_mem$imem_instr[14:12] != 3'b111 ||
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
    endcase
  end
  always@(near_mem$imem_instr or
	  near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1550 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1557 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1557 =
	      near_mem$imem_instr[14:12] != 3'b0 &&
	      (near_mem$imem_instr[14:12] != 3'b001 ||
	       near_mem$imem_instr[25]) &&
	      (near_mem$imem_instr[14:12] != 3'b101 ||
	       near_mem$imem_instr[25]);
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1557 =
	      funct10__h6030 != 10'b0 && funct10__h6030 != 10'b0100000000 &&
	      funct10__h6030 != 10'b0000000001 &&
	      funct10__h6030 != 10'b0000000101 &&
	      funct10__h6030 != 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1557 =
		   near_mem$imem_instr[6:0] != 7'b0110111 &&
		   near_mem$imem_instr[6:0] != 7'b0010111 &&
		   near_mem$imem_instr[6:0] != 7'b0000011 &&
		   near_mem$imem_instr[6:0] != 7'b0100011 &&
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] == 3'b0 ||
		      near_mem$imem_instr[14:12] == 3'b100 ||
		      near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 :
		      near_mem$imem_instr[6:0] != 7'b1011011 ||
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1550);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  NOT_0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_ETC___d1609 or
	  b_capability__h6630 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1571 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577 or
	  new_offset__h64002 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1571 ||
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1577;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620 =
	      new_offset__h64002[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620 =
	      near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1620 =
		   near_mem$imem_instr[6:0] != 7'b1011011 ||
		   near_mem$imem_instr[14:12] != 3'b0 ||
		   near_mem$imem_instr[31:25] != 7'b1111111 ||
		   decoded_instr_rs2__h5316 != 5'b01100 ||
		   NOT_0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_ETC___d1609 ||
		   b_capability__h6630[1:0] != 2'b0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1775 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1723 or
	  rs1_val_bypassed_tag__h6631 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1726)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1778 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1723;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1778 =
	      rs1_val_bypassed_tag__h6631 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1726;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1778 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1775;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1778 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1720 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702 or
	  rs1_val_bypassed_tag__h6631 or
	  rs2_val_bypassed_tag__h31160 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1709 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1720;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 =
	      rs1_val_bypassed_tag__h6631 && rs2_val_bypassed_tag__h31160 &&
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 =
	      rs1_val_bypassed_tag__h6631 &&
	      !rs1_val_bypassed_capability__h6632[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 =
	      !rs1_val_bypassed_capability__h6632[104] ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 =
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1709;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 =
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      decoded_instr_rs2__h5316 == 5'b00010 ||
	      decoded_instr_rs2__h5316 == 5'b00011 ||
	      decoded_instr_rs2__h5316 == 5'b00100 ||
	      decoded_instr_rs2__h5316 == 5'b00101 ||
	      decoded_instr_rs2__h5316 == 5'b00110 ||
	      decoded_instr_rs2__h5316 == 5'b01111 ||
	      decoded_instr_rs2__h5316 == 5'b01011 ||
	      decoded_instr_rs2__h5316 == 5'b01010 ||
	      decoded_instr_rs2__h5316 == 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1778;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  rs1_val_bypassed_capability__h6632 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1684)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1789 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      !rs1_val_bypassed_capability__h6632[104];
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1789 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1684;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1789 =
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1786;
    endcase
  end
  always@(near_mem$imem_instr or
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1676 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1789 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1655 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1796 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1655;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1796 =
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101) &&
	      !near_mem$imem_instr[25];
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1796 =
	      funct10__h6030 == 10'b0 || funct10__h6030 == 10'b0100000000 ||
	      funct10__h6030 == 10'b0000000001 ||
	      funct10__h6030 == 10'b0000000101 ||
	      funct10__h6030 == 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1796 =
		   near_mem$imem_instr[6:0] == 7'b0110111 ||
		   near_mem$imem_instr[6:0] == 7'b0010111 ||
		   near_mem$imem_instr[6:0] == 7'b0000011 ||
		   near_mem$imem_instr[6:0] == 7'b0100011 ||
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] != 3'b0 &&
		      near_mem$imem_instr[14:12] != 3'b100 &&
		      NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1676 :
		      near_mem$imem_instr[6:0] == 7'b1011011 &&
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1789);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810 or
	  b_capability__h6630 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1803 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h64002 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1803 &&
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818 =
	      !new_offset__h64002[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818 =
	      !near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1818 =
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   near_mem$imem_instr[31:25] == 7'b1111111 &&
		   decoded_instr_rs2__h5316 == 5'b01100 &&
		   _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810 &&
		   b_capability__h6630[1:0] == 2'b0;
    endcase
  end
  always@(rg_cur_priv)
  begin
    case (rg_cur_priv)
      2'b0: CASE_rg_cur_priv_0b0_8_0b1_9_11__q34 = 5'd8;
      2'b01: CASE_rg_cur_priv_0b0_8_0b1_9_11__q34 = 5'd9;
      default: CASE_rg_cur_priv_0b0_8_0b1_9_11__q34 = 5'd11;
    endcase
  end
  always@(near_mem$imem_instr or CASE_rg_cur_priv_0b0_8_0b1_9_11__q34)
  begin
    case (near_mem$imem_instr[31:20])
      12'b0:
	  CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q35 =
	      CASE_rg_cur_priv_0b0_8_0b1_9_11__q34;
      12'b000000000001:
	  CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q35 = 5'd3;
      default: CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q35 = 5'd2;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810 or
	  b_capability__h6630)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01101,
      5'b01111:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q36 = 4'd0;
      5'b01100:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q36 =
	      _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810 ?
		((b_capability__h6630[1:0] == 2'b0) ? 4'd1 : 4'd9) :
		4'd9;
      default: CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q36 = 4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1889 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1887 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1878 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702 or
	  rs1_val_bypassed_tag__h6631 or
	  rs2_val_bypassed_tag__h31160 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  rs1_val_bypassed_capability__h6632 or
	  rs2_val_bypassed_capability__h31161 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1881 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1886 or
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q36)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1889;
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1887;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1878;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702 ?
		4'd0 :
		4'd9;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      (rs1_val_bypassed_tag__h6631 && rs2_val_bypassed_tag__h31160 &&
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705) ?
		4'd0 :
		4'd9;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	       rs1_val_bypassed_capability__h6632[104]) ?
		4'd9 :
		4'd0;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      (rs1_val_bypassed_capability__h6632[104] &&
	       rs1_val_bypassed_tag__h6631) ?
		4'd9 :
		4'd0;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      (rs1_val_bypassed_capability__h6632[104] &&
	       rs1_val_bypassed_tag__h6631 &&
	       rs2_val_bypassed_capability__h31161[63:0] != 64'b0) ?
		4'd9 :
		4'd0;
      7'b0010010, 7'b0010011, 7'b0011101, 7'b0100000:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 = 4'd0;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1881;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1886;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 = 4'd9;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
	      CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q36;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  rg_cur_priv or
	  IF_rg_cur_priv_9_EQ_0b11_833_OR_rg_cur_priv_9__ETC___d1859)
  begin
    case (near_mem$imem_instr[31:20])
      12'b0, 12'b000000000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1861 = 4'd9;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1861 =
		   (rg_cur_priv == 2'b11 &&
		    near_mem$imem_instr[31:20] == 12'b001100000010) ?
		     4'd5 :
		     IF_rg_cur_priv_9_EQ_0b11_833_OR_rg_cur_priv_9__ETC___d1859;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904 or
	  rs1_val_bypassed_tag__h6631 or
	  rs1_val_bypassed_capability__h6632 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d859)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1907 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1904;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1907 =
	      (rs1_val_bypassed_tag__h6631 &&
	       rs1_val_bypassed_capability__h6632[104]) ?
		4'd9 :
		4'd0;
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1907 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d859 ?
		4'd9 :
		4'd0;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1907 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q37 = 4'd2;
      3'b001: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q37 = 4'd3;
      default: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q37 = 4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q37 or
	  IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1827 or
	  funct10__h6030 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1907 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1865)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011, 7'b0010111, 7'b0100011, 7'b0110111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 = 4'd0;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 =
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q37;
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 =
	      IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1827;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 =
	      (near_mem$imem_instr[14:12] != 3'b0 &&
	       (near_mem$imem_instr[14:12] != 3'b001 ||
		near_mem$imem_instr[25]) &&
	       (near_mem$imem_instr[14:12] != 3'b101 ||
		near_mem$imem_instr[25])) ?
		4'd9 :
		4'd0;
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 =
	      (funct10__h6030 != 10'b0 && funct10__h6030 != 10'b0100000000 &&
	       funct10__h6030 != 10'b0000000001 &&
	       funct10__h6030 != 10'b0000000101 &&
	       funct10__h6030 != 10'b0100000101) ?
		4'd9 :
		4'd0;
      7'b1011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 =
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1907;
      7'b1110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 =
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1865;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1571 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h64002 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1918 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d1571 ?
		4'd9 :
		(IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 ?
		   4'd1 :
		   4'd0);
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1918 =
	      new_offset__h64002[1] ? 4'd9 : 4'd1;
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1918 =
	      near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584[1] ?
		4'd9 :
		4'd1;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1918 =
		   ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		     near_mem$imem_instr[6:0] == 7'b0110011) &&
		    (near_mem$imem_instr[14:12] == 3'b001 ||
		     near_mem$imem_instr[14:12] == 3'b101)) ?
		     4'd0 :
		     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1914;
    endcase
  end
  always@(decoded_instr_rs2__h5316)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01100,
      5'b01111:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q38 = 3'd0;
      5'b01101:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q38 = 3'd3;
      default: CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q38 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2009 or
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q38)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  CASE_near_memimem_instr_BITS_31_TO_25_0b0_IF__ETC__q39 =
	      IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2009;
      7'b0000001,
      7'b0001000,
      7'b0001001,
      7'b0001011,
      7'b0001100,
      7'b0001101,
      7'b0001111,
      7'b0010001,
      7'b0010010,
      7'b0010011,
      7'b0011101,
      7'b0011110,
      7'b0011111,
      7'b1111110:
	  CASE_near_memimem_instr_BITS_31_TO_25_0b0_IF__ETC__q39 = 3'd0;
      7'b1111111:
	  CASE_near_memimem_instr_BITS_31_TO_25_0b0_IF__ETC__q39 =
	      CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q38;
      default: CASE_near_memimem_instr_BITS_31_TO_25_0b0_IF__ETC__q39 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_31_TO_25_0b0_IF__ETC__q39)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_CAS_ETC__q40 =
	      CASE_near_memimem_instr_BITS_31_TO_25_0b0_IF__ETC__q39;
      3'b001, 3'b010:
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_CAS_ETC__q40 = 3'd0;
      default: CASE_near_memimem_instr_BITS_14_TO_12_0b0_CAS_ETC__q40 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_CAS_ETC__q40)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 = 3'd1;
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0110011,
      7'b0110111,
      7'b0111011,
      7'b1100011,
      7'b1100111,
      7'b1101111,
      7'b1110011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 = 3'd0;
      7'b0100011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 = 3'd2;
      default: IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2021 =
		   CASE_near_memimem_instr_BITS_14_TO_12_0b0_CAS_ETC__q40;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2216 or
	  rs1_val_bypassed_tag__h6631 or
	  rs1_val_bypassed_capability__h6632 or
	  perms__h60717 or
	  NOT_0_CONCAT_IF_IF_IF_near_mem_imem_instr__20__ETC___d2202 or
	  rs2_val_bypassed_capability__h31161 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223 =
	      rs1_val_bypassed_tag__h6631 &&
	      !rs1_val_bypassed_capability__h6632[104];
      7'b0001111, 7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223 =
	      rs1_val_bypassed_tag__h6631;
      7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223 =
	      perms__h60717 != 15'd0 &&
	      NOT_0_CONCAT_IF_IF_IF_near_mem_imem_instr__20__ETC___d2202;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223 =
	      rs2_val_bypassed_capability__h31161[104] &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223 =
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223 =
		   near_mem$imem_instr[31:25] != 7'b0010010 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2216;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223 or
	  rs1_val_bypassed_tag__h6631 or alu_outputs___1_val1_tag__h64058)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001011, 7'b0001100:
	  CASE_near_memimem_instr_BITS_31_TO_25_0b1011__ETC__q41 =
	      rs1_val_bypassed_tag__h6631;
      7'b1111111:
	  CASE_near_memimem_instr_BITS_31_TO_25_0b1011__ETC__q41 =
	      alu_outputs___1_val1_tag__h64058;
      default: CASE_near_memimem_instr_BITS_31_TO_25_0b1011__ETC__q41 =
		   near_mem$imem_instr[31:25] == 7'b0001101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2223;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_31_TO_25_0b1011__ETC__q41 or
	  rs1_val_bypassed_tag__h6631 or rs1_val_bypassed_capability__h6632)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001: alu_outputs___1_val1_tag__h64160 = rs1_val_bypassed_tag__h6631;
      3'b010:
	  alu_outputs___1_val1_tag__h64160 =
	      rs1_val_bypassed_tag__h6631 &&
	      !rs1_val_bypassed_capability__h6632[104];
      default: alu_outputs___1_val1_tag__h64160 =
		   CASE_near_memimem_instr_BITS_31_TO_25_0b1011__ETC__q41;
    endcase
  end
  always@(near_mem$imem_instr or
	  new_addr__h64139 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2396 or
	  _theResult___snd_fst_capability__h64082 or
	  b_capability__h6630 or
	  rs1_val_bypassed_capability__h6632 or
	  b_capability__h31159 or
	  global__h64066 or
	  newcap__h31783 or
	  new_curs__h31817 or
	  top__h31984 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  new_addr__h64101 or
	  rs2_val_bypassed_capability__h31161 or
	  b__h31282 or
	  ct_T__h56817 or
	  out_val_capability__h56956 or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2383 or
	  alu_outputs___1_val1_capability__h64059)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2396;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      _theResult___snd_fst_capability__h64082;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      { b_capability__h6630[127:105],
		1'b1,
		rs1_val_bypassed_capability__h6632[103:84],
		b_capability__h31159[19:0],
		rs1_val_bypassed_capability__h6632[63:0] };
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      { b_capability__h6630[127:114],
		global__h64066,
		b_capability__h6630[112:105],
		1'b0,
		b_capability__h6630[103:0] };
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      newcap__h31783;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      { rs1_val_bypassed_capability__h6632[127:64],
		new_curs__h31817 };
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      { rs1_val_bypassed_capability__h6632[127:64], top__h31984 };
      7'b0010010:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463) ?
		128'd0 :
		{ 64'd0, new_addr__h64101 };
      7'b0010011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      (rs2_val_bypassed_capability__h31161[63:0] == 64'b0) ?
		128'h00007E00000FFFFF0000000000000000 :
		{ rs1_val_bypassed_capability__h6632[127:64],
		  rs2_val_bypassed_capability__h31161[63:0] };
      7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      { rs2_val_bypassed_capability__h31161[127:113],
		2'b0,
		rs2_val_bypassed_capability__h31161[110:105],
		1'b0,
		b__h31282,
		ct_T__h56817,
		rs2_val_bypassed_capability__h31161[63:0] };
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      rs2_val_bypassed_capability__h31161[104] ?
		out_val_capability__h56956 :
		128'h0000000000000000FFFFFFFFFFFFFFFF;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2383;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
	      alu_outputs___1_val1_capability__h64059;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 =
		   { 64'd0, new_addr__h64139 };
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426 or
	  rs1_val_bypassed_capability__h6632 or
	  new_offset__h64002 or _theResult___snd_fst_capability__h64014)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  alu_outputs___1_val1_capability__h64161 =
	      { rs1_val_bypassed_capability__h6632[127:64],
		new_offset__h64002 };
      3'b010:
	  alu_outputs___1_val1_capability__h64161 =
	      _theResult___snd_fst_capability__h64014;
      default: alu_outputs___1_val1_capability__h64161 =
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2426;
    endcase
  end
  always@(near_mem$imem_instr or
	  rs1_val_bypassed_capability__h6632 or
	  rs2_val_bypassed_capability__h31161 or
	  alu_outputs___1_val2_capability__h68834 or
	  alu_outputs___1_val2_capability__h68850)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0100011:
	  alu_outputs_val2_capability__h68921 =
	      rs2_val_bypassed_capability__h31161;
      7'b1100011:
	  alu_outputs_val2_capability__h68921 =
	      alu_outputs___1_val2_capability__h68834;
      7'b1110011:
	  alu_outputs_val2_capability__h68921 =
	      alu_outputs___1_val2_capability__h68850;
      default: alu_outputs_val2_capability__h68921 =
		   rs1_val_bypassed_capability__h6632;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2660 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2677)
  begin
    case (near_mem$imem_instr[24:20])
      5'h0:
	  check__h57961 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2660;
      5'h01:
	  check__h57961 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2677;
      5'h1F: check__h57961 = 5'd25;
      default: check__h57961 = 5'd2;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810 or
	  check__h30541)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01111:
	  alu_outputs___1_exc_code__h30870 = 5'd2;
      5'b01100:
	  alu_outputs___1_exc_code__h30870 =
	      _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d1810 ?
		5'd0 :
		check__h30541;
      default: alu_outputs___1_exc_code__h30870 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2660 or
	  rs2_val_bypassed_capability__h31161 or check__h57961)
  begin
    case (near_mem$imem_instr[24:20])
      5'h0:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2682 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2660;
      5'h01:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2682 =
	      (rs2_val_bypassed_capability__h31161[1:0] == 2'b0) ?
		check__h57961 :
		5'd0;
      5'h1F:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2682 = 5'd25;
      default: IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2682 =
		   5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1453 or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1524 or
	  check__h59257 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2638 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2630 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702 or
	  check__h30880 or
	  IF_NOT_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2617 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2619 or
	  rs1_val_bypassed_capability__h6632 or
	  rs1_val_bypassed_tag__h6631 or
	  rs2_val_bypassed_capability__h31161 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2634 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2636 or
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2682 or
	  alu_outputs___1_exc_code__h30870)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      (IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1453 ||
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1524) ?
		check__h59257 :
		5'd2;
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2638;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2630;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702 ?
		5'd2 :
		check__h30880;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      IF_NOT_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2617;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2619;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      (rs1_val_bypassed_capability__h6632[104] &&
	       rs1_val_bypassed_tag__h6631) ?
		5'd21 :
		5'd2;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      (rs1_val_bypassed_capability__h6632[104] &&
	       rs1_val_bypassed_tag__h6631 &&
	       rs2_val_bypassed_capability__h31161[63:0] != 64'b0) ?
		5'd21 :
		5'd2;
      7'b0010010, 7'b0010011, 7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 = 5'd2;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2634;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2636;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2682;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
	      alu_outputs___1_exc_code__h30870;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 =
		   5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2743 or
	  decoded_instr_rs2__h5316 or
	  rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1444)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2746 =
	      decoded_instr_rs2__h5316 != 5'b0 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d1444;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2746 =
	      near_mem$imem_instr[24:20] != 5'h01 &&
	      near_mem$imem_instr[24:20] != 5'h1F &&
	      near_mem$imem_instr[24:20] != 5'h0;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2746 =
		   near_mem$imem_instr[31:25] != 7'b0 ||
		   IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2743;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2746 or
	  rs1_val_bypassed_tag__h6631 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2731 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1726)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2749 =
	      rs1_val_bypassed_tag__h6631 &&
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2731;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2749 =
	      rs1_val_bypassed_tag__h6631 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1726;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2749 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2746;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2749 or
	  rs1_val_bypassed_tag__h6631 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d2728 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702 or
	  rs2_val_bypassed_tag__h31160 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1709 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 =
	      rs1_val_bypassed_tag__h6631 &&
	      !rs1_val_bypassed_capability__h6632[104] &&
	      IF_IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_ETC___d2728;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1702;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 =
	      rs1_val_bypassed_tag__h6631 && rs2_val_bypassed_tag__h31160 &&
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1705;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 =
	      rs1_val_bypassed_tag__h6631 &&
	      !rs1_val_bypassed_capability__h6632[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 =
	      !rs1_val_bypassed_capability__h6632[104] ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 =
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1709;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 =
	      decoded_instr_rs2__h5316 != 5'b01100;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2749;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 or
	  rs1_val_bypassed_capability__h6632 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1684)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2760 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d463 ||
	      !rs1_val_bypassed_capability__h6632[104];
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2760 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1684;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2760 =
		   near_mem$imem_instr[14:12] != 3'b0 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2757;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2870 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2855 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2863)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2873 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2855;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2873 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2863;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2873 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2870;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2873 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2854 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2844 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2845 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 or
	  rs1_val_bypassed_capability__h6632 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2829 or
	  rs2_val_bypassed_capability__h31161 or decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2854;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2844;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2845;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2835 &&
	      !rs1_val_bypassed_capability__h6632[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 =
	      !rs1_val_bypassed_capability__h6632[104] ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2829;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 =
	      !rs1_val_bypassed_capability__h6632[104] ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2829 ||
	      rs2_val_bypassed_capability__h31161[63:0] == 64'b0;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 =
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      decoded_instr_rs2__h5316 == 5'b00010 ||
	      decoded_instr_rs2__h5316 == 5'b00011 ||
	      decoded_instr_rs2__h5316 == 5'b00100 ||
	      decoded_instr_rs2__h5316 == 5'b00101 ||
	      decoded_instr_rs2__h5316 == 5'b00110 ||
	      decoded_instr_rs2__h5316 == 5'b01111 ||
	      decoded_instr_rs2__h5316 == 5'b01011 ||
	      decoded_instr_rs2__h5316 == 5'b01010 ||
	      decoded_instr_rs2__h5316 == 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2873;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2829 or
	  rs1_val_bypassed_capability__h6632 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2837)
  begin
    case (near_mem$imem_instr[14:12])
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2884 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2829 ||
	      !rs1_val_bypassed_capability__h6632[104];
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2884 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2837;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2884 =
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2881;
    endcase
  end
  always@(near_mem$imem_instr or
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1676 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2884 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1655 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2891 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1655;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2891 =
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101) &&
	      !near_mem$imem_instr[25];
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2891 =
	      funct10__h6030 == 10'b0 || funct10__h6030 == 10'b0100000000 ||
	      funct10__h6030 == 10'b0000000001 ||
	      funct10__h6030 == 10'b0000000101 ||
	      funct10__h6030 == 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2891 =
		   near_mem$imem_instr[6:0] == 7'b0110111 ||
		   near_mem$imem_instr[6:0] == 7'b0010111 ||
		   near_mem$imem_instr[6:0] == 7'b0000011 ||
		   near_mem$imem_instr[6:0] == 7'b0100011 ||
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] != 3'b0 &&
		      near_mem$imem_instr[14:12] != 3'b100 &&
		      NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1676 :
		      near_mem$imem_instr[6:0] == 7'b1011011 &&
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2884);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d2898 or
	  b_capability__h6630 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1803 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h64002 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2906 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1803 &&
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2906 =
	      !new_offset__h64002[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2906 =
	      !near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d1584[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2906 =
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   near_mem$imem_instr[31:25] == 7'b1111111 &&
		   decoded_instr_rs2__h5316 == 5'b01100 &&
		   _0b0_CONCAT_IF_near_mem_imem_instr__20_BITS_19__ETC___d2898 &&
		   b_capability__h6630[1:0] == 2'b0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702 or
	  _theResult___exc_code__h62050 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2598)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  alu_outputs___1_exc_code__h60740 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2702;
      3'b001:
	  alu_outputs___1_exc_code__h60740 = _theResult___exc_code__h62050;
      3'b010:
	  alu_outputs___1_exc_code__h60740 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2598;
      default: alu_outputs___1_exc_code__h60740 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_exc_code__h60740 or
	  alu_outputs___1_exc_code__h5858 or alu_outputs___1_exc_code__h6371)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011,
      7'b0001111,
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0100011,
      7'b0110011,
      7'b0110111,
      7'b0111011:
	  alu_outputs_exc_code__h60764 = 5'd2;
      7'b1011011:
	  alu_outputs_exc_code__h60764 = alu_outputs___1_exc_code__h60740;
      7'b1100011:
	  alu_outputs_exc_code__h60764 = alu_outputs___1_exc_code__h5858;
      7'b1100111, 7'b1101111: alu_outputs_exc_code__h60764 = 5'd0;
      7'b1110011:
	  alu_outputs_exc_code__h60764 = alu_outputs___1_exc_code__h6371;
      default: alu_outputs_exc_code__h60764 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_val1_capability__h64161 or
	  alu_outputs___1_val1_capability__h63976 or
	  alu_outputs___1_val1_capability__h63990 or
	  alu_outputs___1_val1_capability__h63980 or
	  alu_outputs___1_val1_capability__h63987 or
	  alu_outputs___1_val1_capability__h63984 or
	  alu_outputs___1_val1_capability__h64000)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437 =
	      alu_outputs___1_val1_capability__h63976;
      7'b0010111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437 =
	      alu_outputs___1_val1_capability__h63990;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437 =
	      alu_outputs___1_val1_capability__h63980;
      7'b0110111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437 =
	      alu_outputs___1_val1_capability__h63987;
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437 =
	      alu_outputs___1_val1_capability__h63984;
      7'b1110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437 =
	      alu_outputs___1_val1_capability__h64000;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2437 =
		   alu_outputs___1_val1_capability__h64161;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2438 or
	  alu_outputs___1_val1_capability__h63964)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100111, 7'b1101111:
	  CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q44 =
	      alu_outputs___1_val1_capability__h63964;
      default: CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q44 =
		   IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2438;
    endcase
  end
  always@(stage2_rg_stage2 or
	  output_stage2___1_bypass_rd_val_tag__h4612 or
	  output_stage2___1_bypass_rd_val_capability__h4613)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q45 =
	      stage2_rg_stage2[257:129];
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q45 =
		   { output_stage2___1_bypass_rd_val_tag__h4612,
		     output_stage2___1_bypass_rd_val_capability__h4613 };
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_logdelay <= `BSV_ASSIGNMENT_DELAY 64'd0;
	cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_halt <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_state <= `BSV_ASSIGNMENT_DELAY 3'd0;
	stage1_rg_ddc <= `BSV_ASSIGNMENT_DELAY
	    129'h1FFFE7E00000111110000000000000000;
	stage1_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage1_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
	stage2_rg_f5 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	stage2_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage2_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
	stage3_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage3_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
      end
    else
      begin
        if (cfg_logdelay$EN)
	  cfg_logdelay <= `BSV_ASSIGNMENT_DELAY cfg_logdelay$D_IN;
	if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (rg_halt$EN) rg_halt <= `BSV_ASSIGNMENT_DELAY rg_halt$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
	if (stage1_rg_ddc$EN)
	  stage1_rg_ddc <= `BSV_ASSIGNMENT_DELAY stage1_rg_ddc$D_IN;
	if (stage1_rg_full$EN)
	  stage1_rg_full <= `BSV_ASSIGNMENT_DELAY stage1_rg_full$D_IN;
	if (stage1_rg_run_state$EN)
	  stage1_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage1_rg_run_state$D_IN;
	if (stage2_rg_f5$EN)
	  stage2_rg_f5 <= `BSV_ASSIGNMENT_DELAY stage2_rg_f5$D_IN;
	if (stage2_rg_full$EN)
	  stage2_rg_full <= `BSV_ASSIGNMENT_DELAY stage2_rg_full$D_IN;
	if (stage2_rg_run_state$EN)
	  stage2_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage2_rg_run_state$D_IN;
	if (stage3_rg_full$EN)
	  stage3_rg_full <= `BSV_ASSIGNMENT_DELAY stage3_rg_full$D_IN;
	if (stage3_rg_run_state$EN)
	  stage3_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage3_rg_run_state$D_IN;
      end
    if (rg_cur_priv$EN) rg_cur_priv <= `BSV_ASSIGNMENT_DELAY rg_cur_priv$D_IN;
    if (rg_inum$EN) rg_inum <= `BSV_ASSIGNMENT_DELAY rg_inum$D_IN;
    if (rg_start_CPI_cycles$EN)
      rg_start_CPI_cycles <= `BSV_ASSIGNMENT_DELAY rg_start_CPI_cycles$D_IN;
    if (rg_start_CPI_instrs$EN)
      rg_start_CPI_instrs <= `BSV_ASSIGNMENT_DELAY rg_start_CPI_instrs$D_IN;
    if (stage2_rg_stage2$EN)
      stage2_rg_stage2 <= `BSV_ASSIGNMENT_DELAY stage2_rg_stage2$D_IN;
    if (stage3_rg_stage3$EN)
      stage3_rg_stage3 <= `BSV_ASSIGNMENT_DELAY stage3_rg_stage3$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_logdelay = 64'hAAAAAAAAAAAAAAAA;
    cfg_verbosity = 4'hA;
    rg_cur_priv = 2'h2;
    rg_halt = 1'h0;
    rg_inum = 64'hAAAAAAAAAAAAAAAA;
    rg_start_CPI_cycles = 64'hAAAAAAAAAAAAAAAA;
    rg_start_CPI_instrs = 64'hAAAAAAAAAAAAAAAA;
    rg_state = 3'h2;
    stage1_rg_ddc = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage1_rg_full = 1'h0;
    stage1_rg_run_state = 1'h0;
    stage2_rg_f5 = 5'h0A;
    stage2_rg_full = 1'h0;
    stage2_rg_run_state = 1'h0;
    stage2_rg_stage2 =
	647'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage3_rg_full = 1'h0;
    stage3_rg_run_state = 1'h0;
    stage3_rg_stage3 =
	375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("================================================================");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("%0d: Pipeline State:  inum:%0d  cur_priv:%0d  mstatus:%0x",
		 csr_regfile$read_csr_mcycle,
		 rg_inum,
		 rg_cur_priv,
		 csr_regfile$read_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write("MStatus{",
	       "sd:%0d",
	       csr_regfile$read_mstatus[16:15] == 2'h3 ||
	       csr_regfile$read_mstatus[14:13] == 2'h3);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" sxl:%0d", ms_sxl__h3157);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" uxl:%0d", ms_uxl__h3158);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tsr:%0d", csr_regfile$read_mstatus[22]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tw:%0d", csr_regfile$read_mstatus[21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tvm:%0d", csr_regfile$read_mstatus[20]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mxr:%0d", csr_regfile$read_mstatus[19]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" sum:%0d", csr_regfile$read_mstatus[18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mprv:%0d", csr_regfile$read_mstatus[17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" xs:%0d", csr_regfile$read_mstatus[16:15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" fs:%0d", csr_regfile$read_mstatus[14:13]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mpp:%0d", csr_regfile$read_mstatus[12:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" spp:%0d", ms_spp__h3168);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" pies:%0d_%0d%0d",
	       csr_regfile$read_mstatus[7],
	       csr_regfile$read_misa[18] && csr_regfile$read_mstatus[5],
	       csr_regfile$read_misa[13] && csr_regfile$read_mstatus[4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" ies:%0d_%0d%0d",
	       csr_regfile$read_mstatus[3],
	       csr_regfile$read_misa[18] && csr_regfile$read_mstatus[1],
	       csr_regfile$read_misa[13] && csr_regfile$read_mstatus[0]);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    Bypass S1 <= S3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Bypass {");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  (stage3_rg_stage3[285:279] != 7'b1011011 ||
	   stage3_rg_stage3[293:291] != 3'b0 ||
	   stage3_rg_stage3[303:299] != 5'h0D &&
	   stage3_rg_stage3[303:299] != 5'h10 ||
	   stage3_rg_stage3[310:304] != 7'b1111111) &&
	  (!stage3_rg_full || !stage3_rg_stage3[276]))
	$write("Rd -");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  (stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ||
	   stage3_rg_full && stage3_rg_stage3[276]))
	$write("Rd %0d ",
	       stage3_rg_stage3[275:271],
	       "rd_val:%h",
	       stage3_rg_stage3[257:129]);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    S3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Output_Stage3");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage3_rg_full) $write(" PIPE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage3_rg_full) $write(" EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    Bypass S1 <= S2: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Bypass {");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd0)
	$write("Rd -");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd0)
	$write("Rd %0d ", stage2_rg_stage2[393:389]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd1)
	$write("-");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd1)
	$write("rd_val:%h",
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q45);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("    S2: pc 0x%08h instr 0x%08h priv %0d",
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("Output_Stage2", " EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("Output_Stage2", " BUSY: pc:%0h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Output_Stage2", " NONPIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("Output_Stage2", " PIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("data_to_Stage3 {pc:%h  instr:%h  priv:%0d\n",
	       stage2_rg_stage2[644:581],
	       stage2_rg_stage2[580:549],
	       stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("        rd_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write(" rd:%0d  rd_val:%h\n",
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("        csr_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3 &&
	  !stage2_rg_stage2[388])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3 &&
	  stage2_rg_stage2[388])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write(" csr:%h  csr_val:%h",
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2[128:0],
	       "}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", near_mem$dmem_exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[321:258], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", near_mem$dmem_exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[321:258], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("    S1: pc 0x%08h instr 0x%08h priv %0d",
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("Output_Stage1", " BUSY pc:%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("Output_Stage1", " NONPIPE: pc:%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("Output_Stage1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full)
	$write("Output_Stage1", " EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write(" PIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1924)
	$write("CONTROL_STRAIGHT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1928)
	$write("CONTROL_BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1932)
	$write("CONTROL_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1936)
	$write("CONTROL_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1940)
	$write("CONTROL_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1944)
	$write("CONTROL_MRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1948)
	$write("CONTROL_SRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1952)
	$write("CONTROL_URET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1956)
	$write("CONTROL_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1960)
	$write("CONTROL_TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d1980)
	$write("CONTROL_CLEAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("data_to_Stage 2 {pc:%h  instr:%h  priv:%0d\n",
	       near_mem$imem_pc,
	       near_mem$imem_instr,
	       rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("            op_stage2:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2025)
	$write("OP_Stage2_ALU");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2029)
	$write("OP_Stage2_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2033)
	$write("OP_Stage2_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d2037)
	$write("OP_Stage2_CLR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d2045)
	$write("OP_Stage2_CRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("  rd:%0d  csr_valid:", fv_out_data_to_stage2_rd__h5766);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_625_AND_NOT_near_mem_ETC___d2071)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_625_AND_IF_near_mem__ETC___d2083)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("            addr:%h  val1:%h  val2:%h}",
	       { alu_outputs_addr_tag__h62980,
		 alu_outputs_addr_capability__h62981 },
	       near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2440,
	       { alu_outputs_val2_tag__h68920,
		 alu_outputs_val2_capability__h68921 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2544)
	$write("CONTROL_STRAIGHT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2547)
	$write("CONTROL_BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2550)
	$write("CONTROL_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2553)
	$write("CONTROL_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2556)
	$write("CONTROL_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2559)
	$write("CONTROL_MRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2562)
	$write("CONTROL_SRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2565)
	$write("CONTROL_URET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2568)
	$write("CONTROL_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2571)
	$write("CONTROL_TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2574)
	$write("CONTROL_CLEAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("'h%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("'h%h", fv_out_trap_info_exc_code__h62579);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1623)
	$write("'h%h", value__h62828, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1821)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274)
	$write(" next_pc 0x%08h", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", pc_reset_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete && cur_verbosity__h1374 != 4'd0)
	$display("    restart with PC = 0x%0h", pc_reset_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[276] &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S3.fa_deq: write Rd 0x%0h, rd_val 0x%0h",
		 stage3_rg_stage3[275:271],
		 stage3_rg_stage3[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("    S3.enq: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("data_to_Stage3 {pc:%h  instr:%h  priv:%0d\n",
	       stage2_rg_stage2[644:581],
	       stage2_rg_stage2[580:549],
	       stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("        rd_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2949)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2951)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write(" rd:%0d  rd_val:%h\n",
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("        csr_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	  !stage2_rg_stage2[388])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	  stage2_rg_stage2[388])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write(" csr:%h  csr_val:%h",
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2[128:0],
	       "}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974 &&
	  near_mem$imem_instr[6:0] == 7'b1110011 &&
	  near_mem$imem_instr[14:12] != 3'b0 &&
	  near_mem$imem_instr[14:12] != 3'b100 &&
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d2079 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S1: write CSR 0x%0h, val 0x%0h",
		 alu_outputs_addr_capability__h62981[11:0],
		 alu_outputs_val2_capability__h68921[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d2974 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S2.enq (Data_Stage1_to_Stage2)");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_914_915_AND_NOT_csr_regfile_interr_ETC___d3037)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_restart_after_csrrx &&
	  cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_restart_after_csrrx &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: rl_stage1_restart_after_csrrx: inum:%0d  pc:%0x  cur_priv:%0d",
		 csr_regfile$read_csr_mcycle,
		 rg_inum,
		 fv_out_next_pc__h5702,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage2_nonpipe", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 != 4'd0)
	$display("    mcause:0x%0h  epc 0x%0h  tval:0x%0h  new pc 0x%0h, new mstatus 0x%0h",
		 csr_regfile$csr_trap_actions[65:2],
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[321:258],
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_ret_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 != 4'd0)
	$display("    xRET: next_pc:0x%0h  new mstatus:0x%0h  new priv:%0d",
		 csr_regfile$csr_ret_actions[129:66],
		 csr_regfile$csr_ret_actions[63:0],
		 csr_regfile$csr_ret_actions[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_FENCE_I &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_FENCE_I", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_FENCE &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_FENCE", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_SFENCE_VMA &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_SFENCE_VMA",
		 csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_WFI && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_WFI &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_stage1_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_WFI_resume && cur_verbosity__h1374 != 4'd0)
	$display("    WFI resume: inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_WFI_resume && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3101)
	$display("%0d: CPU.rl_stage1_trap: Tight infinite trap loop: pc 0x%0x instr 0x%08x",
		 csr_regfile$read_csr_mcycle,
		 csr_regfile$csr_trap_actions[193:130],
		 near_mem$imem_instr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3101)
	$display("CPI: %0d.%0d = (%0d/%0d) since last 'continue'",
		 cpi__h75558,
		 cpifrac__h75559,
		 delta_CPI_cycles__h75554,
		 _theResult____h75556);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d3101)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_stage1_trap: priv:%0d  mcause:0x%0h  epc:0x%0h",
		 csr_regfile$read_csr_mcycle,
		 rg_cur_priv,
		 csr_regfile$csr_trap_actions[65:2],
		 near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("    tval:0x%0h  new pc:0x%0h  new mstatus:0x%0h",
		 value__h62828,
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_stage1_interrupt: epc 0x%0h  next PC 0x%0h  new_priv %0d  new mstatus 0x%0h",
		 csr_regfile$read_csr_mcycle,
		 near_mem$imem_pc,
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[1:0],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start)
	begin
	  TASK_testplusargs___d2798 = $test$plusargs("v1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start)
	begin
	  TASK_testplusargs___d2797 = $test$plusargs("v2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_reset_start", csr_regfile$read_csr_mcycle);
  end
  // synopsys translate_on
endmodule  // mkCPU

