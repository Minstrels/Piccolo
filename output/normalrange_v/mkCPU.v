//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Sat Apr 20 20:49:01 BST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_hart0_server_reset_request_put  O     1 reg
// RDY_hart0_server_reset_response_get  O     1 reg
// imem_master_awvalid            O     1
// imem_master_awaddr             O    64 reg
// imem_master_awprot             O     3 reg
// imem_master_wvalid             O     1
// imem_master_wdata              O    64 reg
// imem_master_wstrb              O     8 reg
// imem_master_bready             O     1
// imem_master_arvalid            O     1
// imem_master_araddr             O    64 reg
// imem_master_arprot             O     3 reg
// imem_master_rready             O     1
// dmem_master_awvalid            O     1
// dmem_master_awaddr             O    64 reg
// dmem_master_awprot             O     3 reg
// dmem_master_wvalid             O     1
// dmem_master_wdata              O    64 reg
// dmem_master_wstrb              O     8 reg
// dmem_master_bready             O     1
// dmem_master_arvalid            O     1
// dmem_master_araddr             O    64 reg
// dmem_master_arprot             O     3 reg
// dmem_master_rready             O     1
// near_mem_slave_awready         O     1 const
// near_mem_slave_wready          O     1 const
// near_mem_slave_bvalid          O     1 const
// near_mem_slave_bresp           O     2 const
// near_mem_slave_arready         O     1 const
// near_mem_slave_rvalid          O     1 const
// near_mem_slave_rresp           O     2 const
// near_mem_slave_rdata           O    64 const
// RDY_external_interrupt_req     O     1 reg
// RDY_timer_interrupt_req        O     1 reg
// RDY_software_interrupt_req     O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// imem_master_awready            I     1
// imem_master_wready             I     1
// imem_master_bvalid             I     1
// imem_master_bresp              I     2 reg
// imem_master_arready            I     1
// imem_master_rvalid             I     1
// imem_master_rresp              I     2 reg
// imem_master_rdata              I    64 reg
// dmem_master_awready            I     1
// dmem_master_wready             I     1
// dmem_master_bvalid             I     1
// dmem_master_bresp              I     2 reg
// dmem_master_arready            I     1
// dmem_master_rvalid             I     1
// dmem_master_rresp              I     2 reg
// dmem_master_rdata              I    64 reg
// near_mem_slave_awvalid         I     1 unused
// near_mem_slave_awaddr          I    64 unused
// near_mem_slave_awprot          I     3 unused
// near_mem_slave_wvalid          I     1 unused
// near_mem_slave_wdata           I    64 unused
// near_mem_slave_wstrb           I     8 unused
// near_mem_slave_bready          I     1 unused
// near_mem_slave_arvalid         I     1 unused
// near_mem_slave_araddr          I    64 unused
// near_mem_slave_arprot          I     3 unused
// near_mem_slave_rready          I     1 unused
// external_interrupt_req_set_not_clear  I     1 reg
// timer_interrupt_req_set_not_clear  I     1 reg
// software_interrupt_req_set_not_clear  I     1 reg
// EN_hart0_server_reset_request_put  I     1
// EN_hart0_server_reset_response_get  I     1
// EN_external_interrupt_req      I     1
// EN_timer_interrupt_req         I     1
// EN_software_interrupt_req      I     1
//
// Combinational paths from inputs to outputs:
//   (imem_master_awready, imem_master_wready) -> imem_master_bready
//   (imem_master_awready,
//    imem_master_wready,
//    imem_master_arready,
//    dmem_master_awready,
//    dmem_master_wready) -> imem_master_rready
//   (imem_master_awready,
//    imem_master_wready,
//    dmem_master_awready,
//    dmem_master_wready,
//    dmem_master_arready) -> dmem_master_rready
//   (dmem_master_awready, dmem_master_wready) -> dmem_master_bready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCPU(CLK,
	     RST_N,

	     EN_hart0_server_reset_request_put,
	     RDY_hart0_server_reset_request_put,

	     EN_hart0_server_reset_response_get,
	     RDY_hart0_server_reset_response_get,

	     imem_master_awvalid,

	     imem_master_awaddr,

	     imem_master_awprot,

	     imem_master_awready,

	     imem_master_wvalid,

	     imem_master_wdata,

	     imem_master_wstrb,

	     imem_master_wready,

	     imem_master_bvalid,
	     imem_master_bresp,

	     imem_master_bready,

	     imem_master_arvalid,

	     imem_master_araddr,

	     imem_master_arprot,

	     imem_master_arready,

	     imem_master_rvalid,
	     imem_master_rresp,
	     imem_master_rdata,

	     imem_master_rready,

	     dmem_master_awvalid,

	     dmem_master_awaddr,

	     dmem_master_awprot,

	     dmem_master_awready,

	     dmem_master_wvalid,

	     dmem_master_wdata,

	     dmem_master_wstrb,

	     dmem_master_wready,

	     dmem_master_bvalid,
	     dmem_master_bresp,

	     dmem_master_bready,

	     dmem_master_arvalid,

	     dmem_master_araddr,

	     dmem_master_arprot,

	     dmem_master_arready,

	     dmem_master_rvalid,
	     dmem_master_rresp,
	     dmem_master_rdata,

	     dmem_master_rready,

	     near_mem_slave_awvalid,
	     near_mem_slave_awaddr,
	     near_mem_slave_awprot,

	     near_mem_slave_awready,

	     near_mem_slave_wvalid,
	     near_mem_slave_wdata,
	     near_mem_slave_wstrb,

	     near_mem_slave_wready,

	     near_mem_slave_bvalid,

	     near_mem_slave_bresp,

	     near_mem_slave_bready,

	     near_mem_slave_arvalid,
	     near_mem_slave_araddr,
	     near_mem_slave_arprot,

	     near_mem_slave_arready,

	     near_mem_slave_rvalid,

	     near_mem_slave_rresp,

	     near_mem_slave_rdata,

	     near_mem_slave_rready,

	     external_interrupt_req_set_not_clear,
	     EN_external_interrupt_req,
	     RDY_external_interrupt_req,

	     timer_interrupt_req_set_not_clear,
	     EN_timer_interrupt_req,
	     RDY_timer_interrupt_req,

	     software_interrupt_req_set_not_clear,
	     EN_software_interrupt_req,
	     RDY_software_interrupt_req);
  parameter [63 : 0] pc_reset_value = 64'b0;
  input  CLK;
  input  RST_N;

  // action method hart0_server_reset_request_put
  input  EN_hart0_server_reset_request_put;
  output RDY_hart0_server_reset_request_put;

  // action method hart0_server_reset_response_get
  input  EN_hart0_server_reset_response_get;
  output RDY_hart0_server_reset_response_get;

  // value method imem_master_m_awvalid
  output imem_master_awvalid;

  // value method imem_master_m_awaddr
  output [63 : 0] imem_master_awaddr;

  // value method imem_master_m_awprot
  output [2 : 0] imem_master_awprot;

  // value method imem_master_m_awuser

  // action method imem_master_m_awready
  input  imem_master_awready;

  // value method imem_master_m_wvalid
  output imem_master_wvalid;

  // value method imem_master_m_wdata
  output [63 : 0] imem_master_wdata;

  // value method imem_master_m_wstrb
  output [7 : 0] imem_master_wstrb;

  // action method imem_master_m_wready
  input  imem_master_wready;

  // action method imem_master_m_bvalid
  input  imem_master_bvalid;
  input  [1 : 0] imem_master_bresp;

  // value method imem_master_m_bready
  output imem_master_bready;

  // value method imem_master_m_arvalid
  output imem_master_arvalid;

  // value method imem_master_m_araddr
  output [63 : 0] imem_master_araddr;

  // value method imem_master_m_arprot
  output [2 : 0] imem_master_arprot;

  // value method imem_master_m_aruser

  // action method imem_master_m_arready
  input  imem_master_arready;

  // action method imem_master_m_rvalid
  input  imem_master_rvalid;
  input  [1 : 0] imem_master_rresp;
  input  [63 : 0] imem_master_rdata;

  // value method imem_master_m_rready
  output imem_master_rready;

  // value method dmem_master_m_awvalid
  output dmem_master_awvalid;

  // value method dmem_master_m_awaddr
  output [63 : 0] dmem_master_awaddr;

  // value method dmem_master_m_awprot
  output [2 : 0] dmem_master_awprot;

  // value method dmem_master_m_awuser

  // action method dmem_master_m_awready
  input  dmem_master_awready;

  // value method dmem_master_m_wvalid
  output dmem_master_wvalid;

  // value method dmem_master_m_wdata
  output [63 : 0] dmem_master_wdata;

  // value method dmem_master_m_wstrb
  output [7 : 0] dmem_master_wstrb;

  // action method dmem_master_m_wready
  input  dmem_master_wready;

  // action method dmem_master_m_bvalid
  input  dmem_master_bvalid;
  input  [1 : 0] dmem_master_bresp;

  // value method dmem_master_m_bready
  output dmem_master_bready;

  // value method dmem_master_m_arvalid
  output dmem_master_arvalid;

  // value method dmem_master_m_araddr
  output [63 : 0] dmem_master_araddr;

  // value method dmem_master_m_arprot
  output [2 : 0] dmem_master_arprot;

  // value method dmem_master_m_aruser

  // action method dmem_master_m_arready
  input  dmem_master_arready;

  // action method dmem_master_m_rvalid
  input  dmem_master_rvalid;
  input  [1 : 0] dmem_master_rresp;
  input  [63 : 0] dmem_master_rdata;

  // value method dmem_master_m_rready
  output dmem_master_rready;

  // action method near_mem_slave_m_awvalid
  input  near_mem_slave_awvalid;
  input  [63 : 0] near_mem_slave_awaddr;
  input  [2 : 0] near_mem_slave_awprot;

  // value method near_mem_slave_m_awready
  output near_mem_slave_awready;

  // action method near_mem_slave_m_wvalid
  input  near_mem_slave_wvalid;
  input  [63 : 0] near_mem_slave_wdata;
  input  [7 : 0] near_mem_slave_wstrb;

  // value method near_mem_slave_m_wready
  output near_mem_slave_wready;

  // value method near_mem_slave_m_bvalid
  output near_mem_slave_bvalid;

  // value method near_mem_slave_m_bresp
  output [1 : 0] near_mem_slave_bresp;

  // value method near_mem_slave_m_buser

  // action method near_mem_slave_m_bready
  input  near_mem_slave_bready;

  // action method near_mem_slave_m_arvalid
  input  near_mem_slave_arvalid;
  input  [63 : 0] near_mem_slave_araddr;
  input  [2 : 0] near_mem_slave_arprot;

  // value method near_mem_slave_m_arready
  output near_mem_slave_arready;

  // value method near_mem_slave_m_rvalid
  output near_mem_slave_rvalid;

  // value method near_mem_slave_m_rresp
  output [1 : 0] near_mem_slave_rresp;

  // value method near_mem_slave_m_rdata
  output [63 : 0] near_mem_slave_rdata;

  // value method near_mem_slave_m_ruser

  // action method near_mem_slave_m_rready
  input  near_mem_slave_rready;

  // action method external_interrupt_req
  input  external_interrupt_req_set_not_clear;
  input  EN_external_interrupt_req;
  output RDY_external_interrupt_req;

  // action method timer_interrupt_req
  input  timer_interrupt_req_set_not_clear;
  input  EN_timer_interrupt_req;
  output RDY_timer_interrupt_req;

  // action method software_interrupt_req
  input  software_interrupt_req_set_not_clear;
  input  EN_software_interrupt_req;
  output RDY_software_interrupt_req;

  // signals for module outputs
  wire [63 : 0] dmem_master_araddr,
		dmem_master_awaddr,
		dmem_master_wdata,
		imem_master_araddr,
		imem_master_awaddr,
		imem_master_wdata,
		near_mem_slave_rdata;
  wire [7 : 0] dmem_master_wstrb, imem_master_wstrb;
  wire [2 : 0] dmem_master_arprot,
	       dmem_master_awprot,
	       imem_master_arprot,
	       imem_master_awprot;
  wire [1 : 0] near_mem_slave_bresp, near_mem_slave_rresp;
  wire RDY_external_interrupt_req,
       RDY_hart0_server_reset_request_put,
       RDY_hart0_server_reset_response_get,
       RDY_software_interrupt_req,
       RDY_timer_interrupt_req,
       dmem_master_arvalid,
       dmem_master_awvalid,
       dmem_master_bready,
       dmem_master_rready,
       dmem_master_wvalid,
       imem_master_arvalid,
       imem_master_awvalid,
       imem_master_bready,
       imem_master_rready,
       imem_master_wvalid,
       near_mem_slave_arready,
       near_mem_slave_awready,
       near_mem_slave_bvalid,
       near_mem_slave_rvalid,
       near_mem_slave_wready;

  // register cfg_logdelay
  reg [63 : 0] cfg_logdelay;
  wire [63 : 0] cfg_logdelay$D_IN;
  wire cfg_logdelay$EN;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register rg_cur_priv
  reg [1 : 0] rg_cur_priv;
  reg [1 : 0] rg_cur_priv$D_IN;
  wire rg_cur_priv$EN;

  // register rg_halt
  reg rg_halt;
  wire rg_halt$D_IN, rg_halt$EN;

  // register rg_inum
  reg [63 : 0] rg_inum;
  reg [63 : 0] rg_inum$D_IN;
  wire rg_inum$EN;

  // register rg_start_CPI_cycles
  reg [63 : 0] rg_start_CPI_cycles;
  wire [63 : 0] rg_start_CPI_cycles$D_IN;
  wire rg_start_CPI_cycles$EN;

  // register rg_start_CPI_instrs
  reg [63 : 0] rg_start_CPI_instrs;
  wire [63 : 0] rg_start_CPI_instrs$D_IN;
  wire rg_start_CPI_instrs$EN;

  // register rg_state
  reg [2 : 0] rg_state;
  reg [2 : 0] rg_state$D_IN;
  wire rg_state$EN;

  // register stage1_rg_ddc
  reg [128 : 0] stage1_rg_ddc;
  wire [128 : 0] stage1_rg_ddc$D_IN;
  wire stage1_rg_ddc$EN;

  // register stage1_rg_full
  reg stage1_rg_full;
  reg stage1_rg_full$D_IN;
  wire stage1_rg_full$EN;

  // register stage1_rg_run_state
  reg stage1_rg_run_state;
  wire stage1_rg_run_state$D_IN, stage1_rg_run_state$EN;

  // register stage2_rg_f5
  reg [4 : 0] stage2_rg_f5;
  wire [4 : 0] stage2_rg_f5$D_IN;
  wire stage2_rg_f5$EN;

  // register stage2_rg_full
  reg stage2_rg_full;
  wire stage2_rg_full$D_IN, stage2_rg_full$EN;

  // register stage2_rg_run_state
  reg stage2_rg_run_state;
  wire stage2_rg_run_state$D_IN, stage2_rg_run_state$EN;

  // register stage2_rg_stage2
  reg [646 : 0] stage2_rg_stage2;
  wire [646 : 0] stage2_rg_stage2$D_IN;
  wire stage2_rg_stage2$EN;

  // register stage3_rg_full
  reg stage3_rg_full;
  wire stage3_rg_full$D_IN, stage3_rg_full$EN;

  // register stage3_rg_run_state
  reg stage3_rg_run_state;
  wire stage3_rg_run_state$D_IN, stage3_rg_run_state$EN;

  // register stage3_rg_stage3
  reg [374 : 0] stage3_rg_stage3;
  wire [374 : 0] stage3_rg_stage3$D_IN;
  wire stage3_rg_stage3$EN;

  // ports of submodule csr_regfile
  reg [63 : 0] csr_regfile$csr_trap_actions_xtval;
  reg [4 : 0] csr_regfile$csr_trap_actions_exc_code;
  reg [1 : 0] csr_regfile$csr_ret_actions_from_priv;
  wire [193 : 0] csr_regfile$csr_trap_actions;
  wire [129 : 0] csr_regfile$csr_ret_actions;
  wire [128 : 0] csr_regfile$read_csr_cap, csr_regfile$write_csr_cap_value;
  wire [64 : 0] csr_regfile$read_csr;
  wire [63 : 0] csr_regfile$csr_trap_actions_pc,
		csr_regfile$read_csr_mcycle,
		csr_regfile$read_csr_minstret,
		csr_regfile$read_mstatus,
		csr_regfile$read_satp,
		csr_regfile$read_sstatus,
		csr_regfile$write_csr_word;
  wire [27 : 0] csr_regfile$read_misa;
  wire [11 : 0] csr_regfile$csr_counter_read_fault_csr_addr,
		csr_regfile$mav_read_csr_csr_addr,
		csr_regfile$read_csr_csr_addr,
		csr_regfile$read_csr_port2_csr_addr,
		csr_regfile$write_csr_csr_addr;
  wire [5 : 0] csr_regfile$interrupt_pending;
  wire [4 : 0] csr_regfile$read_csr_cap_csr_addr,
	       csr_regfile$write_csr_cap_cap_addr;
  wire [1 : 0] csr_regfile$csr_counter_read_fault_priv,
	       csr_regfile$csr_trap_actions_from_priv,
	       csr_regfile$interrupt_pending_cur_priv;
  wire csr_regfile$EN_csr_minstret_incr,
       csr_regfile$EN_csr_ret_actions,
       csr_regfile$EN_csr_trap_actions,
       csr_regfile$EN_external_interrupt_req,
       csr_regfile$EN_mav_read_csr,
       csr_regfile$EN_server_reset_request_put,
       csr_regfile$EN_server_reset_response_get,
       csr_regfile$EN_software_interrupt_req,
       csr_regfile$EN_timer_interrupt_req,
       csr_regfile$EN_write_csr,
       csr_regfile$EN_write_csr_cap,
       csr_regfile$RDY_external_interrupt_req,
       csr_regfile$RDY_server_reset_request_put,
       csr_regfile$RDY_server_reset_response_get,
       csr_regfile$RDY_software_interrupt_req,
       csr_regfile$RDY_timer_interrupt_req,
       csr_regfile$csr_counter_read_fault,
       csr_regfile$csr_trap_actions_interrupt,
       csr_regfile$external_interrupt_req_set_not_clear,
       csr_regfile$software_interrupt_req_set_not_clear,
       csr_regfile$timer_interrupt_req_set_not_clear,
       csr_regfile$wfi_resume;

  // ports of submodule f_reset_reqs
  wire f_reset_reqs$CLR,
       f_reset_reqs$DEQ,
       f_reset_reqs$EMPTY_N,
       f_reset_reqs$ENQ,
       f_reset_reqs$FULL_N;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule gpr_regfile
  wire [128 : 0] gpr_regfile$read_rs1,
		 gpr_regfile$read_rs2,
		 gpr_regfile$write_rd_rd_val;
  wire [63 : 0] gpr_regfile$write_rd_int_rd_val;
  wire [7 : 0] gpr_regfile$clear_quarter_mask;
  wire [4 : 0] gpr_regfile$read_rs1_port2_rs1,
	       gpr_regfile$read_rs1_rs1,
	       gpr_regfile$read_rs2_rs2,
	       gpr_regfile$write_rd_int_rd,
	       gpr_regfile$write_rd_rd;
  wire [1 : 0] gpr_regfile$clear_quarter_qid;
  wire gpr_regfile$EN_clear_quarter,
       gpr_regfile$EN_server_reset_request_put,
       gpr_regfile$EN_server_reset_response_get,
       gpr_regfile$EN_write_rd,
       gpr_regfile$EN_write_rd_int,
       gpr_regfile$RDY_server_reset_request_put,
       gpr_regfile$RDY_server_reset_response_get,
       gpr_regfile$is_busy;

  // ports of submodule near_mem
  reg [63 : 0] near_mem$imem_req_addr;
  reg [1 : 0] near_mem$imem_req_priv;
  wire [63 : 0] near_mem$dmem_master_araddr,
		near_mem$dmem_master_awaddr,
		near_mem$dmem_master_rdata,
		near_mem$dmem_master_wdata,
		near_mem$dmem_req_addr,
		near_mem$dmem_req_satp,
		near_mem$dmem_req_store_value,
		near_mem$dmem_word64,
		near_mem$imem_master_araddr,
		near_mem$imem_master_awaddr,
		near_mem$imem_master_rdata,
		near_mem$imem_master_wdata,
		near_mem$imem_pc,
		near_mem$imem_req_satp,
		near_mem$near_mem_slave_araddr,
		near_mem$near_mem_slave_awaddr,
		near_mem$near_mem_slave_rdata,
		near_mem$near_mem_slave_wdata;
  wire [31 : 0] near_mem$imem_instr;
  wire [7 : 0] near_mem$dmem_master_wstrb,
	       near_mem$imem_master_wstrb,
	       near_mem$near_mem_slave_wstrb,
	       near_mem$server_fence_request_put;
  wire [4 : 0] near_mem$dmem_exc_code, near_mem$imem_exc_code;
  wire [2 : 0] near_mem$dmem_master_arprot,
	       near_mem$dmem_master_awprot,
	       near_mem$dmem_req_f3,
	       near_mem$imem_master_arprot,
	       near_mem$imem_master_awprot,
	       near_mem$imem_req_f3,
	       near_mem$near_mem_slave_arprot,
	       near_mem$near_mem_slave_awprot;
  wire [1 : 0] near_mem$dmem_master_bresp,
	       near_mem$dmem_master_rresp,
	       near_mem$dmem_req_priv,
	       near_mem$imem_master_bresp,
	       near_mem$imem_master_rresp,
	       near_mem$near_mem_slave_bresp,
	       near_mem$near_mem_slave_rresp;
  wire near_mem$EN_dmem_req,
       near_mem$EN_imem_req,
       near_mem$EN_server_fence_i_request_put,
       near_mem$EN_server_fence_i_response_get,
       near_mem$EN_server_fence_request_put,
       near_mem$EN_server_fence_response_get,
       near_mem$EN_server_reset_request_put,
       near_mem$EN_server_reset_response_get,
       near_mem$EN_sfence_vma,
       near_mem$RDY_server_fence_i_request_put,
       near_mem$RDY_server_fence_i_response_get,
       near_mem$RDY_server_fence_request_put,
       near_mem$RDY_server_fence_response_get,
       near_mem$RDY_server_reset_request_put,
       near_mem$RDY_server_reset_response_get,
       near_mem$dmem_exc,
       near_mem$dmem_master_arready,
       near_mem$dmem_master_arvalid,
       near_mem$dmem_master_awready,
       near_mem$dmem_master_awvalid,
       near_mem$dmem_master_bready,
       near_mem$dmem_master_bvalid,
       near_mem$dmem_master_rready,
       near_mem$dmem_master_rvalid,
       near_mem$dmem_master_wready,
       near_mem$dmem_master_wvalid,
       near_mem$dmem_req_mstatus_MXR,
       near_mem$dmem_req_op,
       near_mem$dmem_req_sstatus_SUM,
       near_mem$dmem_valid,
       near_mem$imem_exc,
       near_mem$imem_master_arready,
       near_mem$imem_master_arvalid,
       near_mem$imem_master_awready,
       near_mem$imem_master_awvalid,
       near_mem$imem_master_bready,
       near_mem$imem_master_bvalid,
       near_mem$imem_master_rready,
       near_mem$imem_master_rvalid,
       near_mem$imem_master_wready,
       near_mem$imem_master_wvalid,
       near_mem$imem_req_mstatus_MXR,
       near_mem$imem_req_sstatus_SUM,
       near_mem$imem_req_trap,
       near_mem$imem_valid,
       near_mem$near_mem_slave_arready,
       near_mem$near_mem_slave_arvalid,
       near_mem$near_mem_slave_awready,
       near_mem$near_mem_slave_awvalid,
       near_mem$near_mem_slave_bready,
       near_mem$near_mem_slave_bvalid,
       near_mem$near_mem_slave_rready,
       near_mem$near_mem_slave_rvalid,
       near_mem$near_mem_slave_wready,
       near_mem$near_mem_slave_wvalid;

  // ports of submodule stage1_f_reset_reqs
  wire stage1_f_reset_reqs$CLR,
       stage1_f_reset_reqs$DEQ,
       stage1_f_reset_reqs$EMPTY_N,
       stage1_f_reset_reqs$ENQ,
       stage1_f_reset_reqs$FULL_N;

  // ports of submodule stage1_f_reset_rsps
  wire stage1_f_reset_rsps$CLR,
       stage1_f_reset_rsps$DEQ,
       stage1_f_reset_rsps$EMPTY_N,
       stage1_f_reset_rsps$ENQ,
       stage1_f_reset_rsps$FULL_N;

  // ports of submodule stage2_f_reset_reqs
  wire stage2_f_reset_reqs$CLR,
       stage2_f_reset_reqs$DEQ,
       stage2_f_reset_reqs$EMPTY_N,
       stage2_f_reset_reqs$ENQ,
       stage2_f_reset_reqs$FULL_N;

  // ports of submodule stage2_f_reset_rsps
  wire stage2_f_reset_rsps$CLR,
       stage2_f_reset_rsps$DEQ,
       stage2_f_reset_rsps$EMPTY_N,
       stage2_f_reset_rsps$ENQ,
       stage2_f_reset_rsps$FULL_N;

  // ports of submodule stage3_f_reset_reqs
  wire stage3_f_reset_reqs$CLR,
       stage3_f_reset_reqs$DEQ,
       stage3_f_reset_reqs$EMPTY_N,
       stage3_f_reset_reqs$ENQ,
       stage3_f_reset_reqs$FULL_N;

  // ports of submodule stage3_f_reset_rsps
  wire stage3_f_reset_rsps$CLR,
       stage3_f_reset_rsps$DEQ,
       stage3_f_reset_rsps$EMPTY_N,
       stage3_f_reset_rsps$ENQ,
       stage3_f_reset_rsps$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_WFI_resume,
       CAN_FIRE_RL_rl_finish_FENCE,
       CAN_FIRE_RL_rl_finish_FENCE_I,
       CAN_FIRE_RL_rl_finish_SFENCE_VMA,
       CAN_FIRE_RL_rl_pipe,
       CAN_FIRE_RL_rl_reset_complete,
       CAN_FIRE_RL_rl_reset_from_WFI,
       CAN_FIRE_RL_rl_reset_start,
       CAN_FIRE_RL_rl_show_pipe,
       CAN_FIRE_RL_rl_stage1_FENCE,
       CAN_FIRE_RL_rl_stage1_FENCE_I,
       CAN_FIRE_RL_rl_stage1_SFENCE_VMA,
       CAN_FIRE_RL_rl_stage1_WFI,
       CAN_FIRE_RL_rl_stage1_interrupt,
       CAN_FIRE_RL_rl_stage1_restart_after_csrrx,
       CAN_FIRE_RL_rl_stage1_trap,
       CAN_FIRE_RL_rl_stage1_xRET,
       CAN_FIRE_RL_rl_stage2_nonpipe,
       CAN_FIRE_RL_stage1_rl_reset,
       CAN_FIRE_RL_stage2_rl_reset,
       CAN_FIRE_RL_stage3_rl_reset,
       CAN_FIRE_dmem_master_m_arready,
       CAN_FIRE_dmem_master_m_awready,
       CAN_FIRE_dmem_master_m_bvalid,
       CAN_FIRE_dmem_master_m_rvalid,
       CAN_FIRE_dmem_master_m_wready,
       CAN_FIRE_external_interrupt_req,
       CAN_FIRE_hart0_server_reset_request_put,
       CAN_FIRE_hart0_server_reset_response_get,
       CAN_FIRE_imem_master_m_arready,
       CAN_FIRE_imem_master_m_awready,
       CAN_FIRE_imem_master_m_bvalid,
       CAN_FIRE_imem_master_m_rvalid,
       CAN_FIRE_imem_master_m_wready,
       CAN_FIRE_near_mem_slave_m_arvalid,
       CAN_FIRE_near_mem_slave_m_awvalid,
       CAN_FIRE_near_mem_slave_m_bready,
       CAN_FIRE_near_mem_slave_m_rready,
       CAN_FIRE_near_mem_slave_m_wvalid,
       CAN_FIRE_software_interrupt_req,
       CAN_FIRE_timer_interrupt_req,
       WILL_FIRE_RL_rl_WFI_resume,
       WILL_FIRE_RL_rl_finish_FENCE,
       WILL_FIRE_RL_rl_finish_FENCE_I,
       WILL_FIRE_RL_rl_finish_SFENCE_VMA,
       WILL_FIRE_RL_rl_pipe,
       WILL_FIRE_RL_rl_reset_complete,
       WILL_FIRE_RL_rl_reset_from_WFI,
       WILL_FIRE_RL_rl_reset_start,
       WILL_FIRE_RL_rl_show_pipe,
       WILL_FIRE_RL_rl_stage1_FENCE,
       WILL_FIRE_RL_rl_stage1_FENCE_I,
       WILL_FIRE_RL_rl_stage1_SFENCE_VMA,
       WILL_FIRE_RL_rl_stage1_WFI,
       WILL_FIRE_RL_rl_stage1_interrupt,
       WILL_FIRE_RL_rl_stage1_restart_after_csrrx,
       WILL_FIRE_RL_rl_stage1_trap,
       WILL_FIRE_RL_rl_stage1_xRET,
       WILL_FIRE_RL_rl_stage2_nonpipe,
       WILL_FIRE_RL_stage1_rl_reset,
       WILL_FIRE_RL_stage2_rl_reset,
       WILL_FIRE_RL_stage3_rl_reset,
       WILL_FIRE_dmem_master_m_arready,
       WILL_FIRE_dmem_master_m_awready,
       WILL_FIRE_dmem_master_m_bvalid,
       WILL_FIRE_dmem_master_m_rvalid,
       WILL_FIRE_dmem_master_m_wready,
       WILL_FIRE_external_interrupt_req,
       WILL_FIRE_hart0_server_reset_request_put,
       WILL_FIRE_hart0_server_reset_response_get,
       WILL_FIRE_imem_master_m_arready,
       WILL_FIRE_imem_master_m_awready,
       WILL_FIRE_imem_master_m_bvalid,
       WILL_FIRE_imem_master_m_rvalid,
       WILL_FIRE_imem_master_m_wready,
       WILL_FIRE_near_mem_slave_m_arvalid,
       WILL_FIRE_near_mem_slave_m_awvalid,
       WILL_FIRE_near_mem_slave_m_bready,
       WILL_FIRE_near_mem_slave_m_rready,
       WILL_FIRE_near_mem_slave_m_wvalid,
       WILL_FIRE_software_interrupt_req,
       WILL_FIRE_timer_interrupt_req;

  // inputs to muxes for submodule ports
  wire [63 : 0] MUX_rg_inum$write_1__VAL_1;
  wire MUX_near_mem$imem_req_1__SEL_1,
       MUX_near_mem$imem_req_1__SEL_3,
       MUX_near_mem$imem_req_1__SEL_4,
       MUX_rg_cur_priv$write_1__SEL_1,
       MUX_rg_inum$write_1__SEL_1,
       MUX_rg_inum$write_1__SEL_2,
       MUX_rg_state$write_1__SEL_1,
       MUX_rg_state$write_1__SEL_4,
       MUX_stage1_rg_full$write_1__VAL_11,
       MUX_stage2_rg_full$write_1__VAL_3;

  // remaining internal signals
  reg [128 : 0] CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q41;
  reg [127 : 0] CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q40,
		CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3,
		IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019,
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030,
		alu_outputs___1_addr_capability__h26572,
		alu_outputs___1_val1_capability__h27641,
		alu_outputs_addr_capability__h26587,
		alu_outputs_val2_capability__h34158,
		ccsr_val_capability__h27709,
		x_out_bypass_rd_val_capability__h4621;
  reg [63 : 0] _theResult_____1_snd__h17569, csr_val__h6361, new_addr__h27577;
  reg [4 : 0] CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q32,
	      CASE_rg_cur_priv_0b0_8_0b1_9_11__q31,
	      IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2258,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278,
	      alu_outputs___1_exc_code__h16779,
	      alu_outputs___1_exc_code__h5858,
	      alu_outputs___1_exc_code__h7481,
	      alu_outputs_exc_code__h16803,
	      check__h11186,
	      fv_out_data_to_stage2_rd__h5766,
	      x_out_data_to_stage3_rd__h4794;
  reg [3 : 0] CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q33,
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q34,
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1427,
	      IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1383,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424,
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434,
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1438;
  reg [2 : 0] CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q35,
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q36,
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541,
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1532;
  reg [1 : 0] CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2,
	      IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151;
  reg IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359,
      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1299,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1743,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2317,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2320,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2437,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d951,
      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1317,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2455,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2470,
      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d969,
      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494,
      TASK_testplusargs___d2368,
      TASK_testplusargs___d2369,
      x_out_bypass_rd_val_tag__h4620;
  wire [128 : 0] near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2033,
		 stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186;
  wire [127 : 0] IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1993,
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322,
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344,
		 IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2006,
		 IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2031,
		 IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317,
		 IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340,
		 alu_outputs___1_addr_capability__h26491,
		 alu_outputs___1_addr_capability__h26505,
		 alu_outputs___1_addr_capability__h26529,
		 alu_outputs___1_val1_capability__h27560,
		 alu_outputs___1_val1_capability__h27568,
		 alu_outputs___1_val1_capability__h27572,
		 alu_outputs___1_val1_capability__h27576,
		 alu_outputs___1_val1_capability__h27580,
		 alu_outputs___1_val1_capability__h27583,
		 alu_outputs___1_val1_capability__h27586,
		 alu_outputs___1_val1_capability__h27596,
		 alu_outputs___1_val1_capability__h27628,
		 alu_outputs___1_val1_capability__h27733,
		 alu_outputs___1_val2_capability__h34076,
		 alu_outputs___1_val2_capability__h34092,
		 alu_outputs___2_addr_capability__h26549,
		 alu_outputs_addr_capability__h26474,
		 alu_outputs_addr_capability__h26478,
		 alu_outputs_addr_capability__h26482,
		 alu_outputs_addr_capability__h26494,
		 b_capability__h6722,
		 b_capability__h6734,
		 b_capability__h7758,
		 b_capability__h7770,
		 controller_capability3550_AND_INV_0xFFFFFFFFFF_ETC__q13,
		 controller_capability__h13550,
		 csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d2671,
		 new_pcc_capability__h11235,
		 newcap__h8911,
		 out_val_capability184_AND_INV_0xFFFFFFFFFFFFFF_ETC__q12,
		 out_val_capability__h9184,
		 output_stage2___1_bypass_rd_val_capability__h4613,
		 pcc_capability__h11107,
		 rs1_cap403_AND_INV_0xFFFFFFFFFFFFFFFFFFFFFFFFF_ETC__q11,
		 rs1_cap__h6403,
		 rs2_val_bypassed_capability772_AND_INV_0xFFFFF_ETC__q6,
		 rs2_val_bypassed_capability__h7772;
  wire [65 : 0] base__h18243,
		len__h18245,
		lmaskLo__h18257,
		roundedLength__h18250,
		roundedLength__h18254,
		top__h18246,
		x7945_SRL_51_MINUS_IF_IF_IF_near_mem_imem_inst_ETC__q37,
		x8033_SRL_51_MINUS_IF_IF_IF_near_mem_imem_inst_ETC__q38,
		x__h27945,
		x__h28033,
		x__h28088,
		x__h28131;
  wire [64 : 0] _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d538,
		_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d767,
		_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d891,
		_0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1017,
		addrbits__h13863,
		addrbits__h6771,
		addrbits__h7964,
		addrbits__h9303,
		b_val__h14212,
		b_val__h8313,
		b_val__h9647,
		lowerbits__h13865,
		lowerbits__h7966,
		lowerbits__h9305,
		result119_PLUS_b_val647__q30,
		result312_PLUS_b_val313__q21,
		result4211_PLUS_b_val4212__q24,
		result646_PLUS_b_val647__q23,
		result__h14211,
		result__h7119,
		result__h8312,
		result__h9646,
		upperbits304_PLUS_lowerbits305__q22,
		upperbits3864_PLUS_lowerbits3865__q25,
		upperbits772_PLUS_lowerbits305__q29,
		upperbits965_PLUS_lowerbits966__q20,
		upperbits__h13864,
		upperbits__h6772,
		upperbits__h7965,
		upperbits__h9304,
		x__h13877,
		x__h6785,
		x__h7978,
		x__h9317,
		y__h13878,
		y__h7979,
		y__h9318;
  wire [63 : 0] IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d601,
		IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d604,
		IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d607,
		IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d610,
		IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d613,
		IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616,
		IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100,
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2350,
		SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1000,
		_theResult_____1_snd__h17562,
		_theResult_____1_snd__h17597,
		_theResult_____4__h34301,
		_theResult_____5__h34300,
		_theResult____h40895,
		_theResult___snd__h17673,
		_theResult___snd__h17680,
		_theResult___snd__h17786,
		_theResult___snd__h30105,
		addr132_AND_INV_0xFFFFFFFFFFFFFFFE_SL_i1391_SR_ETC__q15,
		addr__h9132,
		branch_target__h5843,
		controller_capability3550_BITS_63_TO_0_AND_INV_ETC__q17,
		cpi__h40897,
		cpifrac__h40898,
		csr_val___1__h34460,
		csr_val___2__h34299,
		csr_val___2__h34308,
		csr_val___2__h34385,
		csr_val___2__h34400,
		csr_val__h27407,
		csr_val__h27412,
		delta_CPI_cycles__h40893,
		delta_CPI_instrs___1__h40930,
		delta_CPI_instrs__h40894,
		eaddr__h6106,
		fv_out_next_pc__h5702,
		near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998,
		newOffset__h9003,
		newVal__h6410,
		newVal__h6416,
		newVal__h6425,
		new_addr__h27565,
		new_addr__h27569,
		new_addr__h27573,
		new_addr__h27676,
		new_addr__h34087,
		new_curs__h8945,
		new_offset__h27598,
		new_pc__h5854,
		next_pc__h5872,
		next_pc__h5895,
		rd_val___1__h17549,
		rd_val___1__h17557,
		rd_val___1__h17564,
		rd_val___1__h17571,
		rd_val___1__h17578,
		rd_val___1__h17585,
		rd_val___1__h30202,
		rd_val___1__h30254,
		rd_val___1__h30308,
		rd_val___1__h30337,
		rd_val___1__h30435,
		rd_val___1__h30523,
		rd_val___1__h30529,
		rd_val___1__h30574,
		rd_val__h29891,
		rd_val__h29985,
		rd_val__h30007,
		rd_val__h6051,
		rd_val__h6068,
		rd_val__h6357,
		ret_pc__h5871,
		rs1_cap403_BITS_63_TO_0_AND_INV_0xFFFFFFFFFFFF_ETC__q16,
		rs1_cap403_BITS_63_TO_0__q14,
		rs1_val__h6356,
		rs2_val_bypassed_capability772_BITS_63_TO_0_AN_ETC__q7,
		value__h26439,
		x__h11668,
		x__h11684,
		x__h13797,
		x__h13813,
		x__h14511,
		x__h14527,
		x__h15225,
		x__h15241,
		x__h15939,
		x__h15955,
		x__h40896,
		x__h6454,
		x__h6470,
		x__h7899,
		x__h7915,
		x__h9142,
		x__h9158,
		y__h34530;
  wire [31 : 0] IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2117,
		new_offset7598_BITS_31_TO_0__q28,
		rs1_cap403_BITS_31_TO_0_MINUS_rs2_val_bypassed_ETC__q19,
		rs1_cap403_BITS_31_TO_0_PLUS_rs2_val_bypassed__ETC__q18,
		rs1_cap403_BITS_31_TO_0_SRL_rs2_val_bypassed_c_ETC__q9,
		rs1_cap403_BITS_31_TO_0__q8,
		tmp__h30336,
		v32__h6049,
		x__h30257,
		x__h30311,
		x__h30532,
		x__h30577;
  wire [26 : 0] thin_bounds__h27799;
  wire [25 : 0] IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d1982;
  wire [23 : 0] x__h9232;
  wire [20 : 0] near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q26;
  wire [19 : 0] aMid__h13948,
		aMid__h6856,
		aMid__h8049,
		aMid__h9386,
		b__h13862,
		b__h7963,
		b__h9302,
		r__h13949,
		r__h8050,
		r__h9387,
		t__h13861,
		t__h7962,
		t__h9301,
		x__h14162,
		x__h14441,
		x__h31513,
		x__h8263,
		x__h8542,
		x__h9597,
		x__h9873;
  wire [14 : 0] newperms__h8910, y__h28229;
  wire [13 : 0] _theResult_____1_snd_bounds_topBits__h27914,
		out_bounds_baseBits__h27911,
		ret_bounds_baseBits__h27906,
		ret_bounds_baseBits__h28123,
		ret_bounds_topBits__h27905,
		ret_bounds_topBits__h28015,
		x__h27902;
  wire [12 : 0] near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1;
  wire [11 : 0] near_memimem_instr_BITS_31_TO_20__q27,
		near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10;
  wire [9 : 0] funct10__h6030, x__h32361;
  wire [7 : 0] stage3_rg_stage3_BITS_136_TO_129__q4,
	       x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5;
  wire [5 : 0] _51_MINUS_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d1946,
	       i1__h13953,
	       i1__h8054,
	       i1__h9391,
	       shamt__h5945,
	       x__h28180,
	       y__h13904,
	       y__h8005,
	       y__h9343;
  wire [4 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2201,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2214,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2237,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2251,
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2262,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2187,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2196,
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2246,
	       IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2194,
	       IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2235,
	       IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2249,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2220,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2260,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2206,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2212,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2216,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2218,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2239,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2253,
	       _theResult___exc_code__h18079,
	       _theResult___exc_code__h25857,
	       alu_outputs___1_exc_code__h25938,
	       alu_outputs___1_exc_code__h6371,
	       check__h13522,
	       check__h6436,
	       check__h7491,
	       check__h8669,
	       decoded_instr_rs2__h5316,
	       fv_out_trap_info_exc_code__h26195,
	       out__h13296;
  wire [3 : 0] IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1401,
	       IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1408,
	       IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1349,
	       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440,
	       IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1385,
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1387,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1399,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1402,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1407,
	       IF_rg_cur_priv_9_EQ_0b11_355_OR_rg_cur_priv_9__ETC___d1381,
	       cur_verbosity__h1374;
  wire [2 : 0] x__h34032;
  wire [1 : 0] IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d553,
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d905,
	       IF_csr_regfileread_misa_BIT_18_THEN_spp4305_E_ETC__q39,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1028,
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d784,
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114,
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152,
	       IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108,
	       b__h14224,
	       b__h7132,
	       b__h8325,
	       b__h9659,
	       ms_spp__h3168,
	       ms_sxl__h3157,
	       ms_uxl__h3158,
	       spliced_bits__h34356,
	       spp__h34305,
	       x__h14219,
	       x__h7127,
	       x__h8320,
	       x__h9654;
  wire IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d531,
       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d547,
       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d884,
       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d899,
       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d760,
       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d778,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1127,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1290,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2226,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2430,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d526,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d544,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d560,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d562,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d847,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d879,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d897,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d918,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d932,
       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1249,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1404,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2399,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2400,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2405,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2410,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2411,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2423,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2424,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2427,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d495,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d504,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d806,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807,
       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d812,
       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2668,
       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1310,
       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2331,
       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2448,
       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d962,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1011,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1021,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1033,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1133,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1139,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1702,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2462,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d580,
       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d595,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1296,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1621,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1732,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2343,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2434,
       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d948,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1250,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1262,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1287,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1405,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1730,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2046,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2681,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d928,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d935,
       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2595,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328,
       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d486,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d501,
       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d803,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2397,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2403,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2408,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2421,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d487,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d502,
       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d804,
       NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1718,
       NOT_0_CONCAT_IF_near_mem_imem_instr__20_BITS_1_ETC___d1950,
       NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d572,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2516,
       NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2518,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1039,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1137,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2303,
       NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d629,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1281,
       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d838,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176,
       NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274,
       NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260,
       NOT_near_mem_imem_exc__38_055_AND_IF_near_mem__ETC___d1603,
       NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068,
       NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1500,
       NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1565,
       NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1591,
       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1106,
       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1599,
       NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385,
       NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d984,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1243,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1247,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2414,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2415,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2419,
       NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2420,
       NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1242,
       NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1706,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2473,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2484,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2486,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2598,
       NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2599,
       NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2489,
       NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2532,
       NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541,
       NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2593,
       NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2602,
       NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2604,
       NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2607,
       NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d2618,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d755,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d773,
       _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d791,
       _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1703,
       alu_outputs___1_addr_tag__h26528,
       alu_outputs___1_addr_tag__h26571,
       alu_outputs___1_val1_tag__h27640,
       alu_outputs___1_val1_tag__h27732,
       alu_outputs___1_val2_tag__h34142,
       alu_outputs_addr_tag__h26586,
       alu_outputs_val2_tag__h34157,
       csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1066,
       global__h11233,
       global__h27648,
       gpr_regfile_RDY_server_reset_response_get__374_ETC___d2386,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2137,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2140,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2143,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2146,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2149,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2152,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2155,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2158,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2161,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2164,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2167,
       near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262,
       near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_3_ETC___d1360,
       near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426,
       near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1085,
       near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1324,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d575,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d587,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d733,
       near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d794,
       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2553,
       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d732,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2529,
       near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2530,
       output_stage2___1_bypass_rd_val_tag__h4612,
       rg_cur_priv_9_EQ_0b11_355_OR_rg_cur_priv_9_EQ__ETC___d1379,
       rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d837,
       rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249,
       rg_halt_478_OR_csr_regfile_interrupt_pending_r_ETC___d2624,
       rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2636,
       rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2649,
       rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2655,
       rg_state_7_EQ_2_391_AND_stage1_rg_full_16_AND__ETC___d2686,
       rg_state_7_EQ_2_391_AND_stage1_rg_full_16_OR_N_ETC___d2492,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1444,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1448,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1452,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1456,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1460,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1464,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1468,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1472,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1476,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1480,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1545,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1549,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1553,
       stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1557,
       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333,
       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309,
       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332,
       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307,
       stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90;

  // action method hart0_server_reset_request_put
  assign RDY_hart0_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign CAN_FIRE_hart0_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign WILL_FIRE_hart0_server_reset_request_put =
	     EN_hart0_server_reset_request_put ;

  // action method hart0_server_reset_response_get
  assign RDY_hart0_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_hart0_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_hart0_server_reset_response_get =
	     EN_hart0_server_reset_response_get ;

  // value method imem_master_m_awvalid
  assign imem_master_awvalid = near_mem$imem_master_awvalid ;

  // value method imem_master_m_awaddr
  assign imem_master_awaddr = near_mem$imem_master_awaddr ;

  // value method imem_master_m_awprot
  assign imem_master_awprot = near_mem$imem_master_awprot ;

  // action method imem_master_m_awready
  assign CAN_FIRE_imem_master_m_awready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_awready = 1'd1 ;

  // value method imem_master_m_wvalid
  assign imem_master_wvalid = near_mem$imem_master_wvalid ;

  // value method imem_master_m_wdata
  assign imem_master_wdata = near_mem$imem_master_wdata ;

  // value method imem_master_m_wstrb
  assign imem_master_wstrb = near_mem$imem_master_wstrb ;

  // action method imem_master_m_wready
  assign CAN_FIRE_imem_master_m_wready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_wready = 1'd1 ;

  // action method imem_master_m_bvalid
  assign CAN_FIRE_imem_master_m_bvalid = 1'd1 ;
  assign WILL_FIRE_imem_master_m_bvalid = 1'd1 ;

  // value method imem_master_m_bready
  assign imem_master_bready = near_mem$imem_master_bready ;

  // value method imem_master_m_arvalid
  assign imem_master_arvalid = near_mem$imem_master_arvalid ;

  // value method imem_master_m_araddr
  assign imem_master_araddr = near_mem$imem_master_araddr ;

  // value method imem_master_m_arprot
  assign imem_master_arprot = near_mem$imem_master_arprot ;

  // action method imem_master_m_arready
  assign CAN_FIRE_imem_master_m_arready = 1'd1 ;
  assign WILL_FIRE_imem_master_m_arready = 1'd1 ;

  // action method imem_master_m_rvalid
  assign CAN_FIRE_imem_master_m_rvalid = 1'd1 ;
  assign WILL_FIRE_imem_master_m_rvalid = 1'd1 ;

  // value method imem_master_m_rready
  assign imem_master_rready = near_mem$imem_master_rready ;

  // value method dmem_master_m_awvalid
  assign dmem_master_awvalid = near_mem$dmem_master_awvalid ;

  // value method dmem_master_m_awaddr
  assign dmem_master_awaddr = near_mem$dmem_master_awaddr ;

  // value method dmem_master_m_awprot
  assign dmem_master_awprot = near_mem$dmem_master_awprot ;

  // action method dmem_master_m_awready
  assign CAN_FIRE_dmem_master_m_awready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_awready = 1'd1 ;

  // value method dmem_master_m_wvalid
  assign dmem_master_wvalid = near_mem$dmem_master_wvalid ;

  // value method dmem_master_m_wdata
  assign dmem_master_wdata = near_mem$dmem_master_wdata ;

  // value method dmem_master_m_wstrb
  assign dmem_master_wstrb = near_mem$dmem_master_wstrb ;

  // action method dmem_master_m_wready
  assign CAN_FIRE_dmem_master_m_wready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_wready = 1'd1 ;

  // action method dmem_master_m_bvalid
  assign CAN_FIRE_dmem_master_m_bvalid = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_bvalid = 1'd1 ;

  // value method dmem_master_m_bready
  assign dmem_master_bready = near_mem$dmem_master_bready ;

  // value method dmem_master_m_arvalid
  assign dmem_master_arvalid = near_mem$dmem_master_arvalid ;

  // value method dmem_master_m_araddr
  assign dmem_master_araddr = near_mem$dmem_master_araddr ;

  // value method dmem_master_m_arprot
  assign dmem_master_arprot = near_mem$dmem_master_arprot ;

  // action method dmem_master_m_arready
  assign CAN_FIRE_dmem_master_m_arready = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_arready = 1'd1 ;

  // action method dmem_master_m_rvalid
  assign CAN_FIRE_dmem_master_m_rvalid = 1'd1 ;
  assign WILL_FIRE_dmem_master_m_rvalid = 1'd1 ;

  // value method dmem_master_m_rready
  assign dmem_master_rready = near_mem$dmem_master_rready ;

  // action method near_mem_slave_m_awvalid
  assign CAN_FIRE_near_mem_slave_m_awvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_awvalid = 1'd1 ;

  // value method near_mem_slave_m_awready
  assign near_mem_slave_awready = near_mem$near_mem_slave_awready ;

  // action method near_mem_slave_m_wvalid
  assign CAN_FIRE_near_mem_slave_m_wvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_wvalid = 1'd1 ;

  // value method near_mem_slave_m_wready
  assign near_mem_slave_wready = near_mem$near_mem_slave_wready ;

  // value method near_mem_slave_m_bvalid
  assign near_mem_slave_bvalid = near_mem$near_mem_slave_bvalid ;

  // value method near_mem_slave_m_bresp
  assign near_mem_slave_bresp = near_mem$near_mem_slave_bresp ;

  // action method near_mem_slave_m_bready
  assign CAN_FIRE_near_mem_slave_m_bready = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_bready = 1'd1 ;

  // action method near_mem_slave_m_arvalid
  assign CAN_FIRE_near_mem_slave_m_arvalid = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_arvalid = 1'd1 ;

  // value method near_mem_slave_m_arready
  assign near_mem_slave_arready = near_mem$near_mem_slave_arready ;

  // value method near_mem_slave_m_rvalid
  assign near_mem_slave_rvalid = near_mem$near_mem_slave_rvalid ;

  // value method near_mem_slave_m_rresp
  assign near_mem_slave_rresp = near_mem$near_mem_slave_rresp ;

  // value method near_mem_slave_m_rdata
  assign near_mem_slave_rdata = near_mem$near_mem_slave_rdata ;

  // action method near_mem_slave_m_rready
  assign CAN_FIRE_near_mem_slave_m_rready = 1'd1 ;
  assign WILL_FIRE_near_mem_slave_m_rready = 1'd1 ;

  // action method external_interrupt_req
  assign RDY_external_interrupt_req = csr_regfile$RDY_external_interrupt_req ;
  assign CAN_FIRE_external_interrupt_req =
	     csr_regfile$RDY_external_interrupt_req ;
  assign WILL_FIRE_external_interrupt_req = EN_external_interrupt_req ;

  // action method timer_interrupt_req
  assign RDY_timer_interrupt_req = csr_regfile$RDY_timer_interrupt_req ;
  assign CAN_FIRE_timer_interrupt_req = csr_regfile$RDY_timer_interrupt_req ;
  assign WILL_FIRE_timer_interrupt_req = EN_timer_interrupt_req ;

  // action method software_interrupt_req
  assign RDY_software_interrupt_req = csr_regfile$RDY_software_interrupt_req ;
  assign CAN_FIRE_software_interrupt_req =
	     csr_regfile$RDY_software_interrupt_req ;
  assign WILL_FIRE_software_interrupt_req = EN_software_interrupt_req ;

  // submodule csr_regfile
  mkCSR_RegFile csr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .csr_counter_read_fault_csr_addr(csr_regfile$csr_counter_read_fault_csr_addr),
			    .csr_counter_read_fault_priv(csr_regfile$csr_counter_read_fault_priv),
			    .csr_ret_actions_from_priv(csr_regfile$csr_ret_actions_from_priv),
			    .csr_trap_actions_exc_code(csr_regfile$csr_trap_actions_exc_code),
			    .csr_trap_actions_from_priv(csr_regfile$csr_trap_actions_from_priv),
			    .csr_trap_actions_interrupt(csr_regfile$csr_trap_actions_interrupt),
			    .csr_trap_actions_pc(csr_regfile$csr_trap_actions_pc),
			    .csr_trap_actions_xtval(csr_regfile$csr_trap_actions_xtval),
			    .external_interrupt_req_set_not_clear(csr_regfile$external_interrupt_req_set_not_clear),
			    .interrupt_pending_cur_priv(csr_regfile$interrupt_pending_cur_priv),
			    .mav_read_csr_csr_addr(csr_regfile$mav_read_csr_csr_addr),
			    .read_csr_cap_csr_addr(csr_regfile$read_csr_cap_csr_addr),
			    .read_csr_csr_addr(csr_regfile$read_csr_csr_addr),
			    .read_csr_port2_csr_addr(csr_regfile$read_csr_port2_csr_addr),
			    .software_interrupt_req_set_not_clear(csr_regfile$software_interrupt_req_set_not_clear),
			    .timer_interrupt_req_set_not_clear(csr_regfile$timer_interrupt_req_set_not_clear),
			    .write_csr_cap_cap_addr(csr_regfile$write_csr_cap_cap_addr),
			    .write_csr_cap_value(csr_regfile$write_csr_cap_value),
			    .write_csr_csr_addr(csr_regfile$write_csr_csr_addr),
			    .write_csr_word(csr_regfile$write_csr_word),
			    .EN_server_reset_request_put(csr_regfile$EN_server_reset_request_put),
			    .EN_server_reset_response_get(csr_regfile$EN_server_reset_response_get),
			    .EN_mav_read_csr(csr_regfile$EN_mav_read_csr),
			    .EN_write_csr_cap(csr_regfile$EN_write_csr_cap),
			    .EN_write_csr(csr_regfile$EN_write_csr),
			    .EN_csr_trap_actions(csr_regfile$EN_csr_trap_actions),
			    .EN_csr_ret_actions(csr_regfile$EN_csr_ret_actions),
			    .EN_csr_minstret_incr(csr_regfile$EN_csr_minstret_incr),
			    .EN_external_interrupt_req(csr_regfile$EN_external_interrupt_req),
			    .EN_timer_interrupt_req(csr_regfile$EN_timer_interrupt_req),
			    .EN_software_interrupt_req(csr_regfile$EN_software_interrupt_req),
			    .RDY_server_reset_request_put(csr_regfile$RDY_server_reset_request_put),
			    .RDY_server_reset_response_get(csr_regfile$RDY_server_reset_response_get),
			    .read_csr(csr_regfile$read_csr),
			    .read_csr_port2(),
			    .mav_read_csr(),
			    .read_csr_cap(csr_regfile$read_csr_cap),
			    .read_misa(csr_regfile$read_misa),
			    .read_mstatus(csr_regfile$read_mstatus),
			    .read_sstatus(csr_regfile$read_sstatus),
			    .read_satp(csr_regfile$read_satp),
			    .csr_trap_actions(csr_regfile$csr_trap_actions),
			    .RDY_csr_trap_actions(),
			    .csr_ret_actions(csr_regfile$csr_ret_actions),
			    .RDY_csr_ret_actions(),
			    .read_csr_minstret(csr_regfile$read_csr_minstret),
			    .read_csr_mcycle(csr_regfile$read_csr_mcycle),
			    .read_csr_mtime(),
			    .csr_counter_read_fault(csr_regfile$csr_counter_read_fault),
			    .read_csr_mip(),
			    .RDY_external_interrupt_req(csr_regfile$RDY_external_interrupt_req),
			    .RDY_timer_interrupt_req(csr_regfile$RDY_timer_interrupt_req),
			    .RDY_software_interrupt_req(csr_regfile$RDY_software_interrupt_req),
			    .interrupt_pending(csr_regfile$interrupt_pending),
			    .wfi_resume(csr_regfile$wfi_resume));

  // submodule f_reset_reqs
  FIFO20 #(.guarded(32'd1)) f_reset_reqs(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_reqs$ENQ),
					 .DEQ(f_reset_reqs$DEQ),
					 .CLR(f_reset_reqs$CLR),
					 .FULL_N(f_reset_reqs$FULL_N),
					 .EMPTY_N(f_reset_reqs$EMPTY_N));

  // submodule f_reset_rsps
  FIFO20 #(.guarded(32'd1)) f_reset_rsps(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_rsps$ENQ),
					 .DEQ(f_reset_rsps$DEQ),
					 .CLR(f_reset_rsps$CLR),
					 .FULL_N(f_reset_rsps$FULL_N),
					 .EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule gpr_regfile
  mkGPR_RegFile gpr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .clear_quarter_mask(gpr_regfile$clear_quarter_mask),
			    .clear_quarter_qid(gpr_regfile$clear_quarter_qid),
			    .read_rs1_port2_rs1(gpr_regfile$read_rs1_port2_rs1),
			    .read_rs1_rs1(gpr_regfile$read_rs1_rs1),
			    .read_rs2_rs2(gpr_regfile$read_rs2_rs2),
			    .write_rd_int_rd(gpr_regfile$write_rd_int_rd),
			    .write_rd_int_rd_val(gpr_regfile$write_rd_int_rd_val),
			    .write_rd_rd(gpr_regfile$write_rd_rd),
			    .write_rd_rd_val(gpr_regfile$write_rd_rd_val),
			    .EN_server_reset_request_put(gpr_regfile$EN_server_reset_request_put),
			    .EN_server_reset_response_get(gpr_regfile$EN_server_reset_response_get),
			    .EN_write_rd(gpr_regfile$EN_write_rd),
			    .EN_write_rd_int(gpr_regfile$EN_write_rd_int),
			    .EN_clear_quarter(gpr_regfile$EN_clear_quarter),
			    .RDY_server_reset_request_put(gpr_regfile$RDY_server_reset_request_put),
			    .RDY_server_reset_response_get(gpr_regfile$RDY_server_reset_response_get),
			    .read_rs1(gpr_regfile$read_rs1),
			    .read_rs1_port2(),
			    .read_rs2(gpr_regfile$read_rs2),
			    .is_busy(gpr_regfile$is_busy));

  // submodule near_mem
  mkNear_Mem near_mem(.CLK(CLK),
		      .RST_N(RST_N),
		      .dmem_master_arready(near_mem$dmem_master_arready),
		      .dmem_master_awready(near_mem$dmem_master_awready),
		      .dmem_master_bresp(near_mem$dmem_master_bresp),
		      .dmem_master_bvalid(near_mem$dmem_master_bvalid),
		      .dmem_master_rdata(near_mem$dmem_master_rdata),
		      .dmem_master_rresp(near_mem$dmem_master_rresp),
		      .dmem_master_rvalid(near_mem$dmem_master_rvalid),
		      .dmem_master_wready(near_mem$dmem_master_wready),
		      .dmem_req_addr(near_mem$dmem_req_addr),
		      .dmem_req_f3(near_mem$dmem_req_f3),
		      .dmem_req_mstatus_MXR(near_mem$dmem_req_mstatus_MXR),
		      .dmem_req_op(near_mem$dmem_req_op),
		      .dmem_req_priv(near_mem$dmem_req_priv),
		      .dmem_req_satp(near_mem$dmem_req_satp),
		      .dmem_req_sstatus_SUM(near_mem$dmem_req_sstatus_SUM),
		      .dmem_req_store_value(near_mem$dmem_req_store_value),
		      .imem_master_arready(near_mem$imem_master_arready),
		      .imem_master_awready(near_mem$imem_master_awready),
		      .imem_master_bresp(near_mem$imem_master_bresp),
		      .imem_master_bvalid(near_mem$imem_master_bvalid),
		      .imem_master_rdata(near_mem$imem_master_rdata),
		      .imem_master_rresp(near_mem$imem_master_rresp),
		      .imem_master_rvalid(near_mem$imem_master_rvalid),
		      .imem_master_wready(near_mem$imem_master_wready),
		      .imem_req_addr(near_mem$imem_req_addr),
		      .imem_req_f3(near_mem$imem_req_f3),
		      .imem_req_mstatus_MXR(near_mem$imem_req_mstatus_MXR),
		      .imem_req_priv(near_mem$imem_req_priv),
		      .imem_req_satp(near_mem$imem_req_satp),
		      .imem_req_sstatus_SUM(near_mem$imem_req_sstatus_SUM),
		      .imem_req_trap(near_mem$imem_req_trap),
		      .near_mem_slave_araddr(near_mem$near_mem_slave_araddr),
		      .near_mem_slave_arprot(near_mem$near_mem_slave_arprot),
		      .near_mem_slave_arvalid(near_mem$near_mem_slave_arvalid),
		      .near_mem_slave_awaddr(near_mem$near_mem_slave_awaddr),
		      .near_mem_slave_awprot(near_mem$near_mem_slave_awprot),
		      .near_mem_slave_awvalid(near_mem$near_mem_slave_awvalid),
		      .near_mem_slave_bready(near_mem$near_mem_slave_bready),
		      .near_mem_slave_rready(near_mem$near_mem_slave_rready),
		      .near_mem_slave_wdata(near_mem$near_mem_slave_wdata),
		      .near_mem_slave_wstrb(near_mem$near_mem_slave_wstrb),
		      .near_mem_slave_wvalid(near_mem$near_mem_slave_wvalid),
		      .server_fence_request_put(near_mem$server_fence_request_put),
		      .EN_server_reset_request_put(near_mem$EN_server_reset_request_put),
		      .EN_server_reset_response_get(near_mem$EN_server_reset_response_get),
		      .EN_imem_req(near_mem$EN_imem_req),
		      .EN_dmem_req(near_mem$EN_dmem_req),
		      .EN_server_fence_i_request_put(near_mem$EN_server_fence_i_request_put),
		      .EN_server_fence_i_response_get(near_mem$EN_server_fence_i_response_get),
		      .EN_server_fence_request_put(near_mem$EN_server_fence_request_put),
		      .EN_server_fence_response_get(near_mem$EN_server_fence_response_get),
		      .EN_sfence_vma(near_mem$EN_sfence_vma),
		      .RDY_server_reset_request_put(near_mem$RDY_server_reset_request_put),
		      .RDY_server_reset_response_get(near_mem$RDY_server_reset_response_get),
		      .imem_valid(near_mem$imem_valid),
		      .imem_pc(near_mem$imem_pc),
		      .imem_instr(near_mem$imem_instr),
		      .imem_exc(near_mem$imem_exc),
		      .imem_exc_code(near_mem$imem_exc_code),
		      .imem_master_awvalid(near_mem$imem_master_awvalid),
		      .imem_master_awaddr(near_mem$imem_master_awaddr),
		      .imem_master_awprot(near_mem$imem_master_awprot),
		      .imem_master_wvalid(near_mem$imem_master_wvalid),
		      .imem_master_wdata(near_mem$imem_master_wdata),
		      .imem_master_wstrb(near_mem$imem_master_wstrb),
		      .imem_master_bready(near_mem$imem_master_bready),
		      .imem_master_arvalid(near_mem$imem_master_arvalid),
		      .imem_master_araddr(near_mem$imem_master_araddr),
		      .imem_master_arprot(near_mem$imem_master_arprot),
		      .imem_master_rready(near_mem$imem_master_rready),
		      .dmem_valid(near_mem$dmem_valid),
		      .dmem_word64(near_mem$dmem_word64),
		      .dmem_st_amo_val(),
		      .dmem_exc(near_mem$dmem_exc),
		      .dmem_exc_code(near_mem$dmem_exc_code),
		      .dmem_master_awvalid(near_mem$dmem_master_awvalid),
		      .dmem_master_awaddr(near_mem$dmem_master_awaddr),
		      .dmem_master_awprot(near_mem$dmem_master_awprot),
		      .dmem_master_wvalid(near_mem$dmem_master_wvalid),
		      .dmem_master_wdata(near_mem$dmem_master_wdata),
		      .dmem_master_wstrb(near_mem$dmem_master_wstrb),
		      .dmem_master_bready(near_mem$dmem_master_bready),
		      .dmem_master_arvalid(near_mem$dmem_master_arvalid),
		      .dmem_master_araddr(near_mem$dmem_master_araddr),
		      .dmem_master_arprot(near_mem$dmem_master_arprot),
		      .dmem_master_rready(near_mem$dmem_master_rready),
		      .RDY_server_fence_i_request_put(near_mem$RDY_server_fence_i_request_put),
		      .RDY_server_fence_i_response_get(near_mem$RDY_server_fence_i_response_get),
		      .RDY_server_fence_request_put(near_mem$RDY_server_fence_request_put),
		      .RDY_server_fence_response_get(near_mem$RDY_server_fence_response_get),
		      .RDY_sfence_vma(),
		      .near_mem_slave_awready(near_mem$near_mem_slave_awready),
		      .near_mem_slave_wready(near_mem$near_mem_slave_wready),
		      .near_mem_slave_bvalid(near_mem$near_mem_slave_bvalid),
		      .near_mem_slave_bresp(near_mem$near_mem_slave_bresp),
		      .near_mem_slave_arready(near_mem$near_mem_slave_arready),
		      .near_mem_slave_rvalid(near_mem$near_mem_slave_rvalid),
		      .near_mem_slave_rresp(near_mem$near_mem_slave_rresp),
		      .near_mem_slave_rdata(near_mem$near_mem_slave_rdata));

  // submodule stage1_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage1_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage1_f_reset_reqs$ENQ),
						.DEQ(stage1_f_reset_reqs$DEQ),
						.CLR(stage1_f_reset_reqs$CLR),
						.FULL_N(stage1_f_reset_reqs$FULL_N),
						.EMPTY_N(stage1_f_reset_reqs$EMPTY_N));

  // submodule stage1_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage1_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage1_f_reset_rsps$ENQ),
						.DEQ(stage1_f_reset_rsps$DEQ),
						.CLR(stage1_f_reset_rsps$CLR),
						.FULL_N(stage1_f_reset_rsps$FULL_N),
						.EMPTY_N(stage1_f_reset_rsps$EMPTY_N));

  // submodule stage2_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage2_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage2_f_reset_reqs$ENQ),
						.DEQ(stage2_f_reset_reqs$DEQ),
						.CLR(stage2_f_reset_reqs$CLR),
						.FULL_N(stage2_f_reset_reqs$FULL_N),
						.EMPTY_N(stage2_f_reset_reqs$EMPTY_N));

  // submodule stage2_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage2_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage2_f_reset_rsps$ENQ),
						.DEQ(stage2_f_reset_rsps$DEQ),
						.CLR(stage2_f_reset_rsps$CLR),
						.FULL_N(stage2_f_reset_rsps$FULL_N),
						.EMPTY_N(stage2_f_reset_rsps$EMPTY_N));

  // submodule stage3_f_reset_reqs
  FIFO20 #(.guarded(32'd1)) stage3_f_reset_reqs(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage3_f_reset_reqs$ENQ),
						.DEQ(stage3_f_reset_reqs$DEQ),
						.CLR(stage3_f_reset_reqs$CLR),
						.FULL_N(stage3_f_reset_reqs$FULL_N),
						.EMPTY_N(stage3_f_reset_reqs$EMPTY_N));

  // submodule stage3_f_reset_rsps
  FIFO20 #(.guarded(32'd1)) stage3_f_reset_rsps(.RST(RST_N),
						.CLK(CLK),
						.ENQ(stage3_f_reset_rsps$ENQ),
						.DEQ(stage3_f_reset_rsps$DEQ),
						.CLR(stage3_f_reset_rsps$CLR),
						.FULL_N(stage3_f_reset_rsps$FULL_N),
						.EMPTY_N(stage3_f_reset_rsps$EMPTY_N));

  // rule RL_rl_show_pipe
  assign CAN_FIRE_RL_rl_show_pipe =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     rg_state != 3'd0 &&
	     rg_state != 3'd1 &&
	     rg_state != 3'd7 ;
  assign WILL_FIRE_RL_rl_show_pipe = CAN_FIRE_RL_rl_show_pipe ;

  // rule RL_rl_reset_complete
  assign CAN_FIRE_RL_rl_reset_complete =
	     gpr_regfile_RDY_server_reset_response_get__374_ETC___d2386 &&
	     rg_state == 3'd1 ;
  assign WILL_FIRE_RL_rl_reset_complete = CAN_FIRE_RL_rl_reset_complete ;

  // rule RL_rl_pipe
  assign CAN_FIRE_RL_rl_pipe =
	     rg_state_7_EQ_2_391_AND_stage1_rg_full_16_OR_N_ETC___d2492 &&
	     !gpr_regfile$is_busy ;
  assign WILL_FIRE_RL_rl_pipe = CAN_FIRE_RL_rl_pipe ;

  // rule RL_rl_stage1_restart_after_csrrx
  assign CAN_FIRE_RL_rl_stage1_restart_after_csrrx = rg_state == 3'd3 ;
  assign WILL_FIRE_RL_rl_stage1_restart_after_csrrx =
	     CAN_FIRE_RL_rl_stage1_restart_after_csrrx ;

  // rule RL_rl_stage2_nonpipe
  assign CAN_FIRE_RL_rl_stage2_nonpipe =
	     rg_state == 3'd2 && !stage3_rg_full &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd3 ;
  assign WILL_FIRE_RL_rl_stage2_nonpipe = CAN_FIRE_RL_rl_stage2_nonpipe ;

  // rule RL_rl_stage1_xRET
  assign CAN_FIRE_RL_rl_stage1_xRET =
	     rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2636 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053 &&
	     (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	      4'd5 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	      4'd6 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	      4'd7) ;
  assign WILL_FIRE_RL_rl_stage1_xRET = CAN_FIRE_RL_rl_stage1_xRET ;

  // rule RL_rl_stage1_FENCE_I
  assign CAN_FIRE_RL_rl_stage1_FENCE_I =
	     near_mem$RDY_server_fence_i_request_put &&
	     rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2649 ;
  assign WILL_FIRE_RL_rl_stage1_FENCE_I = CAN_FIRE_RL_rl_stage1_FENCE_I ;

  // rule RL_rl_finish_FENCE_I
  assign CAN_FIRE_RL_rl_finish_FENCE_I =
	     near_mem$RDY_server_fence_i_response_get && rg_state == 3'd4 ;
  assign WILL_FIRE_RL_rl_finish_FENCE_I = CAN_FIRE_RL_rl_finish_FENCE_I ;

  // rule RL_rl_stage1_FENCE
  assign CAN_FIRE_RL_rl_stage1_FENCE =
	     near_mem$RDY_server_fence_request_put &&
	     rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2655 ;
  assign WILL_FIRE_RL_rl_stage1_FENCE = CAN_FIRE_RL_rl_stage1_FENCE ;

  // rule RL_rl_finish_FENCE
  assign CAN_FIRE_RL_rl_finish_FENCE =
	     near_mem$RDY_server_fence_response_get && rg_state == 3'd5 ;
  assign WILL_FIRE_RL_rl_finish_FENCE = CAN_FIRE_RL_rl_finish_FENCE ;

  // rule RL_rl_stage1_SFENCE_VMA
  assign CAN_FIRE_RL_rl_stage1_SFENCE_VMA =
	     rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2636 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd4 ;
  assign WILL_FIRE_RL_rl_stage1_SFENCE_VMA =
	     CAN_FIRE_RL_rl_stage1_SFENCE_VMA ;

  // rule RL_rl_finish_SFENCE_VMA
  assign CAN_FIRE_RL_rl_finish_SFENCE_VMA = rg_state == 3'd6 ;
  assign WILL_FIRE_RL_rl_finish_SFENCE_VMA =
	     CAN_FIRE_RL_rl_finish_SFENCE_VMA ;

  // rule RL_rl_stage1_WFI
  assign CAN_FIRE_RL_rl_stage1_WFI =
	     rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2636 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd8 ;
  assign WILL_FIRE_RL_rl_stage1_WFI = CAN_FIRE_RL_rl_stage1_WFI ;

  // rule RL_rl_WFI_resume
  assign CAN_FIRE_RL_rl_WFI_resume =
	     rg_state == 3'd7 && csr_regfile$wfi_resume ;
  assign WILL_FIRE_RL_rl_WFI_resume = CAN_FIRE_RL_rl_WFI_resume ;

  // rule RL_rl_reset_from_WFI
  assign CAN_FIRE_RL_rl_reset_from_WFI =
	     rg_state == 3'd7 && f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_from_WFI =
	     CAN_FIRE_RL_rl_reset_from_WFI && !WILL_FIRE_RL_rl_WFI_resume ;

  // rule RL_rl_stage1_trap
  assign CAN_FIRE_RL_rl_stage1_trap =
	     rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2636 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd9 ;
  assign WILL_FIRE_RL_rl_stage1_trap =
	     CAN_FIRE_RL_rl_stage1_trap && !WILL_FIRE_RL_rl_pipe ;

  // rule RL_rl_stage1_interrupt
  assign CAN_FIRE_RL_rl_stage1_interrupt =
	     csr_regfile$interrupt_pending[5] &&
	     rg_state_7_EQ_2_391_AND_stage1_rg_full_16_AND__ETC___d2686 ;
  assign WILL_FIRE_RL_rl_stage1_interrupt =
	     CAN_FIRE_RL_rl_stage1_interrupt && !WILL_FIRE_RL_rl_pipe ;

  // rule RL_rl_reset_start
  assign CAN_FIRE_RL_rl_reset_start =
	     gpr_regfile$RDY_server_reset_request_put &&
	     near_mem$RDY_server_reset_request_put &&
	     csr_regfile$RDY_server_reset_request_put &&
	     stage1_f_reset_reqs$FULL_N &&
	     stage2_f_reset_reqs$FULL_N &&
	     stage3_f_reset_reqs$FULL_N &&
	     rg_state == 3'd0 ;
  assign WILL_FIRE_RL_rl_reset_start = CAN_FIRE_RL_rl_reset_start ;

  // rule RL_stage3_rl_reset
  assign CAN_FIRE_RL_stage3_rl_reset =
	     stage3_f_reset_reqs$EMPTY_N && stage3_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage3_rl_reset = CAN_FIRE_RL_stage3_rl_reset ;

  // rule RL_stage2_rl_reset
  assign CAN_FIRE_RL_stage2_rl_reset =
	     stage2_f_reset_reqs$EMPTY_N && stage2_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage2_rl_reset = CAN_FIRE_RL_stage2_rl_reset ;

  // rule RL_stage1_rl_reset
  assign CAN_FIRE_RL_stage1_rl_reset =
	     stage1_f_reset_reqs$EMPTY_N && stage1_f_reset_rsps$FULL_N ;
  assign WILL_FIRE_RL_stage1_rl_reset = CAN_FIRE_RL_stage1_rl_reset ;

  // inputs to muxes for submodule ports
  assign MUX_near_mem$imem_req_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2602 ;
  assign MUX_near_mem$imem_req_1__SEL_3 =
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ;
  assign MUX_near_mem$imem_req_1__SEL_4 =
	     WILL_FIRE_RL_rl_stage1_trap || WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_cur_priv$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_inum$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ;
  assign MUX_rg_inum$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_stage1_trap || WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign MUX_rg_state$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2593 ;
  assign MUX_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ;
  assign MUX_rg_inum$write_1__VAL_1 = rg_inum + 64'd1 ;
  assign MUX_stage1_rg_full$write_1__VAL_11 =
	     (!rg_halt && !csr_regfile$interrupt_pending[5] &&
	      (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2595 ||
	       !stage1_rg_full)) ?
	       NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d2618 :
	       rg_halt_478_OR_csr_regfile_interrupt_pending_r_ETC___d2624 &&
	       stage1_rg_full ;
  assign MUX_stage2_rg_full$write_1__VAL_3 =
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2607 ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd2 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ;

  // register cfg_logdelay
  assign cfg_logdelay$D_IN = 64'h0 ;
  assign cfg_logdelay$EN = 1'b0 ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN =
	     TASK_testplusargs___d2368 ?
	       4'd2 :
	       (TASK_testplusargs___d2369 ? 4'd1 : 4'd0) ;
  assign cfg_verbosity$EN = CAN_FIRE_RL_rl_reset_start ;

  // register rg_cur_priv
  always@(MUX_rg_cur_priv$write_1__SEL_1 or
	  csr_regfile$csr_trap_actions or
	  WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or WILL_FIRE_RL_rl_reset_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_cur_priv$write_1__SEL_1:
	  rg_cur_priv$D_IN = csr_regfile$csr_trap_actions[1:0];
      WILL_FIRE_RL_rl_stage1_xRET:
	  rg_cur_priv$D_IN = csr_regfile$csr_ret_actions[65:64];
      WILL_FIRE_RL_rl_reset_start: rg_cur_priv$D_IN = 2'b11;
      default: rg_cur_priv$D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign rg_cur_priv$EN =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_halt
  assign rg_halt$D_IN = 1'd0 ;
  assign rg_halt$EN = CAN_FIRE_RL_rl_reset_start ;

  // register rg_inum
  always@(MUX_rg_inum$write_1__SEL_1 or
	  MUX_rg_inum$write_1__VAL_1 or
	  MUX_rg_inum$write_1__SEL_2 or WILL_FIRE_RL_rl_reset_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_inum$write_1__SEL_1: rg_inum$D_IN = MUX_rg_inum$write_1__VAL_1;
      MUX_rg_inum$write_1__SEL_2: rg_inum$D_IN = MUX_rg_inum$write_1__VAL_1;
      WILL_FIRE_RL_rl_reset_start: rg_inum$D_IN = 64'd1;
      default: rg_inum$D_IN = 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rg_inum$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_start_CPI_cycles
  assign rg_start_CPI_cycles$D_IN = csr_regfile$read_csr_mcycle ;
  assign rg_start_CPI_cycles$EN = CAN_FIRE_RL_rl_reset_complete ;

  // register rg_start_CPI_instrs
  assign rg_start_CPI_instrs$D_IN = csr_regfile$read_csr_minstret ;
  assign rg_start_CPI_instrs$EN = CAN_FIRE_RL_rl_reset_complete ;

  // register rg_state
  always@(MUX_rg_state$write_1__SEL_1 or
	  WILL_FIRE_RL_rl_reset_from_WFI or
	  WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_state$write_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_FENCE_I or
	  WILL_FIRE_RL_rl_stage1_FENCE or
	  WILL_FIRE_RL_rl_stage1_SFENCE_VMA or WILL_FIRE_RL_rl_stage1_WFI)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_state$write_1__SEL_1: rg_state$D_IN = 3'd3;
      WILL_FIRE_RL_rl_reset_from_WFI: rg_state$D_IN = 3'd0;
      WILL_FIRE_RL_rl_reset_start: rg_state$D_IN = 3'd1;
      MUX_rg_state$write_1__SEL_4: rg_state$D_IN = 3'd2;
      WILL_FIRE_RL_rl_stage1_FENCE_I: rg_state$D_IN = 3'd4;
      WILL_FIRE_RL_rl_stage1_FENCE: rg_state$D_IN = 3'd5;
      WILL_FIRE_RL_rl_stage1_SFENCE_VMA: rg_state$D_IN = 3'd6;
      WILL_FIRE_RL_rl_stage1_WFI: rg_state$D_IN = 3'd7;
      default: rg_state$D_IN = 3'b010 /* unspecified value */ ;
    endcase
  end
  assign rg_state$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2593 ||
	     WILL_FIRE_RL_rl_reset_from_WFI ||
	     WILL_FIRE_RL_rl_reset_start ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ||
	     WILL_FIRE_RL_rl_stage1_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_FENCE ||
	     WILL_FIRE_RL_rl_stage1_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_stage1_WFI ;

  // register stage1_rg_ddc
  assign stage1_rg_ddc$D_IN =
	     { alu_outputs_val2_tag__h34157,
	       alu_outputs_val2_capability__h34158 } ;
  assign stage1_rg_ddc$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541 &&
	     near_mem$imem_instr[6:0] == 7'b1011011 &&
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2553 &&
	     alu_outputs_addr_capability__h26587[4:0] == 5'd1 ;

  // register stage1_rg_full
  always@(WILL_FIRE_RL_stage1_rl_reset or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  WILL_FIRE_RL_rl_stage1_trap or
	  WILL_FIRE_RL_rl_WFI_resume or
	  WILL_FIRE_RL_rl_finish_SFENCE_VMA or
	  WILL_FIRE_RL_rl_finish_FENCE or
	  WILL_FIRE_RL_rl_finish_FENCE_I or
	  WILL_FIRE_RL_rl_stage1_xRET or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  WILL_FIRE_RL_rl_stage1_restart_after_csrrx or
	  WILL_FIRE_RL_rl_pipe or
	  MUX_stage1_rg_full$write_1__VAL_11 or
	  WILL_FIRE_RL_rl_reset_complete)
  case (1'b1)
    WILL_FIRE_RL_stage1_rl_reset: stage1_rg_full$D_IN = 1'd0;
    WILL_FIRE_RL_rl_stage1_interrupt || WILL_FIRE_RL_rl_stage1_trap ||
    WILL_FIRE_RL_rl_WFI_resume ||
    WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
    WILL_FIRE_RL_rl_finish_FENCE ||
    WILL_FIRE_RL_rl_finish_FENCE_I ||
    WILL_FIRE_RL_rl_stage1_xRET ||
    WILL_FIRE_RL_rl_stage2_nonpipe ||
    WILL_FIRE_RL_rl_stage1_restart_after_csrrx:
	stage1_rg_full$D_IN = 1'd1;
    WILL_FIRE_RL_rl_pipe:
	stage1_rg_full$D_IN = MUX_stage1_rg_full$write_1__VAL_11;
    WILL_FIRE_RL_rl_reset_complete: stage1_rg_full$D_IN = 1'd1;
    default: stage1_rg_full$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign stage1_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_stage1_rl_reset ||
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_reset_complete ;

  // register stage1_rg_run_state
  assign stage1_rg_run_state$D_IN = 1'd1 ;
  assign stage1_rg_run_state$EN = CAN_FIRE_RL_stage1_rl_reset ;

  // register stage2_rg_f5
  assign stage2_rg_f5$D_IN = 5'h0 ;
  assign stage2_rg_f5$EN = 1'b0 ;

  // register stage2_rg_full
  assign stage2_rg_full$D_IN =
	     !WILL_FIRE_RL_stage2_rl_reset &&
	     !WILL_FIRE_RL_rl_stage2_nonpipe &&
	     MUX_stage2_rg_full$write_1__VAL_3 ;
  assign stage2_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_stage2_rl_reset ;

  // register stage2_rg_run_state
  assign stage2_rg_run_state$D_IN = 1'd1 ;
  assign stage2_rg_run_state$EN = CAN_FIRE_RL_stage2_rl_reset ;

  // register stage2_rg_stage2
  assign stage2_rg_stage2$D_IN =
	     { rg_cur_priv,
	       near_mem$imem_pc,
	       near_mem$imem_instr,
	       near_mem$imem_instr[6:0],
	       near_mem$imem_instr[11:7],
	       near_mem$imem_instr[19:15],
	       decoded_instr_rs2__h5316,
	       near_mem$imem_instr[31:27],
	       near_mem$imem_instr[31:20],
	       near_mem$imem_instr[14:12],
	       near_mem$imem_instr[31:27],
	       near_mem$imem_instr[31:25],
	       funct10__h6030,
	       near_mem$imem_instr[31:20],
	       near_mem$imem_instr[31:25],
	       near_mem$imem_instr[11:7],
	       near_mem$imem_instr[31],
	       near_mem$imem_instr[7],
	       near_mem$imem_instr[30:25],
	       near_mem$imem_instr[11:8],
	       1'b0,
	       near_mem$imem_instr[31:12],
	       near_mem$imem_instr[31],
	       near_mem$imem_instr[19:12],
	       near_mem$imem_instr[20],
	       near_mem$imem_instr[30:21],
	       1'b0,
	       near_mem$imem_instr[27:20],
	       near_mem$imem_instr[26:25],
	       IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541,
	       fv_out_data_to_stage2_rd__h5766,
	       near_mem$imem_instr[6:0] == 7'b1110011 &&
	       near_mem$imem_instr[14:12] != 3'b0 &&
	       near_mem$imem_instr[14:12] != 3'b100 &&
	       NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1599,
	       near_mem$imem_instr[6:0] == 7'b1011011 &&
	       near_mem$imem_instr[14:12] == 3'b0 &&
	       near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2553,
	       alu_outputs_addr_tag__h26586,
	       alu_outputs_addr_capability__h26587,
	       near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2033,
	       alu_outputs_val2_tag__h34157,
	       alu_outputs_val2_capability__h34158 } ;
  assign stage2_rg_stage2$EN =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541 ;

  // register stage3_rg_full
  assign stage3_rg_full$D_IN =
	     !WILL_FIRE_RL_stage3_rl_reset &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd2 ;
  assign stage3_rg_full$EN =
	     WILL_FIRE_RL_rl_pipe || WILL_FIRE_RL_stage3_rl_reset ;

  // register stage3_rg_run_state
  assign stage3_rg_run_state$D_IN = 1'd1 ;
  assign stage3_rg_run_state$EN = CAN_FIRE_RL_stage3_rl_reset ;

  // register stage3_rg_stage3
  assign stage3_rg_stage3$D_IN =
	     { stage2_rg_stage2[644:549],
	       stage2_rg_stage2[646:645],
	       stage2_rg_stage2[396:394] != 3'd3 &&
	       (stage2_rg_stage2[396:394] == 3'd0 ||
		near_mem$dmem_valid && !near_mem$dmem_exc),
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2[388],
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186,
	       stage2_rg_stage2[128:0] } ;
  assign stage3_rg_stage3$EN = MUX_rg_inum$write_1__SEL_1 ;

  // submodule csr_regfile
  assign csr_regfile$csr_counter_read_fault_csr_addr =
	     near_mem$imem_instr[31:20] ;
  assign csr_regfile$csr_counter_read_fault_priv = rg_cur_priv ;
  always@(IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440)
  begin
    case (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440)
      4'd5: csr_regfile$csr_ret_actions_from_priv = 2'b11;
      4'd6: csr_regfile$csr_ret_actions_from_priv = 2'b01;
      default: csr_regfile$csr_ret_actions_from_priv = 2'b0;
    endcase
  end
  always@(WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$interrupt_pending or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  near_mem$dmem_exc_code or
	  WILL_FIRE_RL_rl_stage1_trap or fv_out_trap_info_exc_code__h26195)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_interrupt:
	  csr_regfile$csr_trap_actions_exc_code =
	      csr_regfile$interrupt_pending[4:0];
      WILL_FIRE_RL_rl_stage2_nonpipe:
	  csr_regfile$csr_trap_actions_exc_code = near_mem$dmem_exc_code;
      WILL_FIRE_RL_rl_stage1_trap:
	  csr_regfile$csr_trap_actions_exc_code =
	      fv_out_trap_info_exc_code__h26195;
      default: csr_regfile$csr_trap_actions_exc_code =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign csr_regfile$csr_trap_actions_from_priv = rg_cur_priv ;
  assign csr_regfile$csr_trap_actions_interrupt =
	     !WILL_FIRE_RL_rl_stage2_nonpipe && !WILL_FIRE_RL_rl_stage1_trap ;
  assign csr_regfile$csr_trap_actions_pc =
	     WILL_FIRE_RL_rl_stage2_nonpipe ?
	       stage2_rg_stage2[644:581] :
	       near_mem$imem_pc ;
  always@(WILL_FIRE_RL_rl_stage1_interrupt or
	  WILL_FIRE_RL_rl_stage2_nonpipe or
	  stage2_rg_stage2 or WILL_FIRE_RL_rl_stage1_trap or value__h26439)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_interrupt:
	  csr_regfile$csr_trap_actions_xtval = 64'd0;
      WILL_FIRE_RL_rl_stage2_nonpipe:
	  csr_regfile$csr_trap_actions_xtval = stage2_rg_stage2[321:258];
      WILL_FIRE_RL_rl_stage1_trap:
	  csr_regfile$csr_trap_actions_xtval = value__h26439;
      default: csr_regfile$csr_trap_actions_xtval =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign csr_regfile$external_interrupt_req_set_not_clear =
	     external_interrupt_req_set_not_clear ;
  assign csr_regfile$interrupt_pending_cur_priv = rg_cur_priv ;
  assign csr_regfile$mav_read_csr_csr_addr = 12'h0 ;
  assign csr_regfile$read_csr_cap_csr_addr = decoded_instr_rs2__h5316 ;
  assign csr_regfile$read_csr_csr_addr = near_mem$imem_instr[31:20] ;
  assign csr_regfile$read_csr_port2_csr_addr = 12'h0 ;
  assign csr_regfile$software_interrupt_req_set_not_clear =
	     software_interrupt_req_set_not_clear ;
  assign csr_regfile$timer_interrupt_req_set_not_clear =
	     timer_interrupt_req_set_not_clear ;
  assign csr_regfile$write_csr_cap_cap_addr =
	     alu_outputs_addr_capability__h26587[4:0] ;
  assign csr_regfile$write_csr_cap_value =
	     { alu_outputs_val2_tag__h34157,
	       alu_outputs_val2_capability__h34158 } ;
  assign csr_regfile$write_csr_csr_addr =
	     alu_outputs_addr_capability__h26587[11:0] ;
  assign csr_regfile$write_csr_word =
	     alu_outputs_val2_capability__h34158[63:0] ;
  assign csr_regfile$EN_server_reset_request_put =
	     CAN_FIRE_RL_rl_reset_start ;
  assign csr_regfile$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign csr_regfile$EN_mav_read_csr = 1'b0 ;
  assign csr_regfile$EN_write_csr_cap =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541 &&
	     near_mem$imem_instr[6:0] == 7'b1011011 &&
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2553 &&
	     alu_outputs_addr_capability__h26587[4:0] != 5'd1 ;
  assign csr_regfile$EN_write_csr =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541 &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1599 ;
  assign csr_regfile$EN_csr_trap_actions =
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_trap ;
  assign csr_regfile$EN_csr_ret_actions = CAN_FIRE_RL_rl_stage1_xRET ;
  assign csr_regfile$EN_csr_minstret_incr =
	     WILL_FIRE_RL_rl_pipe && stage3_rg_full &&
	     (!stage3_rg_stage3[270] ||
	      stage3_rg_stage3[269:258] != 12'hB02 &&
	      stage3_rg_stage3[269:258] != 12'hB82) ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_xRET ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ;
  assign csr_regfile$EN_external_interrupt_req = EN_external_interrupt_req ;
  assign csr_regfile$EN_timer_interrupt_req = EN_timer_interrupt_req ;
  assign csr_regfile$EN_software_interrupt_req = EN_software_interrupt_req ;

  // submodule f_reset_reqs
  assign f_reset_reqs$ENQ = EN_hart0_server_reset_request_put ;
  assign f_reset_reqs$DEQ = 1'b0 ;
  assign f_reset_reqs$CLR = 1'b0 ;

  // submodule f_reset_rsps
  assign f_reset_rsps$ENQ = CAN_FIRE_RL_rl_reset_complete ;
  assign f_reset_rsps$DEQ = EN_hart0_server_reset_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule gpr_regfile
  assign gpr_regfile$clear_quarter_mask = 8'h0 ;
  assign gpr_regfile$clear_quarter_qid = 2'h0 ;
  assign gpr_regfile$read_rs1_port2_rs1 = 5'h0 ;
  assign gpr_regfile$read_rs1_rs1 = near_mem$imem_instr[19:15] ;
  assign gpr_regfile$read_rs2_rs2 = decoded_instr_rs2__h5316 ;
  assign gpr_regfile$write_rd_int_rd = 5'h0 ;
  assign gpr_regfile$write_rd_int_rd_val = 64'h0 ;
  assign gpr_regfile$write_rd_rd = stage3_rg_stage3[275:271] ;
  assign gpr_regfile$write_rd_rd_val = stage3_rg_stage3[257:129] ;
  assign gpr_regfile$EN_server_reset_request_put =
	     CAN_FIRE_RL_rl_reset_start ;
  assign gpr_regfile$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign gpr_regfile$EN_write_rd =
	     WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[276] ;
  assign gpr_regfile$EN_write_rd_int = 1'b0 ;
  assign gpr_regfile$EN_clear_quarter = 1'b0 ;

  // submodule near_mem
  assign near_mem$dmem_master_arready = dmem_master_arready ;
  assign near_mem$dmem_master_awready = dmem_master_awready ;
  assign near_mem$dmem_master_bresp = dmem_master_bresp ;
  assign near_mem$dmem_master_bvalid = dmem_master_bvalid ;
  assign near_mem$dmem_master_rdata = dmem_master_rdata ;
  assign near_mem$dmem_master_rresp = dmem_master_rresp ;
  assign near_mem$dmem_master_rvalid = dmem_master_rvalid ;
  assign near_mem$dmem_master_wready = dmem_master_wready ;
  assign near_mem$dmem_req_addr = alu_outputs_addr_capability__h26587[63:0] ;
  assign near_mem$dmem_req_f3 = near_mem$imem_instr[14:12] ;
  assign near_mem$dmem_req_mstatus_MXR = csr_regfile$read_mstatus[19] ;
  assign near_mem$dmem_req_op =
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 !=
	     3'd1 ;
  assign near_mem$dmem_req_priv =
	     csr_regfile$read_mstatus[17] ?
	       csr_regfile$read_mstatus[12:11] :
	       rg_cur_priv ;
  assign near_mem$dmem_req_satp = csr_regfile$read_satp ;
  assign near_mem$dmem_req_sstatus_SUM = csr_regfile$read_sstatus[18] ;
  assign near_mem$dmem_req_store_value =
	     alu_outputs_val2_capability__h34158[63:0] ;
  assign near_mem$imem_master_arready = imem_master_arready ;
  assign near_mem$imem_master_awready = imem_master_awready ;
  assign near_mem$imem_master_bresp = imem_master_bresp ;
  assign near_mem$imem_master_bvalid = imem_master_bvalid ;
  assign near_mem$imem_master_rdata = imem_master_rdata ;
  assign near_mem$imem_master_rresp = imem_master_rresp ;
  assign near_mem$imem_master_rvalid = imem_master_rvalid ;
  assign near_mem$imem_master_wready = imem_master_wready ;
  always@(WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or
	  MUX_near_mem$imem_req_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$csr_trap_actions or
	  WILL_FIRE_RL_rl_reset_complete or
	  pc_reset_value or
	  MUX_near_mem$imem_req_1__SEL_1 or
	  fv_out_next_pc__h5702 or MUX_near_mem$imem_req_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_xRET:
	  near_mem$imem_req_addr = csr_regfile$csr_ret_actions[129:66];
      MUX_near_mem$imem_req_1__SEL_4 || WILL_FIRE_RL_rl_stage1_interrupt:
	  near_mem$imem_req_addr = csr_regfile$csr_trap_actions[193:130];
      WILL_FIRE_RL_rl_reset_complete: near_mem$imem_req_addr = pc_reset_value;
      MUX_near_mem$imem_req_1__SEL_1:
	  near_mem$imem_req_addr = fv_out_next_pc__h5702;
      MUX_near_mem$imem_req_1__SEL_3:
	  near_mem$imem_req_addr = fv_out_next_pc__h5702;
      default: near_mem$imem_req_addr =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign near_mem$imem_req_f3 = 3'b010 ;
  assign near_mem$imem_req_mstatus_MXR =
	     (MUX_near_mem$imem_req_1__SEL_1 ||
	      WILL_FIRE_RL_rl_reset_complete ||
	      MUX_near_mem$imem_req_1__SEL_3 ||
	      MUX_near_mem$imem_req_1__SEL_4 ||
	      WILL_FIRE_RL_rl_stage1_xRET) ?
	       csr_regfile$read_mstatus[19] :
	       csr_regfile$csr_trap_actions[85] ;
  always@(WILL_FIRE_RL_rl_stage1_xRET or
	  csr_regfile$csr_ret_actions or
	  MUX_near_mem$imem_req_1__SEL_4 or
	  WILL_FIRE_RL_rl_stage1_interrupt or
	  csr_regfile$csr_trap_actions or
	  MUX_near_mem$imem_req_1__SEL_1 or
	  WILL_FIRE_RL_rl_reset_complete or
	  MUX_near_mem$imem_req_1__SEL_3 or rg_cur_priv)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_stage1_xRET:
	  near_mem$imem_req_priv = csr_regfile$csr_ret_actions[65:64];
      MUX_near_mem$imem_req_1__SEL_4 || WILL_FIRE_RL_rl_stage1_interrupt:
	  near_mem$imem_req_priv = csr_regfile$csr_trap_actions[1:0];
      MUX_near_mem$imem_req_1__SEL_1 || WILL_FIRE_RL_rl_reset_complete ||
      MUX_near_mem$imem_req_1__SEL_3:
	  near_mem$imem_req_priv = rg_cur_priv;
      default: near_mem$imem_req_priv = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign near_mem$imem_req_satp = csr_regfile$read_satp ;
  assign near_mem$imem_req_sstatus_SUM =
	     (MUX_near_mem$imem_req_1__SEL_1 ||
	      WILL_FIRE_RL_rl_reset_complete ||
	      MUX_near_mem$imem_req_1__SEL_3 ||
	      MUX_near_mem$imem_req_1__SEL_4 ||
	      WILL_FIRE_RL_rl_stage1_xRET) ?
	       csr_regfile$read_sstatus[18] :
	       csr_regfile$csr_trap_actions[84] ;
  assign near_mem$imem_req_trap = !MUX_near_mem$imem_req_1__SEL_1 ;
  assign near_mem$near_mem_slave_araddr = near_mem_slave_araddr ;
  assign near_mem$near_mem_slave_arprot = near_mem_slave_arprot ;
  assign near_mem$near_mem_slave_arvalid = near_mem_slave_arvalid ;
  assign near_mem$near_mem_slave_awaddr = near_mem_slave_awaddr ;
  assign near_mem$near_mem_slave_awprot = near_mem_slave_awprot ;
  assign near_mem$near_mem_slave_awvalid = near_mem_slave_awvalid ;
  assign near_mem$near_mem_slave_bready = near_mem_slave_bready ;
  assign near_mem$near_mem_slave_rready = near_mem_slave_rready ;
  assign near_mem$near_mem_slave_wdata = near_mem_slave_wdata ;
  assign near_mem$near_mem_slave_wstrb = near_mem_slave_wstrb ;
  assign near_mem$near_mem_slave_wvalid = near_mem_slave_wvalid ;
  assign near_mem$server_fence_request_put =
	     8'b10101010 /* unspecified value */  ;
  assign near_mem$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_start ;
  assign near_mem$EN_server_reset_response_get =
	     CAN_FIRE_RL_rl_reset_complete ;
  assign near_mem$EN_imem_req =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2602 ||
	     WILL_FIRE_RL_rl_reset_complete ||
	     WILL_FIRE_RL_rl_WFI_resume ||
	     WILL_FIRE_RL_rl_finish_SFENCE_VMA ||
	     WILL_FIRE_RL_rl_finish_FENCE ||
	     WILL_FIRE_RL_rl_finish_FENCE_I ||
	     WILL_FIRE_RL_rl_stage1_restart_after_csrrx ||
	     WILL_FIRE_RL_rl_stage1_trap ||
	     WILL_FIRE_RL_rl_stage2_nonpipe ||
	     WILL_FIRE_RL_rl_stage1_interrupt ||
	     WILL_FIRE_RL_rl_stage1_xRET ;
  assign near_mem$EN_dmem_req =
	     WILL_FIRE_RL_rl_pipe &&
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541 &&
	     (IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 ==
	      3'd1 ||
	      IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 ==
	      3'd2) ;
  assign near_mem$EN_server_fence_i_request_put =
	     CAN_FIRE_RL_rl_stage1_FENCE_I ;
  assign near_mem$EN_server_fence_i_response_get =
	     CAN_FIRE_RL_rl_finish_FENCE_I ;
  assign near_mem$EN_server_fence_request_put = CAN_FIRE_RL_rl_stage1_FENCE ;
  assign near_mem$EN_server_fence_response_get = CAN_FIRE_RL_rl_finish_FENCE ;
  assign near_mem$EN_sfence_vma = CAN_FIRE_RL_rl_stage1_SFENCE_VMA ;

  // submodule stage1_f_reset_reqs
  assign stage1_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage1_f_reset_reqs$DEQ = CAN_FIRE_RL_stage1_rl_reset ;
  assign stage1_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage1_f_reset_rsps
  assign stage1_f_reset_rsps$ENQ = CAN_FIRE_RL_stage1_rl_reset ;
  assign stage1_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage1_f_reset_rsps$CLR = 1'b0 ;

  // submodule stage2_f_reset_reqs
  assign stage2_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage2_f_reset_reqs$DEQ = CAN_FIRE_RL_stage2_rl_reset ;
  assign stage2_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage2_f_reset_rsps
  assign stage2_f_reset_rsps$ENQ = CAN_FIRE_RL_stage2_rl_reset ;
  assign stage2_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage2_f_reset_rsps$CLR = 1'b0 ;

  // submodule stage3_f_reset_reqs
  assign stage3_f_reset_reqs$ENQ = CAN_FIRE_RL_rl_reset_start ;
  assign stage3_f_reset_reqs$DEQ = CAN_FIRE_RL_stage3_rl_reset ;
  assign stage3_f_reset_reqs$CLR = 1'b0 ;

  // submodule stage3_f_reset_rsps
  assign stage3_f_reset_rsps$ENQ = CAN_FIRE_RL_stage3_rl_reset ;
  assign stage3_f_reset_rsps$DEQ = CAN_FIRE_RL_rl_reset_complete ;
  assign stage3_f_reset_rsps$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1401 =
	     rs2_val_bypassed_capability__h7772[104] ?
	       ((!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d773 ||
		 _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d791) ?
		  4'd9 :
		  4'd0) :
	       4'd0 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2201 =
	     rs2_val_bypassed_capability__h7772[104] ?
	       5'd21 :
	       (IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d580 ?
		  (b_capability__h7770[122] ? 5'd16 : 5'd20) :
		  5'd24) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2214 =
	     rs2_val_bypassed_capability__h7772[104] ?
	       ((!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d773 ||
		 _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d791) ?
		  5'd19 :
		  5'd2) :
	       5'd2 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2237 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2226 ?
	       ((rs1_cap__h6403[114] ||
		 !rs2_val_bypassed_capability__h7772[114]) ?
		  5'd20 :
		  IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2235) :
	       5'd24 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2251 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2226 ?
	       ((rs1_cap__h6403[114] ||
		 !rs2_val_bypassed_capability__h7772[114]) ?
		  5'd20 :
		  IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2249) :
	       5'd24 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2262 =
	     controller_capability__h13550[104] ?
	       5'd21 :
	       ((decoded_instr_rs2__h5316[3:2] == 2'b11) ?
		  5'd2 :
		  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2260) ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d531 =
	     t__h7962 < r__h8050 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d547 =
	     b__h7963 < r__h8050 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d884 =
	     t__h13861 < r__h13949 ;
  assign IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d899 =
	     b__h13862 < r__h13949 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2187 =
	     rs1_cap__h6403[104] ?
	       5'd21 :
	       ((near_mem$imem_instr[19:15] == 5'd0 ||
		 IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
		  5'd18 :
		  5'd16) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2196 =
	     (rs1_cap__h6403[104] ||
	      rs2_val_bypassed_capability__h7772[104]) ?
	       5'd21 :
	       (b_capability__h7770[120] ?
		  IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2194 :
		  5'd20) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2246 =
	     rs1_cap__h6403[104] ?
	       5'd21 :
	       ((x__h9232 == b_capability__h6734[23:0]) ?
		  (b_capability__h6734[122] ? 5'd16 : 5'd20) :
		  5'd24) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d760 =
	     t__h9301 < r__h9387 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d778 =
	     b__h9302 < r__h9387 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1127 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d544 &&
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d560 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d562 &&
	     rs1_cap__h6403[95:84] == 12'd0 &&
	     rs1_cap__h6403[75:64] == 12'd0 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
	       stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1290 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265 &&
	     !controller_capability__h13550[104] &&
	     decoded_instr_rs2__h5316[3:2] != 2'b11 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1287 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1993 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	      rs2_val_bypassed_capability__h7772[63:0] ==
	      64'hFFFFFFFFFFFFFFFF) ?
	       rs1_cap__h6403 :
	       { b_capability__h6734[127:105],
		 1'b1,
		 rs1_cap__h6403[103:96],
		 b_capability__h7770[23:12],
		 rs1_cap__h6403[83:76],
		 b_capability__h7770[11:0],
		 rs1_cap__h6403[63:0] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2226 =
	     x__h9232 == { rs1_cap__h6403[95:84], rs1_cap__h6403[75:64] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2430 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 :
	       stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d526 =
	     aMid__h8049 < r__h8050 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d544 =
	     x__h7899 <= upperbits965_PLUS_lowerbits966__q20[63:0] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d553 =
	     b__h8325 +
	     ((IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d526 &&
	       !IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d547) ?
		2'd3 :
		((IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d547 &&
		  !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d526) ?
		   2'd1 :
		   2'd0)) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d560 =
	     rs2_val_bypassed_capability__h7772[63:0] <
	     result312_PLUS_b_val313__q21[63:0] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d562 =
	     rs2_val_bypassed_capability__h7772[63:0] <=
	     64'h0000000000FFFFFF ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d601 =
	     rs2_val_bypassed_capability__h7772[63:0] |
	     { 1'd0, rs2_val_bypassed_capability__h7772[63:1] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d604 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d601 |
	     { 2'd0,
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d601[63:2] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d607 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d604 |
	     { 4'd0,
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d604[63:4] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d610 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d607 |
	     { 8'd0,
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d607[63:8] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d613 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d610 |
	     { 16'd0,
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d610[63:16] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d613 |
	     { 32'd0,
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d613[63:32] } ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d847 =
	     decoded_instr_rs2__h5316[4] ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 :
	       !stage1_rg_ddc[128] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d879 =
	     aMid__h13948 < r__h13949 ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d897 =
	     x__h13797 <= upperbits3864_PLUS_lowerbits3865__q25[63:0] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d905 =
	     b__h14224 +
	     ((IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d879 &&
	       !IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d899) ?
		2'd3 :
		((IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d899 &&
		  !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d879) ?
		   2'd1 :
		   2'd0)) ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912 =
	     controller_capability__h13550[63:0] <
	     result4211_PLUS_b_val4212__q24[63:0] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d918 =
	     x__h14511 <= upperbits3864_PLUS_lowerbits3865__q25[63:0] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 =
	     x__h15225 <= upperbits3864_PLUS_lowerbits3865__q25[63:0] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d932 =
	     x__h15939 <= upperbits3864_PLUS_lowerbits3865__q25[63:0] ;
  assign IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d847 ||
	     controller_capability__h13550[104] ||
	     decoded_instr_rs2__h5316[3:2] == 2'b11 ||
	     (!decoded_instr_rs2__h5316[3] ||
	      decoded_instr_rs2__h5316[2:0] == 3'b101) &&
	     (!controller_capability__h13550[117] ||
	      !controller_capability__h13550[116]) ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d935 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1249 =
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7772[104] &&
	     b_capability__h7770[120] &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1127 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1404 =
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7772[104] &&
	     b_capability__h7770[120] &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1127 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2399 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2397 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2400 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2397 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2399 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2405 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2403 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2403 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2405 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2410 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2408 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2411 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2408 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2410 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2423 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2421 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2424 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2421 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2423 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2427 =
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2411 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7772[104] &&
	     b_capability__h7770[120] &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1127 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_capability__h4621 :
	       b_capability__h6722 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_capability__h4621 :
	       b_capability__h7758 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d445 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d495 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d487 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d487 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d495 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d504 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d502 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
	       IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 ||
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d502 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d504 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d806 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd2 &&
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ?
	       x_out_bypass_rd_val_tag__h4620 :
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d804 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       (!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 ||
		!IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) &&
	       IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d804 :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d806 ;
  assign IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d812 =
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     rs1_cap__h6403[104] ||
	     rs2_val_bypassed_capability__h7772[104] ||
	     !b_capability__h7770[120] ||
	     NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d572 ;
  assign IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d1982 =
	     (!rs2_val_bypassed_capability__h7772[63] &&
	      !rs2_val_bypassed_capability__h7772[62] &&
	      !rs2_val_bypassed_capability__h7772[61] &&
	      !rs2_val_bypassed_capability__h7772[60] &&
	      !rs2_val_bypassed_capability__h7772[59] &&
	      !rs2_val_bypassed_capability__h7772[58] &&
	      !rs2_val_bypassed_capability__h7772[57] &&
	      !rs2_val_bypassed_capability__h7772[56] &&
	      !rs2_val_bypassed_capability__h7772[55] &&
	      !rs2_val_bypassed_capability__h7772[54] &&
	      !rs2_val_bypassed_capability__h7772[53] &&
	      !rs2_val_bypassed_capability__h7772[52] &&
	      !rs2_val_bypassed_capability__h7772[51] &&
	      !rs2_val_bypassed_capability__h7772[50] &&
	      !rs2_val_bypassed_capability__h7772[49] &&
	      !rs2_val_bypassed_capability__h7772[48] &&
	      !rs2_val_bypassed_capability__h7772[47] &&
	      !rs2_val_bypassed_capability__h7772[46] &&
	      !rs2_val_bypassed_capability__h7772[45] &&
	      !rs2_val_bypassed_capability__h7772[44] &&
	      !rs2_val_bypassed_capability__h7772[43] &&
	      !rs2_val_bypassed_capability__h7772[42] &&
	      !rs2_val_bypassed_capability__h7772[41] &&
	      !rs2_val_bypassed_capability__h7772[40] &&
	      !rs2_val_bypassed_capability__h7772[39] &&
	      !rs2_val_bypassed_capability__h7772[38] &&
	      !rs2_val_bypassed_capability__h7772[37] &&
	      !rs2_val_bypassed_capability__h7772[36] &&
	      !rs2_val_bypassed_capability__h7772[35] &&
	      !rs2_val_bypassed_capability__h7772[34] &&
	      !rs2_val_bypassed_capability__h7772[33] &&
	      !rs2_val_bypassed_capability__h7772[32] &&
	      !rs2_val_bypassed_capability__h7772[31] &&
	      !rs2_val_bypassed_capability__h7772[30] &&
	      !rs2_val_bypassed_capability__h7772[29] &&
	      !rs2_val_bypassed_capability__h7772[28] &&
	      !rs2_val_bypassed_capability__h7772[27] &&
	      !rs2_val_bypassed_capability__h7772[26] &&
	      !rs2_val_bypassed_capability__h7772[25] &&
	      !rs2_val_bypassed_capability__h7772[24] &&
	      !rs2_val_bypassed_capability__h7772[23] &&
	      !rs2_val_bypassed_capability__h7772[22] &&
	      !rs2_val_bypassed_capability__h7772[21] &&
	      !rs2_val_bypassed_capability__h7772[20] &&
	      !rs2_val_bypassed_capability__h7772[19] &&
	      !rs2_val_bypassed_capability__h7772[18] &&
	      !rs2_val_bypassed_capability__h7772[17] &&
	      !rs2_val_bypassed_capability__h7772[16] &&
	      !rs2_val_bypassed_capability__h7772[15] &&
	      !rs2_val_bypassed_capability__h7772[14] &&
	      !rs2_val_bypassed_capability__h7772[13]) ?
	       { x__h27902[11:0], out_bounds_baseBits__h27911 } :
	       { x__h27902[11:3],
		 x__h28180[5:3],
		 out_bounds_baseBits__h27911[13:3],
		 x__h28180[2:0] } ;
  assign IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2194 =
	     (!IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d544 ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d560 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d562) ?
	       5'd19 :
	       ((rs1_cap__h6403[95:84] != 12'd0 ||
		 rs1_cap__h6403[75:64] != 12'd0) ?
		  5'd23 :
		  5'd16) ;
  assign IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2235 =
	     (x__h11668 > upperbits965_PLUS_lowerbits966__q20[63:0] ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d560) ?
	       5'd19 :
	       5'd26 ;
  assign IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d2249 =
	     (x__h11668 > upperbits965_PLUS_lowerbits966__q20[63:0] ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d560) ?
	       5'd19 :
	       out__h13296 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1408 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d838 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       4'd9 :
	       4'd0 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2006 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d838 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       { 125'd0, x__h34032 } :
	       ccsr_val_capability__h27709 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2220 =
	     (NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d838 ||
	      decoded_instr_rs2__h5316 == 5'b0 &&
	      near_mem$imem_instr[19:15] != 5'd0) ?
	       alu_outputs___1_exc_code__h25938 :
	       5'd2 ;
  assign IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2260 =
	     ((!decoded_instr_rs2__h5316[3] ||
	       decoded_instr_rs2__h5316[2:0] == 3'b101) &&
	      (!controller_capability__h13550[117] ||
	       !controller_capability__h13550[116])) ?
	       5'd20 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d935 ?
		  5'd19 :
		  5'd16) ;
  assign IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1349 =
	     NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 ?
	       4'd9 :
	       4'd0 ;
  assign IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 =
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ?
	       4'd9 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1438 ;
  assign IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2668 =
	     near_mem$imem_pc == csr_regfile$csr_trap_actions[193:130] ;
  assign IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100 =
	     csr_regfile$read_misa[20] ?
	       (csr_regfile$read_misa[13] ?
		  _theResult_____4__h34301 :
		  csr_val___2__h34385) :
	       csr_val___2__h34385 ;
  assign IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2117 =
	     { IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[31:13],
	       spliced_bits__h34356,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[10:9],
	       IF_csr_regfileread_misa_BIT_18_THEN_spp4305_E_ETC__q39[0],
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[7:0] } ;
  assign IF_csr_regfileread_misa_BIT_18_THEN_spp4305_E_ETC__q39 =
	     csr_regfile$read_misa[18] ? spp__h34305 : 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1385 =
	     near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_3_ETC___d1360 ?
	       4'd4 :
	       ((near_mem$imem_instr[11:7] == 5'd0 &&
		 near_mem$imem_instr[19:15] == 5'd0) ?
		  IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1383 :
		  4'd9) ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1310 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	       !rs1_cap__h6403[104] :
	       near_mem$imem_instr[14:12] == 3'b010 ||
	       near_mem$imem_instr[14:12] == 3'b0 &&
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1387 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       IF_near_mem_imem_instr__20_BITS_11_TO_7_28_EQ__ETC___d1385 :
	       ((near_mem$imem_instr[14:12] == 3'b100 ||
		 near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426) ?
		  4'd9 :
		  4'd0) ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2331 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	       !rs1_cap__h6403[104] :
	       near_mem$imem_instr[14:12] != 3'b0 ||
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2448 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2400 ||
	       !rs1_cap__h6403[104] :
	       near_mem$imem_instr[14:12] == 3'b010 ||
	       near_mem$imem_instr[14:12] == 3'b0 &&
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 ;
  assign IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d962 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	       rs1_cap__h6403[104] :
	       near_mem$imem_instr[14:12] != 3'b010 &&
	       (near_mem$imem_instr[14:12] != 3'b0 ||
		IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1011 =
	     aMid__h6856 < r__h9387 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1021 =
	     x__h6454 <= upperbits772_PLUS_lowerbits305__q29[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1028 =
	     b__h7132 +
	     ((IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1011 &&
	       !IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d778) ?
		2'd3 :
		((IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d778 &&
		  !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1011) ?
		   2'd1 :
		   2'd0)) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1033 =
	     rs1_cap__h6403[63:0] < result119_PLUS_b_val647__q30[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1133 =
	     rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7772[104] &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d580 &&
	     b_capability__h7770[122] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1139 =
	     (rs1_cap__h6403[63:0] &
	      { 10'd0,
		IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:10] }) ==
	     64'd0 &&
	     (top__h18246 & lmaskLo__h18257) == 66'd0 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1021 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1033 &&
	     rs1_cap__h6403[114] &&
	     !rs1_cap__h6403[104] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1399 =
	     near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d733 ?
	       4'd9 :
	       4'd0 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1402 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      rs1_cap__h6403[104]) ?
	       4'd9 :
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d1401 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1407 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       4'd9 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1405 ?
		  4'd0 :
		  4'd9) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1702 =
	     (rs1_cap__h6403[63:0] &
	      { 10'd0,
		IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:10] }) ==
	     64'd0 ||
	     !rs2_val_bypassed_capability__h7772[63] &&
	     !rs2_val_bypassed_capability__h7772[62] &&
	     !rs2_val_bypassed_capability__h7772[61] &&
	     !rs2_val_bypassed_capability__h7772[60] &&
	     !rs2_val_bypassed_capability__h7772[59] &&
	     !rs2_val_bypassed_capability__h7772[58] &&
	     !rs2_val_bypassed_capability__h7772[57] &&
	     !rs2_val_bypassed_capability__h7772[56] &&
	     !rs2_val_bypassed_capability__h7772[55] &&
	     !rs2_val_bypassed_capability__h7772[54] &&
	     !rs2_val_bypassed_capability__h7772[53] &&
	     !rs2_val_bypassed_capability__h7772[52] &&
	     !rs2_val_bypassed_capability__h7772[51] &&
	     !rs2_val_bypassed_capability__h7772[50] &&
	     !rs2_val_bypassed_capability__h7772[49] &&
	     !rs2_val_bypassed_capability__h7772[48] &&
	     !rs2_val_bypassed_capability__h7772[47] &&
	     !rs2_val_bypassed_capability__h7772[46] &&
	     !rs2_val_bypassed_capability__h7772[45] &&
	     !rs2_val_bypassed_capability__h7772[44] &&
	     !rs2_val_bypassed_capability__h7772[43] &&
	     !rs2_val_bypassed_capability__h7772[42] &&
	     !rs2_val_bypassed_capability__h7772[41] &&
	     !rs2_val_bypassed_capability__h7772[40] &&
	     !rs2_val_bypassed_capability__h7772[39] &&
	     !rs2_val_bypassed_capability__h7772[38] &&
	     !rs2_val_bypassed_capability__h7772[37] &&
	     !rs2_val_bypassed_capability__h7772[36] &&
	     !rs2_val_bypassed_capability__h7772[35] &&
	     !rs2_val_bypassed_capability__h7772[34] &&
	     !rs2_val_bypassed_capability__h7772[33] &&
	     !rs2_val_bypassed_capability__h7772[32] &&
	     !rs2_val_bypassed_capability__h7772[31] &&
	     !rs2_val_bypassed_capability__h7772[30] &&
	     !rs2_val_bypassed_capability__h7772[29] &&
	     !rs2_val_bypassed_capability__h7772[28] &&
	     !rs2_val_bypassed_capability__h7772[27] &&
	     !rs2_val_bypassed_capability__h7772[26] &&
	     !rs2_val_bypassed_capability__h7772[25] &&
	     !rs2_val_bypassed_capability__h7772[24] &&
	     !rs2_val_bypassed_capability__h7772[23] &&
	     !rs2_val_bypassed_capability__h7772[22] &&
	     !rs2_val_bypassed_capability__h7772[21] &&
	     !rs2_val_bypassed_capability__h7772[20] &&
	     !rs2_val_bypassed_capability__h7772[19] &&
	     !rs2_val_bypassed_capability__h7772[18] &&
	     !rs2_val_bypassed_capability__h7772[17] &&
	     !rs2_val_bypassed_capability__h7772[16] &&
	     !rs2_val_bypassed_capability__h7772[15] &&
	     !rs2_val_bypassed_capability__h7772[14] &&
	     !rs2_val_bypassed_capability__h7772[13] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2206 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (rs1_cap__h6403[104] ? 5'd21 : 5'd2) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2212 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (rs1_cap__h6403[104] ? 5'd21 : _theResult___exc_code__h25857) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2216 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (rs1_cap__h6403[104] ?
		  5'd21 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2214) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2218 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1405 ?
		  5'd2 :
		  check__h7491) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2239 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505) ?
	       5'd18 :
	       ((!rs1_cap__h6403[104] ||
		 !rs2_val_bypassed_capability__h7772[104]) ?
		  5'd22 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2237) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2253 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505) ?
	       5'd18 :
	       ((!rs1_cap__h6403[104] ||
		 !rs2_val_bypassed_capability__h7772[104]) ?
		  5'd22 :
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2251) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2462 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1021 &&
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1033 &&
	     rs1_cap__h6403[114] &&
	     !rs1_cap__h6403[104] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 =
	     rs1_cap__h6403[63:0] ==
	     rs2_val_bypassed_capability__h7772[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350 =
	     (rs1_cap__h6403[63:0] ^ 64'h8000000000000000) <
	     (rs2_val_bypassed_capability__h7772[63:0] ^
	      64'h8000000000000000) ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 =
	     rs1_cap__h6403[63:0] < rs2_val_bypassed_capability__h7772[63:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d580 =
	     { rs1_cap__h6403[95:84], rs1_cap__h6403[75:64] } ==
	     b_capability__h7770[23:0] ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d595 =
	     rs1_cap__h6403[104] && near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     rs2_val_bypassed_capability__h7772[63:0] != 64'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d784 =
	     b__h9659 +
	     ((_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d755 &&
	       !IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d778) ?
		2'd3 :
		((IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d778 &&
		  !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d755) ?
		   2'd1 :
		   2'd0)) ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1296 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1262 &&
	       (decoded_instr_rs2__h5316 != 5'b0 ||
		near_mem$imem_instr[19:15] == 5'd0) :
	       near_mem$imem_instr[31:25] == 7'b0 &&
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1290 &&
	       (!decoded_instr_rs2__h5316[3] ||
		decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		!decoded_instr_rs2__h5316[2] ||
		decoded_instr_rs2__h5316[1:0] == 2'b0) ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1621 =
	     (near_mem$imem_instr[31:25] == 7'b1111110) ?
	       decoded_instr_rs2__h5316 != 5'b0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 :
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1732 =
	     (near_mem$imem_instr[31:25] == 7'b0010011) ?
	       rs2_val_bypassed_capability__h7772[63:0] != 64'b0 &&
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1730 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2343 =
	     (near_mem$imem_instr[31:25] == 7'b1111111) ?
	       decoded_instr_rs2__h5316 == 5'b01100 &&
	       IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332 :
	       near_mem$imem_instr[31:25] == 7'b1111110 &&
	       near_mem$imem_instr[24:20] == 5'h01 &&
	       rs2_val_bypassed_capability__h7772[1:0] != 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2434 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1262 &&
	       (decoded_instr_rs2__h5316 != 5'b0 ||
		near_mem$imem_instr[19:15] == 5'd0) :
	       near_mem$imem_instr[31:25] == 7'b0 &&
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d2430 &&
	       !controller_capability__h13550[104] &&
	       decoded_instr_rs2__h5316[3:2] != 2'b11 &&
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1287 ;
  assign IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d948 =
	     (near_mem$imem_instr[31:25] == 7'b0000001) ?
	       NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d838 ||
	       decoded_instr_rs2__h5316 == 5'b0 &&
	       near_mem$imem_instr[19:15] != 5'd0 :
	       near_mem$imem_instr[31:25] != 7'b0 ||
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939 ||
	       decoded_instr_rs2__h5316[3] &&
	       decoded_instr_rs2__h5316[2:0] != 3'b101 &&
	       decoded_instr_rs2__h5316[2] &&
	       decoded_instr_rs2__h5316[1:0] != 2'b0 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1250 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     rs2_val_bypassed_capability__h7772[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1249 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1262 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      (decoded_instr_rs2__h5316[4:2] == 3'b001 ||
	       decoded_instr_rs2__h5316[4:2] == 3'b011 ||
	       decoded_instr_rs2__h5316[4:2] == 3'b111) &&
	      decoded_instr_rs2__h5316[1:0] != 2'b01) &&
	     !rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d837 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1287 =
	     (decoded_instr_rs2__h5316[3] &&
	      decoded_instr_rs2__h5316[2:0] != 3'b101 ||
	      controller_capability__h13550[117] &&
	      controller_capability__h13550[116]) &&
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1281 &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b11 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d932 ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       (near_mem$imem_instr[14:12] == 3'b0 ||
		near_mem$imem_instr[14:12] == 3'b001 ||
		near_mem$imem_instr[14:12] == 3'b100 ||
		near_mem$imem_instr[14:12] == 3'b101 ||
		near_mem$imem_instr[14:12] == 3'b110 ||
		near_mem$imem_instr[14:12] == 3'b111) &&
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 :
	       near_mem$imem_instr[6:0] != 7'b1101111 &&
	       near_mem$imem_instr[6:0] != 7'b1100111 &&
	       ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		 near_mem$imem_instr[6:0] == 7'b0110011) &&
		(near_mem$imem_instr[14:12] == 3'b001 ||
		 near_mem$imem_instr[14:12] == 3'b101) ||
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1317) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1405 =
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     rs2_val_bypassed_capability__h7772[63:0] ==
	     64'hFFFFFFFFFFFFFFFF ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d1404 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1730 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1262 &&
	     (decoded_instr_rs2__h5316 != 5'b0 ||
	      near_mem$imem_instr[19:15] == 5'd0) &&
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      ((decoded_instr_rs2__h5316 == 5'b00001) ?
		 stage1_rg_ddc[128] :
		 csr_regfile$read_csr_cap[128])) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2031 =
	     ((near_mem$imem_instr[6:0] == 7'b0010011 ||
	       near_mem$imem_instr[6:0] == 7'b0110011) &&
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101)) ?
	       alu_outputs___1_val1_capability__h27568 :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2046 =
	     (near_mem$imem_instr[6:0] == 7'b0100011) ?
	       decoded_instr_rs2__h5316 != 5'b0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 :
	       near_mem$imem_instr[6:0] != 7'b1110011 &&
	       alu_outputs___1_val2_tag__h34142 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2350 =
	     (near_mem$imem_instr[6:0] == 7'b1110011 &&
	      near_mem$imem_instr[13:12] != 2'b0 &&
	      NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 ||
	      ((near_mem$imem_instr[6:0] == 7'b1100011) ?
		 near_mem$imem_instr[14:12] != 3'b0 &&
		 near_mem$imem_instr[14:12] != 3'b001 &&
		 near_mem$imem_instr[14:12] != 3'b100 &&
		 near_mem$imem_instr[14:12] != 3'b101 &&
		 near_mem$imem_instr[14:12] != 3'b110 &&
		 near_mem$imem_instr[14:12] != 3'b111 :
		 near_mem$imem_instr[6:0] != 7'b1101111 &&
		 near_mem$imem_instr[6:0] != 7'b1100111 &&
		 ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		    near_mem$imem_instr[14:12] != 3'b0 ||
		    near_mem$imem_instr[11:7] != 5'd0 ||
		    near_mem$imem_instr[19:15] != 5'd0 ||
		    near_mem$imem_instr[31:20] != 12'b0 &&
		    near_mem$imem_instr[31:20] != 12'b000000000001 :
		    near_mem$imem_instr[6:0] != 7'b1011011 ||
		    IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2331))) ?
	       { 32'd0, near_mem$imem_instr } :
	       (((near_mem$imem_instr[6:0] == 7'b1100011) ?
		   near_mem$imem_instr[14:12] == 3'b0 ||
		   near_mem$imem_instr[14:12] == 3'b001 ||
		   near_mem$imem_instr[14:12] == 3'b100 ||
		   near_mem$imem_instr[14:12] == 3'b101 ||
		   near_mem$imem_instr[14:12] == 3'b110 ||
		   near_mem$imem_instr[14:12] == 3'b111 :
		   near_mem$imem_instr[6:0] == 7'b1101111 ||
		   near_mem$imem_instr[6:0] == 7'b1100111 ||
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2343) ?
		  alu_outputs_addr_capability__h26587[63:0] :
		  64'b0) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       (near_mem$imem_instr[14:12] == 3'b0 ||
		near_mem$imem_instr[14:12] == 3'b001 ||
		near_mem$imem_instr[14:12] == 3'b100 ||
		near_mem$imem_instr[14:12] == 3'b101 ||
		near_mem$imem_instr[14:12] == 3'b110 ||
		near_mem$imem_instr[14:12] == 3'b111) &&
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 :
	       near_mem$imem_instr[6:0] != 7'b1101111 &&
	       near_mem$imem_instr[6:0] != 7'b1100111 &&
	       ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		 near_mem$imem_instr[6:0] == 7'b0110011) &&
		(near_mem$imem_instr[14:12] == 3'b001 ||
		 near_mem$imem_instr[14:12] == 3'b101) ||
		IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2455) ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2681 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d928 =
	     decoded_instr_rs2__h5316[1:0] == 2'b0 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d897 &&
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b01 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d918 &&
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b10 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 &&
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d935 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d928 ||
	     decoded_instr_rs2__h5316[1:0] == 2'b11 &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d932 &&
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912 ;
  assign IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 =
	     (near_mem$imem_instr[6:0] == 7'b1100011) ?
	       near_mem$imem_instr[14:12] != 3'b0 &&
	       near_mem$imem_instr[14:12] != 3'b001 &&
	       near_mem$imem_instr[14:12] != 3'b100 &&
	       near_mem$imem_instr[14:12] != 3'b101 &&
	       near_mem$imem_instr[14:12] != 3'b110 &&
	       near_mem$imem_instr[14:12] != 3'b111 ||
	       IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 :
	       near_mem$imem_instr[6:0] == 7'b1101111 ||
	       near_mem$imem_instr[6:0] == 7'b1100111 ||
	       (near_mem$imem_instr[6:0] != 7'b0010011 &&
		near_mem$imem_instr[6:0] != 7'b0110011 ||
		near_mem$imem_instr[14:12] != 3'b001 &&
		near_mem$imem_instr[14:12] != 3'b101) &&
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d969 ;
  assign IF_rg_cur_priv_9_EQ_0b11_355_OR_rg_cur_priv_9__ETC___d1381 =
	     ((rg_cur_priv == 2'b11 ||
	       rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[22]) &&
	      near_mem$imem_instr[31:20] == 12'b000100000010) ?
	       4'd6 :
	       (rg_cur_priv_9_EQ_0b11_355_OR_rg_cur_priv_9_EQ__ETC___d1379 ?
		  4'd8 :
		  4'd9) ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 =
	     stage2_rg_full ?
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 :
	       2'd0 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 =
	     stage2_rg_full ?
	       IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 :
	       2'd0 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 =
	     stage2_rg_stage2[393:389] == near_mem$imem_instr[19:15] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231 =
	     stage2_rg_stage2[393:389] == decoded_instr_rs2__h5316 ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	     2'd1 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ||
	     gpr_regfile$is_busy ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2595 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd2 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0) &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2530 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 =
	     x_out_bypass_rd_val_capability__h4621[9:8] ==
	     near_mem$imem_instr[19:18] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304 =
	     x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5[near_mem$imem_instr[17:15]] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 =
	     x_out_bypass_rd_val_capability__h4621[9:8] ==
	     decoded_instr_rs2__h5316[4:3] ;
  assign IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330 =
	     x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5[decoded_instr_rs2__h5316[2:0]] ;
  assign IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108 =
	     (stage2_rg_stage2[393:389] == 5'd0) ?
	       2'd0 :
	       ((near_mem$dmem_valid && !near_mem$dmem_exc) ? 2'd2 : 2'd1) ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       stage3_rg_stage3[256:129] :
	       gpr_regfile$read_rs1[127:0] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       stage3_rg_stage3[256:129] :
	       gpr_regfile$read_rs2[127:0] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       stage3_rg_stage3[257] :
	       gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d486 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == near_mem$imem_instr[19:15]) ?
	       !stage3_rg_stage3[257] :
	       !gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d501 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       !stage3_rg_stage3[257] :
	       !gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d803 =
	     (stage3_rg_full && stage3_rg_stage3[276] &&
	      stage3_rg_stage3[275:271] == decoded_instr_rs2__h5316) ?
	       stage3_rg_stage3[257] :
	       gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2397 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 ||
	       !gpr_regfile$read_rs1[128] :
	       !gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2403 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) &&
	       gpr_regfile$read_rs1[128] :
	       gpr_regfile$read_rs1[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2408 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) &&
	       gpr_regfile$read_rs2[128] :
	       gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d2421 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 ||
	       !gpr_regfile$read_rs2[128] :
	       !gpr_regfile$read_rs2[128] ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d440 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) &&
	       gpr_regfile$read_rs1[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d439 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d487 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 ||
	       !gpr_regfile$read_rs1[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d486 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d502 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
	       stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 ||
	       !gpr_regfile$read_rs2[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d501 ;
  assign IF_stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1_ETC___d804 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       (!stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 ||
		!stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) &&
	       gpr_regfile$read_rs2[128] :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d803 ;
  assign NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1718 =
	     result312_PLUS_b_val313__q21[63:0] >=
	     result119_PLUS_b_val647__q30[63:0] &&
	     upperbits965_PLUS_lowerbits966__q20[63:0] <=
	     upperbits772_PLUS_lowerbits305__q29[63:0] &&
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign NOT_0_CONCAT_IF_near_mem_imem_instr__20_BITS_1_ETC___d1950 =
	     (top__h18246 & lmaskLo__h18257) != 66'd0 &&
	     (rs2_val_bypassed_capability__h7772[63] ||
	      rs2_val_bypassed_capability__h7772[62] ||
	      rs2_val_bypassed_capability__h7772[61] ||
	      rs2_val_bypassed_capability__h7772[60] ||
	      rs2_val_bypassed_capability__h7772[59] ||
	      rs2_val_bypassed_capability__h7772[58] ||
	      rs2_val_bypassed_capability__h7772[57] ||
	      rs2_val_bypassed_capability__h7772[56] ||
	      rs2_val_bypassed_capability__h7772[55] ||
	      rs2_val_bypassed_capability__h7772[54] ||
	      rs2_val_bypassed_capability__h7772[53] ||
	      rs2_val_bypassed_capability__h7772[52] ||
	      rs2_val_bypassed_capability__h7772[51] ||
	      rs2_val_bypassed_capability__h7772[50] ||
	      rs2_val_bypassed_capability__h7772[49] ||
	      rs2_val_bypassed_capability__h7772[48] ||
	      rs2_val_bypassed_capability__h7772[47] ||
	      rs2_val_bypassed_capability__h7772[46] ||
	      rs2_val_bypassed_capability__h7772[45] ||
	      rs2_val_bypassed_capability__h7772[44] ||
	      rs2_val_bypassed_capability__h7772[43] ||
	      rs2_val_bypassed_capability__h7772[42] ||
	      rs2_val_bypassed_capability__h7772[41] ||
	      rs2_val_bypassed_capability__h7772[40] ||
	      rs2_val_bypassed_capability__h7772[39] ||
	      rs2_val_bypassed_capability__h7772[38] ||
	      rs2_val_bypassed_capability__h7772[37] ||
	      rs2_val_bypassed_capability__h7772[36] ||
	      rs2_val_bypassed_capability__h7772[35] ||
	      rs2_val_bypassed_capability__h7772[34] ||
	      rs2_val_bypassed_capability__h7772[33] ||
	      rs2_val_bypassed_capability__h7772[32] ||
	      rs2_val_bypassed_capability__h7772[31] ||
	      rs2_val_bypassed_capability__h7772[30] ||
	      rs2_val_bypassed_capability__h7772[29] ||
	      rs2_val_bypassed_capability__h7772[28] ||
	      rs2_val_bypassed_capability__h7772[27] ||
	      rs2_val_bypassed_capability__h7772[26] ||
	      rs2_val_bypassed_capability__h7772[25] ||
	      rs2_val_bypassed_capability__h7772[24] ||
	      rs2_val_bypassed_capability__h7772[23] ||
	      rs2_val_bypassed_capability__h7772[22] ||
	      rs2_val_bypassed_capability__h7772[21] ||
	      rs2_val_bypassed_capability__h7772[20] ||
	      rs2_val_bypassed_capability__h7772[19] ||
	      rs2_val_bypassed_capability__h7772[18] ||
	      rs2_val_bypassed_capability__h7772[17] ||
	      rs2_val_bypassed_capability__h7772[16] ||
	      rs2_val_bypassed_capability__h7772[15] ||
	      rs2_val_bypassed_capability__h7772[14] ||
	      rs2_val_bypassed_capability__h7772[13]) ;
  assign NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d572 =
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d544 ||
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d560 ||
	     !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d562 ||
	     rs1_cap__h6403[95:84] != 12'd0 ||
	     rs1_cap__h6403[75:64] != 12'd0 ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 =
	     cur_verbosity__h1374 > 4'd1 ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2516 =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     (stage2_rg_stage2[396:394] == 3'd3 ||
	      stage2_rg_stage2[396:394] != 3'd0 &&
	      (!near_mem$dmem_valid || near_mem$dmem_exc)) ;
  assign NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2518 =
	     NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	     stage2_rg_stage2[396:394] != 3'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd0 ||
	      near_mem$dmem_valid && !near_mem$dmem_exc) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1039 =
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1021 ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1033 ||
	     !rs1_cap__h6403[114] ||
	     rs1_cap__h6403[104] ||
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1137 =
	     !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     rs2_val_bypassed_capability__h7772[63:0] == 64'b0 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2303 =
	     !rs1_cap__h6403[104] &&
	     (!rs2_val_bypassed_capability__h7772[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d773 &&
	      !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d791) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d629 =
	     (rs1_cap__h6403[63:0] &
	      { 10'd0,
		IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:10] }) !=
	     64'd0 ||
	     (top__h18246 & lmaskLo__h18257) != 66'd0 ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d1281 =
	     (decoded_instr_rs2__h5316[1:0] != 2'b0 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d897 ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912) &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b01 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d918 ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912) &&
	     (decoded_instr_rs2__h5316[1:0] != 2'b10 ||
	      !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d925 ||
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d912) ;
  assign NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d838 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     decoded_instr_rs2__h5316 != 5'b00001 &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b001 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b011 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) &&
	     (decoded_instr_rs2__h5316[4:2] != 3'b111 ||
	      decoded_instr_rs2__h5316[1:0] == 2'b01) ||
	     rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d837 ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd3 ||
	      stage2_rg_stage2[396:394] != 3'd0 &&
	      (!near_mem$dmem_valid || near_mem$dmem_exc)) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176 =
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd3 &&
	     stage2_rg_stage2[396:394] != 3'd3 &&
	     (stage2_rg_stage2[396:394] == 3'd0 ||
	      near_mem$dmem_valid && !near_mem$dmem_exc) ;
  assign NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 !=
	      2'd1 ||
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 &&
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) &&
	     !gpr_regfile$is_busy ;
  assign NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 =
	     !csr_regfile$read_csr[64] ||
	     rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 ||
	     csr_regfile$csr_counter_read_fault ||
	     (near_mem$imem_instr[13:12] == 2'b01 ||
	      near_mem$imem_instr[19:15] != 5'd0) &&
	     near_mem$imem_instr[31:30] == 2'b11 ;
  assign NOT_near_mem_imem_exc__38_055_AND_IF_near_mem__ETC___d1603 =
	     !near_mem$imem_exc &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1599 ;
  assign NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 =
	     !near_mem$imem_exc &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1066) ;
  assign NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1500 =
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd3 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd4 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd5 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd6 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd7 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd8 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd9 ;
  assign NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1565 =
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 !=
	     3'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 !=
	     3'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 !=
	     3'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 !=
	     3'd3 ;
  assign NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1591 =
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      near_mem$imem_instr[14:12] == 3'b100 ||
	      near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 ||
	      ((near_mem$imem_instr[13:12] == 2'd2) ?
		 near_mem$imem_instr[19:15] == 5'd0 :
		 near_mem$imem_instr[13:12] == 2'd3 &&
		 near_mem$imem_instr[19:15] == 5'd0)) ;
  assign NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1106 =
	     near_mem$imem_instr[13:12] != 2'b0 && csr_regfile$read_csr[64] &&
	     !rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 &&
	     !csr_regfile$csr_counter_read_fault &&
	     (near_mem$imem_instr[13:12] != 2'b01 &&
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      near_mem$imem_instr[31:30] != 2'b11) &&
	     (near_mem$imem_instr[31:20] != 12'h180 ||
	      !csr_regfile$read_mstatus[20]) ;
  assign NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1599 =
	     NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1106 &&
	     ((near_mem$imem_instr[13:12] == 2'd2) ?
		near_mem$imem_instr[19:15] != 5'd0 :
		near_mem$imem_instr[13:12] != 2'd3 ||
		near_mem$imem_instr[19:15] != 5'd0) ;
  assign NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 =
	     (near_mem$imem_instr[14:12] != 3'b0 ||
	      near_mem$imem_instr[6:0] == 7'b0110011 &&
	      near_mem$imem_instr[30]) &&
	     (near_mem$imem_instr[14:12] != 3'b0 ||
	      near_mem$imem_instr[6:0] != 7'b0110011 ||
	      !near_mem$imem_instr[30]) &&
	     near_mem$imem_instr[14:12] != 3'b010 &&
	     near_mem$imem_instr[14:12] != 3'b011 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     near_mem$imem_instr[14:12] != 3'b110 &&
	     near_mem$imem_instr[14:12] != 3'b111 ;
  assign NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d984 =
	     near_mem$imem_instr[14:12] != 3'b0 &&
	     near_mem$imem_instr[14:12] != 3'b001 &&
	     near_mem$imem_instr[14:12] != 3'b100 &&
	     near_mem$imem_instr[14:12] != 3'b101 &&
	     near_mem$imem_instr[14:12] != 3'b110 &&
	     near_mem$imem_instr[14:12] != 3'b111 ||
	     IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 &&
	     branch_target__h5843[1] ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7772[104] &&
	     b_capability__h7770[120] &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1127 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1133 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1243 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     !rs1_cap__h6403[104] &&
	     NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1242 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1247 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	     !rs1_cap__h6403[104] &&
	     (!rs2_val_bypassed_capability__h7772[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d773 &&
	      !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d791) ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2414 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2411 &&
	     !rs1_cap__h6403[104] &&
	     !rs2_val_bypassed_capability__h7772[104] &&
	     b_capability__h7770[120] &&
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1127 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2415 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2411 &&
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1133 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2419 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 &&
	     !rs1_cap__h6403[104] &&
	     NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1242 ;
  assign NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2420 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 &&
	     !rs1_cap__h6403[104] &&
	     (!rs2_val_bypassed_capability__h7772[104] ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d773 &&
	      !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d791) ;
  assign NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1242 =
	     near_mem$imem_instr[31:25] != 7'b0001001 ||
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1139 ||
	     !rs2_val_bypassed_capability__h7772[63] &&
	     !rs2_val_bypassed_capability__h7772[62] &&
	     !rs2_val_bypassed_capability__h7772[61] &&
	     !rs2_val_bypassed_capability__h7772[60] &&
	     !rs2_val_bypassed_capability__h7772[59] &&
	     !rs2_val_bypassed_capability__h7772[58] &&
	     !rs2_val_bypassed_capability__h7772[57] &&
	     !rs2_val_bypassed_capability__h7772[56] &&
	     !rs2_val_bypassed_capability__h7772[55] &&
	     !rs2_val_bypassed_capability__h7772[54] &&
	     !rs2_val_bypassed_capability__h7772[53] &&
	     !rs2_val_bypassed_capability__h7772[52] &&
	     !rs2_val_bypassed_capability__h7772[51] &&
	     !rs2_val_bypassed_capability__h7772[50] &&
	     !rs2_val_bypassed_capability__h7772[49] &&
	     !rs2_val_bypassed_capability__h7772[48] &&
	     !rs2_val_bypassed_capability__h7772[47] &&
	     !rs2_val_bypassed_capability__h7772[46] &&
	     !rs2_val_bypassed_capability__h7772[45] &&
	     !rs2_val_bypassed_capability__h7772[44] &&
	     !rs2_val_bypassed_capability__h7772[43] &&
	     !rs2_val_bypassed_capability__h7772[42] &&
	     !rs2_val_bypassed_capability__h7772[41] &&
	     !rs2_val_bypassed_capability__h7772[40] &&
	     !rs2_val_bypassed_capability__h7772[39] &&
	     !rs2_val_bypassed_capability__h7772[38] &&
	     !rs2_val_bypassed_capability__h7772[37] &&
	     !rs2_val_bypassed_capability__h7772[36] &&
	     !rs2_val_bypassed_capability__h7772[35] &&
	     !rs2_val_bypassed_capability__h7772[34] &&
	     !rs2_val_bypassed_capability__h7772[33] &&
	     !rs2_val_bypassed_capability__h7772[32] &&
	     !rs2_val_bypassed_capability__h7772[31] &&
	     !rs2_val_bypassed_capability__h7772[30] &&
	     !rs2_val_bypassed_capability__h7772[29] &&
	     !rs2_val_bypassed_capability__h7772[28] &&
	     !rs2_val_bypassed_capability__h7772[27] &&
	     !rs2_val_bypassed_capability__h7772[26] &&
	     !rs2_val_bypassed_capability__h7772[25] &&
	     !rs2_val_bypassed_capability__h7772[24] &&
	     !rs2_val_bypassed_capability__h7772[23] &&
	     !rs2_val_bypassed_capability__h7772[22] &&
	     !rs2_val_bypassed_capability__h7772[21] &&
	     !rs2_val_bypassed_capability__h7772[20] &&
	     !rs2_val_bypassed_capability__h7772[19] &&
	     !rs2_val_bypassed_capability__h7772[18] &&
	     !rs2_val_bypassed_capability__h7772[17] &&
	     !rs2_val_bypassed_capability__h7772[16] &&
	     !rs2_val_bypassed_capability__h7772[15] &&
	     !rs2_val_bypassed_capability__h7772[14] &&
	     !rs2_val_bypassed_capability__h7772[13] ;
  assign NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1706 =
	     (near_mem$imem_instr[31:25] != 7'b0001001 ||
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1702 &&
	      _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1703) &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2473 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2459 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2470) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2484 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050 ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2486 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235 ||
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2598 =
	     !near_mem$imem_valid ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	     2'd1 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ;
  assign NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2599 =
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2598 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050 ;
  assign NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2489 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] ||
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2484) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2486) ;
  assign NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2532 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd2 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0) &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2530 ;
  assign NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541 =
	     NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2532 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2593 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     !stage3_rg_full &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2530 &&
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 ;
  assign NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2602 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2595 ||
	      !stage1_rg_full) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2599 ||
	      near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0) ;
  assign NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2604 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d2595 ||
	      !stage1_rg_full) &&
	     (!stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2599 ||
	      near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0) &&
	     cur_verbosity__h1374 != 4'd0 ;
  assign NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2607 =
	     !rg_halt && !csr_regfile$interrupt_pending[5] &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2530 &&
	     (near_mem$imem_instr[6:0] != 7'b1110011 ||
	      near_mem$imem_instr[13:12] == 2'b0 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	      2'd0 &&
	      !stage3_rg_full) ;
  assign NOT_stage1_rg_full_16_17_OR_NOT_near_mem_imem__ETC___d2618 =
	     !stage1_rg_full ||
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2598 ||
	     near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050 ||
	     near_mem$imem_instr[6:0] != 7'b1110011 ||
	     near_mem$imem_instr[13:12] == 2'b0 ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ||
	     stage3_rg_full ;
  assign SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1000 =
	     { {52{near_memimem_instr_BITS_31_TO_20__q27[11]}},
	       near_memimem_instr_BITS_31_TO_20__q27 } ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d538 =
	     addrbits__h7964 +
	     ((IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d526 &&
	       !IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d531) ?
		65'h1FFFFFFFFFFFFFFFF :
		((IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d531 &&
		  !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d526) ?
		   65'h00000000000000001 :
		   65'h0)) ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d755 =
	     aMid__h9386 < r__h9387 ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d767 =
	     addrbits__h9303 +
	     ((_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d755 &&
	       !IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d760) ?
		65'h1FFFFFFFFFFFFFFFF :
		((IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d760 &&
		  !_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d755) ?
		   65'h00000000000000001 :
		   65'h0)) ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d773 =
	     x__h9142 <= upperbits304_PLUS_lowerbits305__q22[63:0] ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d791 =
	     addr__h9132 < result646_PLUS_b_val647__q23[63:0] ;
  assign _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d891 =
	     addrbits__h13863 +
	     ((IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d879 &&
	       !IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d884) ?
		65'h1FFFFFFFFFFFFFFFF :
		((IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d884 &&
		  !IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d879) ?
		   65'h00000000000000001 :
		   65'h0)) ;
  assign _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1017 =
	     addrbits__h6771 +
	     ((IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1011 &&
	       !IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d760) ?
		65'h1FFFFFFFFFFFFFFFF :
		((IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d760 &&
		  !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1011) ?
		   65'h00000000000000001 :
		   65'h0)) ;
  assign _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1703 =
	     (top__h18246 & lmaskLo__h18257) == 66'd0 ||
	     !rs2_val_bypassed_capability__h7772[63] &&
	     !rs2_val_bypassed_capability__h7772[62] &&
	     !rs2_val_bypassed_capability__h7772[61] &&
	     !rs2_val_bypassed_capability__h7772[60] &&
	     !rs2_val_bypassed_capability__h7772[59] &&
	     !rs2_val_bypassed_capability__h7772[58] &&
	     !rs2_val_bypassed_capability__h7772[57] &&
	     !rs2_val_bypassed_capability__h7772[56] &&
	     !rs2_val_bypassed_capability__h7772[55] &&
	     !rs2_val_bypassed_capability__h7772[54] &&
	     !rs2_val_bypassed_capability__h7772[53] &&
	     !rs2_val_bypassed_capability__h7772[52] &&
	     !rs2_val_bypassed_capability__h7772[51] &&
	     !rs2_val_bypassed_capability__h7772[50] &&
	     !rs2_val_bypassed_capability__h7772[49] &&
	     !rs2_val_bypassed_capability__h7772[48] &&
	     !rs2_val_bypassed_capability__h7772[47] &&
	     !rs2_val_bypassed_capability__h7772[46] &&
	     !rs2_val_bypassed_capability__h7772[45] &&
	     !rs2_val_bypassed_capability__h7772[44] &&
	     !rs2_val_bypassed_capability__h7772[43] &&
	     !rs2_val_bypassed_capability__h7772[42] &&
	     !rs2_val_bypassed_capability__h7772[41] &&
	     !rs2_val_bypassed_capability__h7772[40] &&
	     !rs2_val_bypassed_capability__h7772[39] &&
	     !rs2_val_bypassed_capability__h7772[38] &&
	     !rs2_val_bypassed_capability__h7772[37] &&
	     !rs2_val_bypassed_capability__h7772[36] &&
	     !rs2_val_bypassed_capability__h7772[35] &&
	     !rs2_val_bypassed_capability__h7772[34] &&
	     !rs2_val_bypassed_capability__h7772[33] &&
	     !rs2_val_bypassed_capability__h7772[32] &&
	     !rs2_val_bypassed_capability__h7772[31] &&
	     !rs2_val_bypassed_capability__h7772[30] &&
	     !rs2_val_bypassed_capability__h7772[29] &&
	     !rs2_val_bypassed_capability__h7772[28] &&
	     !rs2_val_bypassed_capability__h7772[27] &&
	     !rs2_val_bypassed_capability__h7772[26] &&
	     !rs2_val_bypassed_capability__h7772[25] &&
	     !rs2_val_bypassed_capability__h7772[24] &&
	     !rs2_val_bypassed_capability__h7772[23] &&
	     !rs2_val_bypassed_capability__h7772[22] &&
	     !rs2_val_bypassed_capability__h7772[21] &&
	     !rs2_val_bypassed_capability__h7772[20] &&
	     !rs2_val_bypassed_capability__h7772[19] &&
	     !rs2_val_bypassed_capability__h7772[18] &&
	     !rs2_val_bypassed_capability__h7772[17] &&
	     !rs2_val_bypassed_capability__h7772[16] &&
	     !rs2_val_bypassed_capability__h7772[15] &&
	     !rs2_val_bypassed_capability__h7772[14] &&
	     !rs2_val_bypassed_capability__h7772[13] ;
  assign _51_MINUS_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d1946 =
	     6'd51 -
	     (rs2_val_bypassed_capability__h7772[63] ?
		6'd0 :
		(rs2_val_bypassed_capability__h7772[62] ?
		   6'd1 :
		   (rs2_val_bypassed_capability__h7772[61] ?
		      6'd2 :
		      (rs2_val_bypassed_capability__h7772[60] ?
			 6'd3 :
			 (rs2_val_bypassed_capability__h7772[59] ?
			    6'd4 :
			    (rs2_val_bypassed_capability__h7772[58] ?
			       6'd5 :
			       (rs2_val_bypassed_capability__h7772[57] ?
				  6'd6 :
				  (rs2_val_bypassed_capability__h7772[56] ?
				     6'd7 :
				     (rs2_val_bypassed_capability__h7772[55] ?
					6'd8 :
					(rs2_val_bypassed_capability__h7772[54] ?
					   6'd9 :
					   (rs2_val_bypassed_capability__h7772[53] ?
					      6'd10 :
					      (rs2_val_bypassed_capability__h7772[52] ?
						 6'd11 :
						 (rs2_val_bypassed_capability__h7772[51] ?
						    6'd12 :
						    (rs2_val_bypassed_capability__h7772[50] ?
						       6'd13 :
						       (rs2_val_bypassed_capability__h7772[49] ?
							  6'd14 :
							  (rs2_val_bypassed_capability__h7772[48] ?
							     6'd15 :
							     (rs2_val_bypassed_capability__h7772[47] ?
								6'd16 :
								(rs2_val_bypassed_capability__h7772[46] ?
								   6'd17 :
								   (rs2_val_bypassed_capability__h7772[45] ?
								      6'd18 :
								      (rs2_val_bypassed_capability__h7772[44] ?
									 6'd19 :
									 (rs2_val_bypassed_capability__h7772[43] ?
									    6'd20 :
									    (rs2_val_bypassed_capability__h7772[42] ?
									       6'd21 :
									       (rs2_val_bypassed_capability__h7772[41] ?
										  6'd22 :
										  (rs2_val_bypassed_capability__h7772[40] ?
										     6'd23 :
										     (rs2_val_bypassed_capability__h7772[39] ?
											6'd24 :
											(rs2_val_bypassed_capability__h7772[38] ?
											   6'd25 :
											   (rs2_val_bypassed_capability__h7772[37] ?
											      6'd26 :
											      (rs2_val_bypassed_capability__h7772[36] ?
												 6'd27 :
												 (rs2_val_bypassed_capability__h7772[35] ?
												    6'd28 :
												    (rs2_val_bypassed_capability__h7772[34] ?
												       6'd29 :
												       (rs2_val_bypassed_capability__h7772[33] ?
													  6'd30 :
													  (rs2_val_bypassed_capability__h7772[32] ?
													     6'd31 :
													     (rs2_val_bypassed_capability__h7772[31] ?
														6'd32 :
														(rs2_val_bypassed_capability__h7772[30] ?
														   6'd33 :
														   (rs2_val_bypassed_capability__h7772[29] ?
														      6'd34 :
														      (rs2_val_bypassed_capability__h7772[28] ?
															 6'd35 :
															 (rs2_val_bypassed_capability__h7772[27] ?
															    6'd36 :
															    (rs2_val_bypassed_capability__h7772[26] ?
															       6'd37 :
															       (rs2_val_bypassed_capability__h7772[25] ?
																  6'd38 :
																  (rs2_val_bypassed_capability__h7772[24] ?
																     6'd39 :
																     (rs2_val_bypassed_capability__h7772[23] ?
																	6'd40 :
																	(rs2_val_bypassed_capability__h7772[22] ?
																	   6'd41 :
																	   (rs2_val_bypassed_capability__h7772[21] ?
																	      6'd42 :
																	      (rs2_val_bypassed_capability__h7772[20] ?
																		 6'd43 :
																		 (rs2_val_bypassed_capability__h7772[19] ?
																		    6'd44 :
																		    (rs2_val_bypassed_capability__h7772[18] ?
																		       6'd45 :
																		       (rs2_val_bypassed_capability__h7772[17] ?
																			  6'd46 :
																			  (rs2_val_bypassed_capability__h7772[16] ?
																			     6'd47 :
																			     (rs2_val_bypassed_capability__h7772[15] ?
																				6'd48 :
																				(rs2_val_bypassed_capability__h7772[14] ?
																				   6'd49 :
																				   (rs2_val_bypassed_capability__h7772[13] ?
																				      6'd50 :
																				      6'd51))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign _theResult_____1_snd__h17562 =
	     (near_mem$imem_instr[14:12] == 3'b0 &&
	      near_mem$imem_instr[6:0] == 7'b0110011 &&
	      near_mem$imem_instr[30]) ?
	       rd_val___1__h17557 :
	       _theResult_____1_snd__h17569 ;
  assign _theResult_____1_snd__h17597 =
	     rs1_cap__h6403[63:0] & _theResult___snd__h30105 ;
  assign _theResult_____1_snd_bounds_topBits__h27914 =
	     { x7945_SRL_51_MINUS_IF_IF_IF_near_mem_imem_inst_ETC__q37[14:4],
	       3'd0 } ;
  assign _theResult_____4__h34301 =
	     csr_regfile$read_misa[18] ?
	       _theResult_____5__h34300 :
	       csr_val___2__h34400 ;
  assign _theResult_____5__h34300 =
	     (!csr_regfile$read_misa[18] && !csr_regfile$read_misa[5] &&
	      !csr_regfile$read_misa[3]) ?
	       csr_val___1__h34460 :
	       csr_val___2__h34299 ;
  assign _theResult____h40895 =
	     (delta_CPI_instrs__h40894 == 64'd0) ?
	       delta_CPI_instrs___1__h40930 :
	       delta_CPI_instrs__h40894 ;
  assign _theResult___exc_code__h18079 =
	     (near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      rs1_cap__h6403[104]) ?
	       5'd21 :
	       5'd2 ;
  assign _theResult___exc_code__h25857 =
	     (near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d732 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd17 :
	       5'd2 ;
  assign _theResult___snd__h17673 =
	     (near_mem$imem_instr[14:12] == 3'b001 &&
	      !near_mem$imem_instr[25]) ?
	       rd_val___1__h30254 :
	       _theResult___snd__h17680 ;
  assign _theResult___snd__h17680 =
	     near_mem$imem_instr[30] ?
	       rd_val___1__h30337 :
	       rd_val___1__h30308 ;
  assign _theResult___snd__h17786 =
	     { {32{rs1_cap403_BITS_31_TO_0_SRL_rs2_val_bypassed_c_ETC__q9[31]}},
	       rs1_cap403_BITS_31_TO_0_SRL_rs2_val_bypassed_c_ETC__q9 } ;
  assign _theResult___snd__h30105 =
	     (near_mem$imem_instr[6:0] == 7'b0010011) ?
	       SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1000 :
	       rs2_val_bypassed_capability__h7772[63:0] ;
  assign aMid__h13948 =
	     controller_capability3550_BITS_63_TO_0_AND_INV_ETC__q17[19:0] ;
  assign aMid__h6856 =
	     rs1_cap403_BITS_63_TO_0_AND_INV_0xFFFFFFFFFFFF_ETC__q16[19:0] ;
  assign aMid__h8049 =
	     rs2_val_bypassed_capability772_BITS_63_TO_0_AN_ETC__q7[19:0] ;
  assign aMid__h9386 =
	     addr132_AND_INV_0xFFFFFFFFFFFFFFFE_SL_i1391_SR_ETC__q15[19:0] ;
  assign addr132_AND_INV_0xFFFFFFFFFFFFFFFE_SL_i1391_SR_ETC__q15 =
	     (addr__h9132 & ~(64'hFFFFFFFFFFFFFFFE << i1__h9391)) >>
	     rs1_cap__h6403[110:105] ;
  assign addr__h9132 = { 40'd0, x__h9232 } ;
  assign addrbits__h13863 = x__h13877 & y__h13878 ;
  assign addrbits__h6771 = x__h6785 & y__h9318 ;
  assign addrbits__h7964 = x__h7978 & y__h7979 ;
  assign addrbits__h9303 = x__h9317 & y__h9318 ;
  assign alu_outputs___1_addr_capability__h26491 =
	     { 64'd0, new_offset__h27598 } ;
  assign alu_outputs___1_addr_capability__h26505 =
	     { 116'd0, near_mem$imem_instr[31:20] } ;
  assign alu_outputs___1_addr_capability__h26529 = rs1_cap__h6403 ;
  assign alu_outputs___1_addr_tag__h26528 = alu_outputs___1_val2_tag__h34142 ;
  assign alu_outputs___1_addr_tag__h26571 =
	     (near_mem$imem_instr[31:25] == 7'b1111111) ?
	       alu_outputs___1_addr_tag__h26528 :
	       near_mem$imem_instr[31:25] != 7'b0000001 &&
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1621 ;
  assign alu_outputs___1_exc_code__h25938 =
	     NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0_23__ETC___d838 ?
	       5'd2 :
	       5'd20 ;
  assign alu_outputs___1_exc_code__h6371 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       (near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_3_ETC___d1360 ?
		  5'd2 :
		  ((near_mem$imem_instr[11:7] == 5'd0 &&
		    near_mem$imem_instr[19:15] == 5'd0) ?
		     CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q32 :
		     5'd2)) :
	       5'd2 ;
  assign alu_outputs___1_val1_capability__h27560 =
	     { 64'hFFFE7E0000011111, ret_pc__h5871 } ;
  assign alu_outputs___1_val1_capability__h27568 =
	     { 64'd0, new_addr__h27565 } ;
  assign alu_outputs___1_val1_capability__h27572 =
	     { 64'd0, new_addr__h27569 } ;
  assign alu_outputs___1_val1_capability__h27576 =
	     { 64'd0, new_addr__h27573 } ;
  assign alu_outputs___1_val1_capability__h27580 =
	     { 64'd0, new_addr__h27577 } ;
  assign alu_outputs___1_val1_capability__h27583 = { 64'd0, rd_val__h6051 } ;
  assign alu_outputs___1_val1_capability__h27586 = { 64'd0, rd_val__h6068 } ;
  assign alu_outputs___1_val1_capability__h27596 = { 64'd0, rd_val__h6357 } ;
  assign alu_outputs___1_val1_capability__h27628 = { 118'd0, x__h32361 } ;
  assign alu_outputs___1_val1_capability__h27733 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       { rs1_cap__h6403[127:64], new_offset__h27598 } :
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 ;
  assign alu_outputs___1_val1_tag__h27640 =
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     decoded_instr_rs2__h5316 != 5'b00001 &&
	     decoded_instr_rs2__h5316 != 5'b00010 &&
	     decoded_instr_rs2__h5316 != 5'b00011 &&
	     decoded_instr_rs2__h5316 != 5'b00100 &&
	     decoded_instr_rs2__h5316 != 5'b00101 &&
	     decoded_instr_rs2__h5316 != 5'b00110 &&
	     decoded_instr_rs2__h5316 != 5'b01111 &&
	     ((decoded_instr_rs2__h5316 == 5'b01010) ?
		near_mem$imem_instr[19:15] != 5'd0 &&
		IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
		decoded_instr_rs2__h5316 == 5'b01100) ;
  assign alu_outputs___1_val1_tag__h27732 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 :
	       IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1743 ;
  assign alu_outputs___1_val2_capability__h34076 =
	     { 64'hFFFE7E0000011111, branch_target__h5843 } ;
  assign alu_outputs___1_val2_capability__h34092 =
	     { 64'd0, new_addr__h34087 } ;
  assign alu_outputs___1_val2_tag__h34142 =
	     near_mem$imem_instr[19:15] != 5'd0 &&
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 ;
  assign alu_outputs___2_addr_capability__h26549 =
	     { 123'd0, decoded_instr_rs2__h5316 } ;
  assign alu_outputs_addr_capability__h26474 =
	     { 64'hFFFE7E0000011111, new_pc__h5854 } ;
  assign alu_outputs_addr_capability__h26478 =
	     { 64'hFFFE7E0000011111, next_pc__h5872 } ;
  assign alu_outputs_addr_capability__h26482 =
	     { 64'hFFFE7E0000011111, next_pc__h5895 } ;
  assign alu_outputs_addr_capability__h26494 = { 64'd0, eaddr__h6106 } ;
  assign alu_outputs_addr_tag__h26586 =
	     near_mem$imem_instr[6:0] == 7'b1100011 ||
	     near_mem$imem_instr[6:0] == 7'b1101111 ||
	     near_mem$imem_instr[6:0] == 7'b1100111 ||
	     near_mem$imem_instr[6:0] != 7'b0000011 &&
	     near_mem$imem_instr[6:0] != 7'b0100011 &&
	     near_mem$imem_instr[6:0] != 7'b1110011 &&
	     alu_outputs___1_addr_tag__h26571 ;
  assign alu_outputs_val2_tag__h34157 =
	     near_mem$imem_instr[6:0] == 7'b1100011 ||
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2046 ;
  assign b__h13862 =
	     controller_capability__h13550[104] ?
	       { controller_capability__h13550[103:96], 12'h0 } :
	       controller_capability__h13550[103:84] ;
  assign b__h14224 =
	     controller_capability3550_AND_INV_0xFFFFFFFFFF_ETC__q13[1:0] ;
  assign b__h7132 =
	     rs1_cap403_AND_INV_0xFFFFFFFFFFFFFFFFFFFFFFFFF_ETC__q11[1:0] ;
  assign b__h7963 =
	     rs2_val_bypassed_capability__h7772[104] ?
	       { rs2_val_bypassed_capability__h7772[103:96], 12'h0 } :
	       rs2_val_bypassed_capability__h7772[103:84] ;
  assign b__h8325 =
	     rs2_val_bypassed_capability772_AND_INV_0xFFFFF_ETC__q6[1:0] ;
  assign b__h9302 =
	     rs1_cap__h6403[104] ?
	       { rs1_cap__h6403[103:96], 12'h0 } :
	       rs1_cap__h6403[103:84] ;
  assign b__h9659 =
	     out_val_capability184_AND_INV_0xFFFFFFFFFFFFFF_ETC__q12[1:0] ;
  assign b_capability__h6722 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       ((stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 &&
		 stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309) ?
		  128'd0 :
		  gpr_regfile$read_rs1[127:0]) :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d317 ;
  assign b_capability__h6734 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       ((IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d301 &&
		 IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d304) ?
		  128'd0 :
		  b_capability__h6722) :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d322 ;
  assign b_capability__h7758 =
	     stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ?
	       ((stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 &&
		 stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333) ?
		  128'd0 :
		  gpr_regfile$read_rs2[127:0]) :
	       IF_stage3_rg_full_1_AND_stage3_rg_stage3_2_BIT_ETC___d340 ;
  assign b_capability__h7770 =
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 ==
	      2'd3) ?
	       ((IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d328 &&
		 IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d330) ?
		  128'd0 :
		  b_capability__h7758) :
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d344 ;
  assign b_val__h14212 = { 45'd0, x__h14441 } ;
  assign b_val__h8313 = { 45'd0, x__h8542 } ;
  assign b_val__h9647 = { 45'd0, x__h9873 } ;
  assign base__h18243 = { 2'd0, rs1_cap__h6403[63:0] } ;
  assign branch_target__h5843 =
	     near_mem$imem_pc +
	     { {51{near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1[12]}},
	       near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1 } ;
  assign check__h13522 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d847 ?
	       5'd18 :
	       IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2262 ;
  assign check__h6436 =
	     (!IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1021 ||
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1033) ?
	       5'd19 :
	       (rs1_cap__h6403[114] ?
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2187 :
		  5'd20) ;
  assign check__h7491 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505) ?
	       5'd18 :
	       IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2196 ;
  assign check__h8669 =
	     (near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505) ?
	       5'd18 :
	       (rs1_cap__h6403[104] ?
		  IF_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_2_ETC___d2201 :
		  5'd22) ;
  assign controller_capability3550_AND_INV_0xFFFFFFFFFF_ETC__q13 =
	     (controller_capability__h13550 &
	      ~(128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE << 63)) >>
	     y__h13904 ;
  assign controller_capability3550_BITS_63_TO_0_AND_INV_ETC__q17 =
	     (controller_capability__h13550[63:0] &
	      ~(64'hFFFFFFFFFFFFFFFE << i1__h13953)) >>
	     controller_capability__h13550[110:105] ;
  assign controller_capability__h13550 =
	     decoded_instr_rs2__h5316[4] ?
	       rs1_cap__h6403 :
	       stage1_rg_ddc[127:0] ;
  assign cpi__h40897 = x__h40896 / 64'd10 ;
  assign cpifrac__h40898 = x__h40896 % 64'd10 ;
  assign csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d2671 =
	     delta_CPI_cycles__h40893 * 64'd10 ;
  assign csr_regfile_read_csr_near_mem_imem_instr__20_B_ETC___d1066 =
	     csr_regfile$read_csr[64] &&
	     !rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 &&
	     !csr_regfile$csr_counter_read_fault &&
	     (near_mem$imem_instr[13:12] != 2'b01 &&
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      near_mem$imem_instr[31:30] != 2'b11) ;
  assign csr_val___1__h34460 =
	     { csr_val__h6361[63],
	       27'd0,
	       csr_val__h6361[35:32],
	       9'd0,
	       csr_val__h6361[22:15],
	       2'd0,
	       csr_val__h6361[12:11],
	       2'd0,
	       csr_val__h6361[8:7],
	       1'd0,
	       csr_val__h6361[5:3],
	       1'd0,
	       csr_val__h6361[1:0] } ;
  assign csr_val___2__h34299 =
	     { csr_val__h6361[63],
	       27'd0,
	       csr_val__h6361[35:32],
	       9'd0,
	       csr_val__h6361[22:11],
	       2'd0,
	       csr_val__h6361[8:7],
	       1'd0,
	       csr_val__h6361[5:3],
	       1'd0,
	       csr_val__h6361[1:0] } ;
  assign csr_val___2__h34308 =
	     { IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[63:36],
	       4'b1010,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2117 } ;
  assign csr_val___2__h34385 =
	     { _theResult_____4__h34301[63:5],
	       1'd0,
	       _theResult_____4__h34301[3:1],
	       1'd0 } ;
  assign csr_val___2__h34400 =
	     { _theResult_____5__h34300[63:9],
	       1'd0,
	       _theResult_____5__h34300[7:6],
	       1'd0,
	       _theResult_____5__h34300[4:2],
	       1'd0,
	       _theResult_____5__h34300[0] } ;
  assign csr_val__h27407 = csr_regfile$read_csr[63:0] | rs1_val__h6356 ;
  assign csr_val__h27412 = csr_regfile$read_csr[63:0] & y__h34530 ;
  assign cur_verbosity__h1374 =
	     (csr_regfile$read_csr_minstret < cfg_logdelay) ?
	       4'd0 :
	       cfg_verbosity ;
  assign decoded_instr_rs2__h5316 =
	     (near_mem$imem_instr[6:0] == 7'b1011011 &&
	      near_mem$imem_instr[31:25] == 7'b1111110) ?
	       near_mem$imem_instr[11:7] :
	       near_mem$imem_instr[24:20] ;
  assign delta_CPI_cycles__h40893 =
	     csr_regfile$read_csr_mcycle - rg_start_CPI_cycles ;
  assign delta_CPI_instrs___1__h40930 = delta_CPI_instrs__h40894 + 64'd1 ;
  assign delta_CPI_instrs__h40894 =
	     csr_regfile$read_csr_minstret - rg_start_CPI_instrs ;
  assign eaddr__h6106 =
	     rs1_cap__h6403[63:0] +
	     { {52{near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10[11]}},
	       near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10 } ;
  assign funct10__h6030 =
	     { near_mem$imem_instr[31:25], near_mem$imem_instr[14:12] } ;
  assign fv_out_next_pc__h5702 =
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340 ?
	       alu_outputs_addr_capability__h26587[63:0] :
	       ret_pc__h5871 ;
  assign fv_out_trap_info_exc_code__h26195 =
	     near_mem$imem_exc ?
	       near_mem$imem_exc_code :
	       ((near_mem$imem_instr[6:0] == 7'b1110011 &&
		 near_mem$imem_instr[13:12] != 2'b0 &&
		 NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260) ?
		  5'd2 :
		  alu_outputs_exc_code__h16803) ;
  assign global__h11233 =
	     rs2_val_bypassed_capability__h7772[113] & rs1_cap__h6403[113] ;
  assign global__h27648 =
	     rs1_cap__h6403[113] & rs2_val_bypassed_capability__h7772[113] ;
  assign gpr_regfile_RDY_server_reset_response_get__374_ETC___d2386 =
	     gpr_regfile$RDY_server_reset_response_get &&
	     near_mem$RDY_server_reset_response_get &&
	     csr_regfile$RDY_server_reset_response_get &&
	     stage1_f_reset_rsps$EMPTY_N &&
	     stage2_f_reset_rsps$EMPTY_N &&
	     stage3_f_reset_rsps$EMPTY_N &&
	     f_reset_rsps$FULL_N ;
  assign i1__h13953 = 6'd19 + controller_capability__h13550[110:105] ;
  assign i1__h8054 = 6'd19 + rs2_val_bypassed_capability__h7772[110:105] ;
  assign i1__h9391 = 6'd19 + rs1_cap__h6403[110:105] ;
  assign len__h18245 = { 2'd0, rs2_val_bypassed_capability__h7772[63:0] } ;
  assign lmaskLo__h18257 =
	     { 12'd0,
	       IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:10] } ;
  assign lowerbits__h13865 = { 45'd0, x__h14162 } ;
  assign lowerbits__h7966 = { 45'd0, x__h8263 } ;
  assign lowerbits__h9305 = { 45'd0, x__h9597 } ;
  assign ms_spp__h3168 = csr_regfile$read_mstatus[8] ? 2'b01 : 2'b0 ;
  assign ms_sxl__h3157 =
	     csr_regfile$read_misa[18] ? csr_regfile$read_misa[27:26] : 2'd0 ;
  assign ms_uxl__h3158 =
	     csr_regfile$read_misa[20] ? csr_regfile$read_misa[27:26] : 2'd0 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2137 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd0 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2140 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd1 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2143 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd2 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2146 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd3 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2149 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd4 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2152 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd5 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2155 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd6 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2158 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd7 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2161 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd8 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2164 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd9 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2167 =
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd0 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd1 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd2 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd3 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd4 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd5 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd6 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd7 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd8 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 !=
	     4'd9 ;
  assign near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 =
	     near_mem$imem_exc ||
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 &&
	     NOT_csr_regfile_read_csr_near_mem_imem_instr___ETC___d260 ;
  assign near_mem_imem_instr__20_BITS_11_TO_7_28_EQ_0_3_ETC___d1360 =
	     near_mem$imem_instr[11:7] == 5'd0 &&
	     (rg_cur_priv == 2'b11 ||
	      rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[20]) &&
	     near_mem$imem_instr[31:25] == 7'b0001001 ;
  assign near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 =
	     near_mem$imem_instr[13:12] == 2'b0 ||
	     !csr_regfile$read_csr[64] ||
	     rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 ||
	     csr_regfile$csr_counter_read_fault ||
	     (near_mem$imem_instr[13:12] == 2'b01 ||
	      near_mem$imem_instr[19:15] != 5'd0) &&
	     near_mem$imem_instr[31:30] == 2'b11 ||
	     near_mem$imem_instr[31:20] == 12'h180 &&
	     csr_regfile$read_mstatus[20] ;
  assign near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1085 =
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     (near_mem$imem_instr[6:0] != 7'b0110011 ||
	      !near_mem$imem_instr[30]) ||
	     near_mem$imem_instr[14:12] == 3'b0 &&
	     near_mem$imem_instr[6:0] == 7'b0110011 &&
	     near_mem$imem_instr[30] ||
	     near_mem$imem_instr[14:12] == 3'b010 ||
	     near_mem$imem_instr[14:12] == 3'b011 ||
	     near_mem$imem_instr[14:12] == 3'b100 ||
	     near_mem$imem_instr[14:12] == 3'b110 ||
	     near_mem$imem_instr[14:12] == 3'b111 ;
  assign near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1324 =
	     (near_mem$imem_instr[14:12] == 3'b0 ||
	      near_mem$imem_instr[14:12] == 3'b001 ||
	      near_mem$imem_instr[14:12] == 3'b100 ||
	      near_mem$imem_instr[14:12] == 3'b101 ||
	      near_mem$imem_instr[14:12] == 3'b110 ||
	      near_mem$imem_instr[14:12] == 3'b111) &&
	     (IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 ||
	      !branch_target__h5843[1]) ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d575 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     rs1_cap__h6403[104] ||
	     rs2_val_bypassed_capability__h7772[104] ||
	     !b_capability__h7770[120] ||
	     NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d572 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d587 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     decoded_instr_rs2__h5316 == 5'b0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	     !rs1_cap__h6403[104] ||
	     rs2_val_bypassed_capability__h7772[104] ||
	     !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d580 ||
	     !b_capability__h7770[122] ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d733 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     rs1_cap__h6403[104] ||
	     near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d732 ;
  assign near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d794 =
	     near_mem$imem_instr[19:15] == 5'd0 ||
	     IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	     rs1_cap__h6403[104] ||
	     rs2_val_bypassed_capability__h7772[104] &&
	     (!_0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d773 ||
	      _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d791) ;
  assign near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d2553 =
	     near_mem$imem_instr[31:25] == 7'b0000001 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1262 &&
	     decoded_instr_rs2__h5316 != 5'b0 &&
	     near_mem$imem_instr[19:15] != 5'd0 ;
  assign near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_0b_ETC___d732 =
	     near_mem$imem_instr[31:25] == 7'b0001001 &&
	     NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d629 &&
	     (rs2_val_bypassed_capability__h7772[63] ||
	      rs2_val_bypassed_capability__h7772[62] ||
	      rs2_val_bypassed_capability__h7772[61] ||
	      rs2_val_bypassed_capability__h7772[60] ||
	      rs2_val_bypassed_capability__h7772[59] ||
	      rs2_val_bypassed_capability__h7772[58] ||
	      rs2_val_bypassed_capability__h7772[57] ||
	      rs2_val_bypassed_capability__h7772[56] ||
	      rs2_val_bypassed_capability__h7772[55] ||
	      rs2_val_bypassed_capability__h7772[54] ||
	      rs2_val_bypassed_capability__h7772[53] ||
	      rs2_val_bypassed_capability__h7772[52] ||
	      rs2_val_bypassed_capability__h7772[51] ||
	      rs2_val_bypassed_capability__h7772[50] ||
	      rs2_val_bypassed_capability__h7772[49] ||
	      rs2_val_bypassed_capability__h7772[48] ||
	      rs2_val_bypassed_capability__h7772[47] ||
	      rs2_val_bypassed_capability__h7772[46] ||
	      rs2_val_bypassed_capability__h7772[45] ||
	      rs2_val_bypassed_capability__h7772[44] ||
	      rs2_val_bypassed_capability__h7772[43] ||
	      rs2_val_bypassed_capability__h7772[42] ||
	      rs2_val_bypassed_capability__h7772[41] ||
	      rs2_val_bypassed_capability__h7772[40] ||
	      rs2_val_bypassed_capability__h7772[39] ||
	      rs2_val_bypassed_capability__h7772[38] ||
	      rs2_val_bypassed_capability__h7772[37] ||
	      rs2_val_bypassed_capability__h7772[36] ||
	      rs2_val_bypassed_capability__h7772[35] ||
	      rs2_val_bypassed_capability__h7772[34] ||
	      rs2_val_bypassed_capability__h7772[33] ||
	      rs2_val_bypassed_capability__h7772[32] ||
	      rs2_val_bypassed_capability__h7772[31] ||
	      rs2_val_bypassed_capability__h7772[30] ||
	      rs2_val_bypassed_capability__h7772[29] ||
	      rs2_val_bypassed_capability__h7772[28] ||
	      rs2_val_bypassed_capability__h7772[27] ||
	      rs2_val_bypassed_capability__h7772[26] ||
	      rs2_val_bypassed_capability__h7772[25] ||
	      rs2_val_bypassed_capability__h7772[24] ||
	      rs2_val_bypassed_capability__h7772[23] ||
	      rs2_val_bypassed_capability__h7772[22] ||
	      rs2_val_bypassed_capability__h7772[21] ||
	      rs2_val_bypassed_capability__h7772[20] ||
	      rs2_val_bypassed_capability__h7772[19] ||
	      rs2_val_bypassed_capability__h7772[18] ||
	      rs2_val_bypassed_capability__h7772[17] ||
	      rs2_val_bypassed_capability__h7772[16] ||
	      rs2_val_bypassed_capability__h7772[15] ||
	      rs2_val_bypassed_capability__h7772[14] ||
	      rs2_val_bypassed_capability__h7772[13]) ;
  assign near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2033 =
	     { near_mem$imem_instr[6:0] == 7'b1101111 ||
	       near_mem$imem_instr[6:0] == 7'b1100111 ||
	       near_mem$imem_instr[6:0] != 7'b0010011 &&
	       near_mem$imem_instr[6:0] != 7'b0110011 &&
	       near_mem$imem_instr[6:0] != 7'b0011011 &&
	       near_mem$imem_instr[6:0] != 7'b0111011 &&
	       near_mem$imem_instr[6:0] != 7'b0110111 &&
	       near_mem$imem_instr[6:0] != 7'b0010111 &&
	       near_mem$imem_instr[6:0] != 7'b1110011 &&
	       alu_outputs___1_val1_tag__h27732,
	       CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q40 } ;
  assign near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998 =
	     near_mem$imem_pc +
	     { {43{near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q26[20]}},
	       near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q26 } ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053 =
	     near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     (near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d262 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d973 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343 =
	     near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2529 =
	     near_mem$imem_valid &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 !=
	      2'd1 ||
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d222 &&
	      !IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d231) ;
  assign near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2530 =
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d2529 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) ;
  assign near_memimem_instr_BITS_31_TO_20__q27 = near_mem$imem_instr[31:20] ;
  assign near_memimem_instr_BITS_31_TO_25_CONCAT_near__ETC__q10 =
	     { near_mem$imem_instr[31:25], near_mem$imem_instr[11:7] } ;
  assign near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q1 =
	     { near_mem$imem_instr[31],
	       near_mem$imem_instr[7],
	       near_mem$imem_instr[30:25],
	       near_mem$imem_instr[11:8],
	       1'b0 } ;
  assign near_memimem_instr_BIT_31_CONCAT_near_memime_ETC__q26 =
	     { near_mem$imem_instr[31],
	       near_mem$imem_instr[19:12],
	       near_mem$imem_instr[20],
	       near_mem$imem_instr[30:21],
	       1'b0 } ;
  assign newOffset__h9003 =
	     rs1_cap__h6403[63:0] + rs2_val_bypassed_capability__h7772[63:0] ;
  assign newVal__h6410 =
	     rs1_cap__h6403[104] ?
	       { 40'd0, rs1_cap__h6403[95:84], rs1_cap__h6403[75:64] } :
	       64'hFFFFFFFFFFFFFFFF ;
  assign newVal__h6416 = { 44'd0, x__h31513 } << rs1_cap__h6403[110:105] ;
  assign newVal__h6425 =
	     rs1_cap__h6403[63:0] - result119_PLUS_b_val647__q30[63:0] ;
  assign new_addr__h27565 =
	     (near_mem$imem_instr[14:12] == 3'b001) ?
	       rd_val__h29891 :
	       (near_mem$imem_instr[30] ? rd_val__h30007 : rd_val__h29985) ;
  assign new_addr__h27569 =
	     (near_mem$imem_instr[14:12] == 3'b0 &&
	      (near_mem$imem_instr[6:0] != 7'b0110011 ||
	       !near_mem$imem_instr[30])) ?
	       rd_val___1__h17549 :
	       _theResult_____1_snd__h17562 ;
  assign new_addr__h27573 =
	     (near_mem$imem_instr[14:12] == 3'b0) ?
	       rd_val___1__h30202 :
	       _theResult___snd__h17673 ;
  assign new_addr__h27676 =
	     rs1_cap__h6403[63:0] - result312_PLUS_b_val313__q21[63:0] ;
  assign new_addr__h34087 =
	     (near_mem$imem_instr[31:20] == 12'h300) ?
	       csr_val___2__h34308 :
	       csr_val__h6361 ;
  assign new_curs__h8945 =
	     rs2_val_bypassed_capability__h7772[63:0] +
	     result119_PLUS_b_val647__q30[63:0] ;
  assign new_offset7598_BITS_31_TO_0__q28 = new_offset__h27598[31:0] ;
  assign new_offset__h27598 =
	     rs1_cap__h6403[63:0] +
	     SEXT_near_mem_imem_instr__20_BITS_31_TO_20_44___d1000 ;
  assign new_pc__h5854 =
	     IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 ?
	       branch_target__h5843 :
	       ret_pc__h5871 ;
  assign new_pcc_capability__h11235 =
	     { rs2_val_bypassed_capability__h7772[127:114],
	       global__h11233,
	       rs2_val_bypassed_capability__h7772[112:105],
	       1'b0,
	       rs2_val_bypassed_capability__h7772[103:96],
	       12'b0,
	       rs2_val_bypassed_capability__h7772[83:76],
	       12'b0,
	       rs2_val_bypassed_capability__h7772[63:0] } ;
  assign newcap__h8911 = { newperms__h8910, rs1_cap__h6403[112:0] } ;
  assign newperms__h8910 =
	     rs2_val_bypassed_capability__h7772[14:0] &
	     rs1_cap__h6403[127:113] ;
  assign next_pc__h5872 =
	     { near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998[63:1],
	       1'd0 } ;
  assign next_pc__h5895 = { new_offset__h27598[63:1], 1'd0 } ;
  assign out__h13296 =
	     (decoded_instr_rs2__h5316 == 5'b0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d505 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
	       5'd18 :
	       (rs2_val_bypassed_capability__h7772[104] ?
		  IF_IF_near_mem_imem_instr__20_BITS_19_TO_15_21_ETC___d2246 :
		  5'd22) ;
  assign out_bounds_baseBits__h27911 =
	     (!rs2_val_bypassed_capability__h7772[63] &&
	      !rs2_val_bypassed_capability__h7772[62] &&
	      !rs2_val_bypassed_capability__h7772[61] &&
	      !rs2_val_bypassed_capability__h7772[60] &&
	      !rs2_val_bypassed_capability__h7772[59] &&
	      !rs2_val_bypassed_capability__h7772[58] &&
	      !rs2_val_bypassed_capability__h7772[57] &&
	      !rs2_val_bypassed_capability__h7772[56] &&
	      !rs2_val_bypassed_capability__h7772[55] &&
	      !rs2_val_bypassed_capability__h7772[54] &&
	      !rs2_val_bypassed_capability__h7772[53] &&
	      !rs2_val_bypassed_capability__h7772[52] &&
	      !rs2_val_bypassed_capability__h7772[51] &&
	      !rs2_val_bypassed_capability__h7772[50] &&
	      !rs2_val_bypassed_capability__h7772[49] &&
	      !rs2_val_bypassed_capability__h7772[48] &&
	      !rs2_val_bypassed_capability__h7772[47] &&
	      !rs2_val_bypassed_capability__h7772[46] &&
	      !rs2_val_bypassed_capability__h7772[45] &&
	      !rs2_val_bypassed_capability__h7772[44] &&
	      !rs2_val_bypassed_capability__h7772[43] &&
	      !rs2_val_bypassed_capability__h7772[42] &&
	      !rs2_val_bypassed_capability__h7772[41] &&
	      !rs2_val_bypassed_capability__h7772[40] &&
	      !rs2_val_bypassed_capability__h7772[39] &&
	      !rs2_val_bypassed_capability__h7772[38] &&
	      !rs2_val_bypassed_capability__h7772[37] &&
	      !rs2_val_bypassed_capability__h7772[36] &&
	      !rs2_val_bypassed_capability__h7772[35] &&
	      !rs2_val_bypassed_capability__h7772[34] &&
	      !rs2_val_bypassed_capability__h7772[33] &&
	      !rs2_val_bypassed_capability__h7772[32] &&
	      !rs2_val_bypassed_capability__h7772[31] &&
	      !rs2_val_bypassed_capability__h7772[30] &&
	      !rs2_val_bypassed_capability__h7772[29] &&
	      !rs2_val_bypassed_capability__h7772[28] &&
	      !rs2_val_bypassed_capability__h7772[27] &&
	      !rs2_val_bypassed_capability__h7772[26] &&
	      !rs2_val_bypassed_capability__h7772[25] &&
	      !rs2_val_bypassed_capability__h7772[24] &&
	      !rs2_val_bypassed_capability__h7772[23] &&
	      !rs2_val_bypassed_capability__h7772[22] &&
	      !rs2_val_bypassed_capability__h7772[21] &&
	      !rs2_val_bypassed_capability__h7772[20] &&
	      !rs2_val_bypassed_capability__h7772[19] &&
	      !rs2_val_bypassed_capability__h7772[18] &&
	      !rs2_val_bypassed_capability__h7772[17] &&
	      !rs2_val_bypassed_capability__h7772[16] &&
	      !rs2_val_bypassed_capability__h7772[15] &&
	      !rs2_val_bypassed_capability__h7772[14] &&
	      !rs2_val_bypassed_capability__h7772[13]) ?
	       ret_bounds_baseBits__h27906 :
	       ret_bounds_baseBits__h28123 ;
  assign out_val_capability184_AND_INV_0xFFFFFFFFFFFFFF_ETC__q12 =
	     (out_val_capability__h9184 &
	      ~(128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE << 63)) >>
	     y__h9343 ;
  assign out_val_capability__h9184 = { rs1_cap__h6403[127:64], addr__h9132 } ;
  assign output_stage2___1_bypass_rd_val_capability__h4613 =
	     (stage2_rg_stage2[393:389] == 5'd0) ?
	       stage2_rg_stage2[256:129] :
	       { 64'd0, near_mem$dmem_word64 } ;
  assign output_stage2___1_bypass_rd_val_tag__h4612 =
	     stage2_rg_stage2[393:389] == 5'd0 && stage2_rg_stage2[257] ;
  assign pcc_capability__h11107 = { 64'hFFFE7E0000011111, near_mem$imem_pc } ;
  assign r__h13949 = b__h13862 - 20'd4096 ;
  assign r__h8050 = b__h7963 - 20'd4096 ;
  assign r__h9387 = b__h9302 - 20'd4096 ;
  assign rd_val___1__h17549 =
	     rs1_cap__h6403[63:0] + _theResult___snd__h30105 ;
  assign rd_val___1__h17557 =
	     rs1_cap__h6403[63:0] - _theResult___snd__h30105 ;
  assign rd_val___1__h17564 =
	     ((rs1_cap__h6403[63:0] ^ 64'h8000000000000000) <
	      (_theResult___snd__h30105 ^ 64'h8000000000000000)) ?
	       64'd1 :
	       64'd0 ;
  assign rd_val___1__h17571 =
	     (rs1_cap__h6403[63:0] < _theResult___snd__h30105) ?
	       64'd1 :
	       64'd0 ;
  assign rd_val___1__h17578 =
	     rs1_cap__h6403[63:0] ^ _theResult___snd__h30105 ;
  assign rd_val___1__h17585 =
	     rs1_cap__h6403[63:0] | _theResult___snd__h30105 ;
  assign rd_val___1__h30202 =
	     { {32{new_offset7598_BITS_31_TO_0__q28[31]}},
	       new_offset7598_BITS_31_TO_0__q28 } ;
  assign rd_val___1__h30254 = { {32{x__h30257[31]}}, x__h30257 } ;
  assign rd_val___1__h30308 = { {32{x__h30311[31]}}, x__h30311 } ;
  assign rd_val___1__h30337 = { {32{tmp__h30336[31]}}, tmp__h30336 } ;
  assign rd_val___1__h30435 =
	     { {32{rs1_cap403_BITS_31_TO_0_PLUS_rs2_val_bypassed__ETC__q18[31]}},
	       rs1_cap403_BITS_31_TO_0_PLUS_rs2_val_bypassed__ETC__q18 } ;
  assign rd_val___1__h30523 =
	     { {32{rs1_cap403_BITS_31_TO_0_MINUS_rs2_val_bypassed_ETC__q19[31]}},
	       rs1_cap403_BITS_31_TO_0_MINUS_rs2_val_bypassed_ETC__q19 } ;
  assign rd_val___1__h30529 = { {32{x__h30532[31]}}, x__h30532 } ;
  assign rd_val___1__h30574 = { {32{x__h30577[31]}}, x__h30577 } ;
  assign rd_val__h29891 = rs1_cap__h6403[63:0] << shamt__h5945 ;
  assign rd_val__h29985 = rs1_cap__h6403[63:0] >> shamt__h5945 ;
  assign rd_val__h30007 =
	     rs1_cap__h6403[63:0] >> shamt__h5945 |
	     ~(64'hFFFFFFFFFFFFFFFF >> shamt__h5945) &
	     {64{rs1_cap403_BITS_63_TO_0__q14[63]}} ;
  assign rd_val__h6051 = { {32{v32__h6049[31]}}, v32__h6049 } ;
  assign rd_val__h6068 = near_mem$imem_pc + rd_val__h6051 ;
  assign rd_val__h6357 =
	     (near_mem$imem_instr[11:7] == 5'd0) ?
	       64'd0 :
	       csr_regfile$read_csr[63:0] ;
  assign result119_PLUS_b_val647__q30 = result__h7119 + b_val__h9647 ;
  assign result312_PLUS_b_val313__q21 = result__h8312 + b_val__h8313 ;
  assign result4211_PLUS_b_val4212__q24 = result__h14211 + b_val__h14212 ;
  assign result646_PLUS_b_val647__q23 = result__h9646 + b_val__h9647 ;
  assign result__h14211 = { 63'd0, x__h14219 } ;
  assign result__h7119 = { 63'd0, x__h7127 } ;
  assign result__h8312 = { 63'd0, x__h8320 } ;
  assign result__h9646 = { 63'd0, x__h9654 } ;
  assign ret_bounds_baseBits__h27906 =
	     ((rs2_val_bypassed_capability__h7772[63:0] &
	       { 8'd255,
		 ~IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:8] }) ==
	      (IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616 &
	       { 8'd255,
		 ~IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:8] }) &&
	      (rs2_val_bypassed_capability__h7772[63] ||
	       rs2_val_bypassed_capability__h7772[62] ||
	       rs2_val_bypassed_capability__h7772[61] ||
	       rs2_val_bypassed_capability__h7772[60] ||
	       rs2_val_bypassed_capability__h7772[59] ||
	       rs2_val_bypassed_capability__h7772[58] ||
	       rs2_val_bypassed_capability__h7772[57] ||
	       rs2_val_bypassed_capability__h7772[56] ||
	       rs2_val_bypassed_capability__h7772[55] ||
	       rs2_val_bypassed_capability__h7772[54] ||
	       rs2_val_bypassed_capability__h7772[53] ||
	       rs2_val_bypassed_capability__h7772[52] ||
	       rs2_val_bypassed_capability__h7772[51] ||
	       rs2_val_bypassed_capability__h7772[50] ||
	       rs2_val_bypassed_capability__h7772[49] ||
	       rs2_val_bypassed_capability__h7772[48] ||
	       rs2_val_bypassed_capability__h7772[47] ||
	       rs2_val_bypassed_capability__h7772[46] ||
	       rs2_val_bypassed_capability__h7772[45] ||
	       rs2_val_bypassed_capability__h7772[44] ||
	       rs2_val_bypassed_capability__h7772[43] ||
	       rs2_val_bypassed_capability__h7772[42] ||
	       rs2_val_bypassed_capability__h7772[41] ||
	       rs2_val_bypassed_capability__h7772[40] ||
	       rs2_val_bypassed_capability__h7772[39] ||
	       rs2_val_bypassed_capability__h7772[38] ||
	       rs2_val_bypassed_capability__h7772[37] ||
	       rs2_val_bypassed_capability__h7772[36] ||
	       rs2_val_bypassed_capability__h7772[35] ||
	       rs2_val_bypassed_capability__h7772[34] ||
	       rs2_val_bypassed_capability__h7772[33] ||
	       rs2_val_bypassed_capability__h7772[32] ||
	       rs2_val_bypassed_capability__h7772[31] ||
	       rs2_val_bypassed_capability__h7772[30] ||
	       rs2_val_bypassed_capability__h7772[29] ||
	       rs2_val_bypassed_capability__h7772[28] ||
	       rs2_val_bypassed_capability__h7772[27] ||
	       rs2_val_bypassed_capability__h7772[26] ||
	       rs2_val_bypassed_capability__h7772[25] ||
	       rs2_val_bypassed_capability__h7772[24] ||
	       rs2_val_bypassed_capability__h7772[23] ||
	       rs2_val_bypassed_capability__h7772[22] ||
	       rs2_val_bypassed_capability__h7772[21] ||
	       rs2_val_bypassed_capability__h7772[20] ||
	       rs2_val_bypassed_capability__h7772[19] ||
	       rs2_val_bypassed_capability__h7772[18] ||
	       rs2_val_bypassed_capability__h7772[17] ||
	       rs2_val_bypassed_capability__h7772[16] ||
	       rs2_val_bypassed_capability__h7772[15] ||
	       rs2_val_bypassed_capability__h7772[14] ||
	       rs2_val_bypassed_capability__h7772[13])) ?
	       x__h28131[14:1] :
	       x__h28131[13:0] ;
  assign ret_bounds_baseBits__h28123 =
	     { ret_bounds_baseBits__h27906[13:3], 3'd0 } ;
  assign ret_bounds_topBits__h27905 =
	     ((rs2_val_bypassed_capability__h7772[63:0] &
	       { 8'd255,
		 ~IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:8] }) ==
	      (IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616 &
	       { 8'd255,
		 ~IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:8] }) &&
	      (rs2_val_bypassed_capability__h7772[63] ||
	       rs2_val_bypassed_capability__h7772[62] ||
	       rs2_val_bypassed_capability__h7772[61] ||
	       rs2_val_bypassed_capability__h7772[60] ||
	       rs2_val_bypassed_capability__h7772[59] ||
	       rs2_val_bypassed_capability__h7772[58] ||
	       rs2_val_bypassed_capability__h7772[57] ||
	       rs2_val_bypassed_capability__h7772[56] ||
	       rs2_val_bypassed_capability__h7772[55] ||
	       rs2_val_bypassed_capability__h7772[54] ||
	       rs2_val_bypassed_capability__h7772[53] ||
	       rs2_val_bypassed_capability__h7772[52] ||
	       rs2_val_bypassed_capability__h7772[51] ||
	       rs2_val_bypassed_capability__h7772[50] ||
	       rs2_val_bypassed_capability__h7772[49] ||
	       rs2_val_bypassed_capability__h7772[48] ||
	       rs2_val_bypassed_capability__h7772[47] ||
	       rs2_val_bypassed_capability__h7772[46] ||
	       rs2_val_bypassed_capability__h7772[45] ||
	       rs2_val_bypassed_capability__h7772[44] ||
	       rs2_val_bypassed_capability__h7772[43] ||
	       rs2_val_bypassed_capability__h7772[42] ||
	       rs2_val_bypassed_capability__h7772[41] ||
	       rs2_val_bypassed_capability__h7772[40] ||
	       rs2_val_bypassed_capability__h7772[39] ||
	       rs2_val_bypassed_capability__h7772[38] ||
	       rs2_val_bypassed_capability__h7772[37] ||
	       rs2_val_bypassed_capability__h7772[36] ||
	       rs2_val_bypassed_capability__h7772[35] ||
	       rs2_val_bypassed_capability__h7772[34] ||
	       rs2_val_bypassed_capability__h7772[33] ||
	       rs2_val_bypassed_capability__h7772[32] ||
	       rs2_val_bypassed_capability__h7772[31] ||
	       rs2_val_bypassed_capability__h7772[30] ||
	       rs2_val_bypassed_capability__h7772[29] ||
	       rs2_val_bypassed_capability__h7772[28] ||
	       rs2_val_bypassed_capability__h7772[27] ||
	       rs2_val_bypassed_capability__h7772[26] ||
	       rs2_val_bypassed_capability__h7772[25] ||
	       rs2_val_bypassed_capability__h7772[24] ||
	       rs2_val_bypassed_capability__h7772[23] ||
	       rs2_val_bypassed_capability__h7772[22] ||
	       rs2_val_bypassed_capability__h7772[21] ||
	       rs2_val_bypassed_capability__h7772[20] ||
	       rs2_val_bypassed_capability__h7772[19] ||
	       rs2_val_bypassed_capability__h7772[18] ||
	       rs2_val_bypassed_capability__h7772[17] ||
	       rs2_val_bypassed_capability__h7772[16] ||
	       rs2_val_bypassed_capability__h7772[15] ||
	       rs2_val_bypassed_capability__h7772[14] ||
	       rs2_val_bypassed_capability__h7772[13])) ?
	       _theResult_____1_snd_bounds_topBits__h27914 :
	       (NOT_0_CONCAT_IF_near_mem_imem_instr__20_BITS_1_ETC___d1950 ?
		  ret_bounds_topBits__h28015 :
		  x__h28088[13:0]) ;
  assign ret_bounds_topBits__h28015 =
	     { x8033_SRL_51_MINUS_IF_IF_IF_near_mem_imem_inst_ETC__q38[13:3],
	       3'd0 } ;
  assign ret_pc__h5871 = near_mem$imem_pc + 64'd4 ;
  assign rg_cur_priv_9_EQ_0b11_355_OR_rg_cur_priv_9_EQ__ETC___d1379 =
	     (rg_cur_priv == 2'b11 ||
	      rg_cur_priv == 2'b01 && !csr_regfile$read_mstatus[21] ||
	      rg_cur_priv == 2'b0 && csr_regfile$read_misa[13]) &&
	     near_mem$imem_instr[31:20] == 12'b000100000101 ;
  assign rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d837 =
	     rg_cur_priv < decoded_instr_rs2__h5316[4:3] ;
  assign rg_cur_priv_9_ULT_near_mem_imem_instr__20_BITS_ETC___d249 =
	     rg_cur_priv < near_mem$imem_instr[29:28] ;
  assign rg_halt_478_OR_csr_regfile_interrupt_pending_r_ETC___d2624 =
	     rg_halt || csr_regfile$interrupt_pending[5] ||
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd2 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	     2'd0 ||
	     NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2484 ||
	     near_mem$imem_instr[6:0] == 7'b1110011 &&
	     near_mem$imem_instr[13:12] != 2'b0 &&
	     (IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) ;
  assign rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2636 =
	     rg_state == 3'd2 && !rg_halt &&
	     !csr_regfile$interrupt_pending[5] &&
	     !stage3_rg_full ;
  assign rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2649 =
	     rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2636 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd3 ;
  assign rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2655 =
	     rg_state_7_EQ_2_391_AND_NOT_rg_halt_478_479_AN_ETC___d2636 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     stage1_rg_full &&
	     near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053 &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd2 ;
  assign rg_state_7_EQ_2_391_AND_stage1_rg_full_16_AND__ETC___d2686 =
	     rg_state == 3'd2 && stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2681 &&
	     IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 ==
	     2'd0 &&
	     !stage3_rg_full ;
  assign rg_state_7_EQ_2_391_AND_stage1_rg_full_16_OR_N_ETC___d2492 =
	     rg_state == 3'd2 &&
	     (stage1_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) &&
	     (stage3_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd3) &&
	     (stage3_rg_full ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      !stage1_rg_full ||
	      NOT_near_mem_imem_valid__18_19_OR_IF_stage2_rg_ETC___d2473) &&
	     (NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2489 ||
	      IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 !=
	      2'd0 ||
	      stage3_rg_full) ;
  assign roundedLength__h18250 =
	     len__h18245 +
	     { 11'd0, rs2_val_bypassed_capability__h7772[63:9] } ;
  assign roundedLength__h18254 =
	     len__h18245 +
	     { 9'd0, rs2_val_bypassed_capability__h7772[63:7] } ;
  assign rs1_cap403_AND_INV_0xFFFFFFFFFFFFFFFFFFFFFFFFF_ETC__q11 =
	     (rs1_cap__h6403 &
	      ~(128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE << 63)) >>
	     y__h9343 ;
  assign rs1_cap403_BITS_31_TO_0_MINUS_rs2_val_bypassed_ETC__q19 =
	     rs1_cap__h6403[31:0] - rs2_val_bypassed_capability__h7772[31:0] ;
  assign rs1_cap403_BITS_31_TO_0_PLUS_rs2_val_bypassed__ETC__q18 =
	     rs1_cap__h6403[31:0] + rs2_val_bypassed_capability__h7772[31:0] ;
  assign rs1_cap403_BITS_31_TO_0_SRL_rs2_val_bypassed_c_ETC__q9 =
	     rs1_cap__h6403[31:0] >> rs2_val_bypassed_capability__h7772[4:0] |
	     ~(32'hFFFFFFFF >> rs2_val_bypassed_capability__h7772[4:0]) &
	     {32{rs1_cap403_BITS_31_TO_0__q8[31]}} ;
  assign rs1_cap403_BITS_31_TO_0__q8 = rs1_cap__h6403[31:0] ;
  assign rs1_cap403_BITS_63_TO_0_AND_INV_0xFFFFFFFFFFFF_ETC__q16 =
	     (rs1_cap__h6403[63:0] & ~(64'hFFFFFFFFFFFFFFFE << i1__h9391)) >>
	     rs1_cap__h6403[110:105] ;
  assign rs1_cap403_BITS_63_TO_0__q14 = rs1_cap__h6403[63:0] ;
  assign rs1_cap__h6403 =
	     (near_mem$imem_instr[19:15] == 5'd0) ?
	       128'd0 :
	       b_capability__h6734 ;
  assign rs1_val__h6356 =
	     near_mem$imem_instr[14] ?
	       { 59'd0, near_mem$imem_instr[19:15] } :
	       rs1_cap__h6403[63:0] ;
  assign rs2_val_bypassed_capability772_AND_INV_0xFFFFF_ETC__q6 =
	     (rs2_val_bypassed_capability__h7772 &
	      ~(128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE << 63)) >>
	     y__h8005 ;
  assign rs2_val_bypassed_capability772_BITS_63_TO_0_AN_ETC__q7 =
	     (rs2_val_bypassed_capability__h7772[63:0] &
	      ~(64'hFFFFFFFFFFFFFFFE << i1__h8054)) >>
	     rs2_val_bypassed_capability__h7772[110:105] ;
  assign rs2_val_bypassed_capability__h7772 =
	     (decoded_instr_rs2__h5316 == 5'b0) ?
	       128'd0 :
	       b_capability__h7770 ;
  assign shamt__h5945 =
	     (near_mem$imem_instr[6:0] == 7'b0010011) ?
	       near_mem$imem_instr[25:20] :
	       rs2_val_bypassed_capability__h7772[5:0] ;
  assign spliced_bits__h34356 =
	     csr_regfile$read_misa[20] ?
	       (csr_regfile$read_misa[18] ?
		  ((IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[12:11] ==
		    2'b10) ?
		     2'b01 :
		     IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[12:11]) :
		  ((IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[12:11] ==
		    2'b11) ?
		     IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[12:11] :
		     2'b0)) :
	       2'b11 ;
  assign spp__h34305 =
	     { 1'd0,
	       IF_csr_regfile_read_misa__6_BIT_20_0_THEN_IF_c_ETC___d2100[8] } ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1444 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd0 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1448 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd1 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1452 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd2 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1456 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd3 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1460 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd4 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1464 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd5 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1468 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd6 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1472 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd7 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1476 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd8 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1480 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1440 ==
	     4'd9 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1545 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 ==
	     3'd0 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1549 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 ==
	     3'd1 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1553 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 ==
	     3'd2 ;
  assign stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1557 =
	     stage1_rg_full && near_mem$imem_valid &&
	     NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	     NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1068 &&
	     (IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1321 ||
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340) &&
	     IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 ==
	     3'd3 ;
  assign stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186 =
	     { (stage2_rg_stage2[396:394] == 3'd3 ||
		stage2_rg_stage2[396:394] == 3'd0) &&
	       stage2_rg_stage2[257],
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 } ;
  assign stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_IF_n_ETC___d333 =
	     stage3_rg_stage3_BITS_136_TO_129__q4[decoded_instr_rs2__h5316[2:0]] ;
  assign stage3_rg_stage3_2_BITS_136_TO_129_08_BIT_near_ETC___d309 =
	     stage3_rg_stage3_BITS_136_TO_129__q4[near_mem$imem_instr[17:15]] ;
  assign stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_IF_ne_ETC___d332 =
	     stage3_rg_stage3[138:137] == decoded_instr_rs2__h5316[4:3] ;
  assign stage3_rg_stage3_2_BITS_138_TO_137_06_EQ_near__ETC___d307 =
	     stage3_rg_stage3[138:137] == near_mem$imem_instr[19:18] ;
  assign stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 =
	     stage3_rg_stage3[285:279] == 7'b1011011 &&
	     stage3_rg_stage3[293:291] == 3'b0 &&
	     (stage3_rg_stage3[303:299] == 5'h0D ||
	      stage3_rg_stage3[303:299] == 5'h10) &&
	     stage3_rg_stage3[310:304] == 7'b1111111 ;
  assign stage3_rg_stage3_BITS_136_TO_129__q4 = stage3_rg_stage3[136:129] ;
  assign t__h13861 =
	     controller_capability__h13550[104] ?
	       { controller_capability__h13550[83:76], 12'h0 } :
	       controller_capability__h13550[83:64] ;
  assign t__h7962 =
	     rs2_val_bypassed_capability__h7772[104] ?
	       { rs2_val_bypassed_capability__h7772[83:76], 12'h0 } :
	       rs2_val_bypassed_capability__h7772[83:64] ;
  assign t__h9301 =
	     rs1_cap__h6403[104] ?
	       { rs1_cap__h6403[83:76], 12'h0 } :
	       rs1_cap__h6403[83:64] ;
  assign thin_bounds__h27799 =
	     { rs2_val_bypassed_capability__h7772[63] ||
	       rs2_val_bypassed_capability__h7772[62] ||
	       rs2_val_bypassed_capability__h7772[61] ||
	       rs2_val_bypassed_capability__h7772[60] ||
	       rs2_val_bypassed_capability__h7772[59] ||
	       rs2_val_bypassed_capability__h7772[58] ||
	       rs2_val_bypassed_capability__h7772[57] ||
	       rs2_val_bypassed_capability__h7772[56] ||
	       rs2_val_bypassed_capability__h7772[55] ||
	       rs2_val_bypassed_capability__h7772[54] ||
	       rs2_val_bypassed_capability__h7772[53] ||
	       rs2_val_bypassed_capability__h7772[52] ||
	       rs2_val_bypassed_capability__h7772[51] ||
	       rs2_val_bypassed_capability__h7772[50] ||
	       rs2_val_bypassed_capability__h7772[49] ||
	       rs2_val_bypassed_capability__h7772[48] ||
	       rs2_val_bypassed_capability__h7772[47] ||
	       rs2_val_bypassed_capability__h7772[46] ||
	       rs2_val_bypassed_capability__h7772[45] ||
	       rs2_val_bypassed_capability__h7772[44] ||
	       rs2_val_bypassed_capability__h7772[43] ||
	       rs2_val_bypassed_capability__h7772[42] ||
	       rs2_val_bypassed_capability__h7772[41] ||
	       rs2_val_bypassed_capability__h7772[40] ||
	       rs2_val_bypassed_capability__h7772[39] ||
	       rs2_val_bypassed_capability__h7772[38] ||
	       rs2_val_bypassed_capability__h7772[37] ||
	       rs2_val_bypassed_capability__h7772[36] ||
	       rs2_val_bypassed_capability__h7772[35] ||
	       rs2_val_bypassed_capability__h7772[34] ||
	       rs2_val_bypassed_capability__h7772[33] ||
	       rs2_val_bypassed_capability__h7772[32] ||
	       rs2_val_bypassed_capability__h7772[31] ||
	       rs2_val_bypassed_capability__h7772[30] ||
	       rs2_val_bypassed_capability__h7772[29] ||
	       rs2_val_bypassed_capability__h7772[28] ||
	       rs2_val_bypassed_capability__h7772[27] ||
	       rs2_val_bypassed_capability__h7772[26] ||
	       rs2_val_bypassed_capability__h7772[25] ||
	       rs2_val_bypassed_capability__h7772[24] ||
	       rs2_val_bypassed_capability__h7772[23] ||
	       rs2_val_bypassed_capability__h7772[22] ||
	       rs2_val_bypassed_capability__h7772[21] ||
	       rs2_val_bypassed_capability__h7772[20] ||
	       rs2_val_bypassed_capability__h7772[19] ||
	       rs2_val_bypassed_capability__h7772[18] ||
	       rs2_val_bypassed_capability__h7772[17] ||
	       rs2_val_bypassed_capability__h7772[16] ||
	       rs2_val_bypassed_capability__h7772[15] ||
	       rs2_val_bypassed_capability__h7772[14] ||
	       rs2_val_bypassed_capability__h7772[13],
	       IF_NOT_IF_IF_near_mem_imem_instr__20_BITS_6_TO_ETC___d1982 } ;
  assign tmp__h30336 =
	     rs1_cap__h6403[31:0] >> near_mem$imem_instr[24:20] |
	     ~(32'hFFFFFFFF >> near_mem$imem_instr[24:20]) &
	     {32{rs1_cap403_BITS_31_TO_0__q8[31]}} ;
  assign top__h18246 = base__h18243 + len__h18245 ;
  assign upperbits304_PLUS_lowerbits305__q22 =
	     upperbits__h9304 + lowerbits__h9305 ;
  assign upperbits3864_PLUS_lowerbits3865__q25 =
	     upperbits__h13864 + lowerbits__h13865 ;
  assign upperbits772_PLUS_lowerbits305__q29 =
	     upperbits__h6772 + lowerbits__h9305 ;
  assign upperbits965_PLUS_lowerbits966__q20 =
	     upperbits__h7965 + lowerbits__h7966 ;
  assign upperbits__h13864 =
	     _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d891 <<
	     y__h13904 ;
  assign upperbits__h6772 =
	     _0_CONCAT_IF_near_mem_imem_instr__20_BITS_19_TO_ETC___d1017 <<
	     y__h9343 ;
  assign upperbits__h7965 =
	     _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d538 <<
	     y__h8005 ;
  assign upperbits__h9304 =
	     _0_CONCAT_IF_IF_near_mem_imem_instr__20_BITS_6__ETC___d767 <<
	     y__h9343 ;
  assign v32__h6049 = { near_mem$imem_instr[31:12], 12'h0 } ;
  assign value__h26439 =
	     near_mem$imem_exc ?
	       near_mem$imem_pc :
	       IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2350 ;
  assign x7945_SRL_51_MINUS_IF_IF_IF_near_mem_imem_inst_ETC__q37 =
	     x__h27945 >>
	     _51_MINUS_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d1946 ;
  assign x8033_SRL_51_MINUS_IF_IF_IF_near_mem_imem_inst_ETC__q38 =
	     x__h28033 >>
	     _51_MINUS_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d1946 ;
  assign x__h11668 = x__h11684 - 64'd1 ;
  assign x__h11684 = rs2_val_bypassed_capability__h7772[63:0] + 64'd4 ;
  assign x__h13797 = x__h13813 - 64'd1 ;
  assign x__h13813 = controller_capability__h13550[63:0] + 64'd1 ;
  assign x__h13877 = { 1'd0, controller_capability__h13550[63:0] } ;
  assign x__h14162 = t__h13861 << controller_capability__h13550[110:105] ;
  assign x__h14219 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d905 <<
	     y__h13904 ;
  assign x__h14441 = b__h13862 << controller_capability__h13550[110:105] ;
  assign x__h14511 = x__h14527 - 64'd1 ;
  assign x__h14527 = controller_capability__h13550[63:0] + 64'd2 ;
  assign x__h15225 = x__h15241 - 64'd1 ;
  assign x__h15241 = controller_capability__h13550[63:0] + 64'd4 ;
  assign x__h15939 = x__h15955 - 64'd1 ;
  assign x__h15955 = controller_capability__h13550[63:0] + 64'd8 ;
  assign x__h27902 =
	     (!rs2_val_bypassed_capability__h7772[63] &&
	      !rs2_val_bypassed_capability__h7772[62] &&
	      !rs2_val_bypassed_capability__h7772[61] &&
	      !rs2_val_bypassed_capability__h7772[60] &&
	      !rs2_val_bypassed_capability__h7772[59] &&
	      !rs2_val_bypassed_capability__h7772[58] &&
	      !rs2_val_bypassed_capability__h7772[57] &&
	      !rs2_val_bypassed_capability__h7772[56] &&
	      !rs2_val_bypassed_capability__h7772[55] &&
	      !rs2_val_bypassed_capability__h7772[54] &&
	      !rs2_val_bypassed_capability__h7772[53] &&
	      !rs2_val_bypassed_capability__h7772[52] &&
	      !rs2_val_bypassed_capability__h7772[51] &&
	      !rs2_val_bypassed_capability__h7772[50] &&
	      !rs2_val_bypassed_capability__h7772[49] &&
	      !rs2_val_bypassed_capability__h7772[48] &&
	      !rs2_val_bypassed_capability__h7772[47] &&
	      !rs2_val_bypassed_capability__h7772[46] &&
	      !rs2_val_bypassed_capability__h7772[45] &&
	      !rs2_val_bypassed_capability__h7772[44] &&
	      !rs2_val_bypassed_capability__h7772[43] &&
	      !rs2_val_bypassed_capability__h7772[42] &&
	      !rs2_val_bypassed_capability__h7772[41] &&
	      !rs2_val_bypassed_capability__h7772[40] &&
	      !rs2_val_bypassed_capability__h7772[39] &&
	      !rs2_val_bypassed_capability__h7772[38] &&
	      !rs2_val_bypassed_capability__h7772[37] &&
	      !rs2_val_bypassed_capability__h7772[36] &&
	      !rs2_val_bypassed_capability__h7772[35] &&
	      !rs2_val_bypassed_capability__h7772[34] &&
	      !rs2_val_bypassed_capability__h7772[33] &&
	      !rs2_val_bypassed_capability__h7772[32] &&
	      !rs2_val_bypassed_capability__h7772[31] &&
	      !rs2_val_bypassed_capability__h7772[30] &&
	      !rs2_val_bypassed_capability__h7772[29] &&
	      !rs2_val_bypassed_capability__h7772[28] &&
	      !rs2_val_bypassed_capability__h7772[27] &&
	      !rs2_val_bypassed_capability__h7772[26] &&
	      !rs2_val_bypassed_capability__h7772[25] &&
	      !rs2_val_bypassed_capability__h7772[24] &&
	      !rs2_val_bypassed_capability__h7772[23] &&
	      !rs2_val_bypassed_capability__h7772[22] &&
	      !rs2_val_bypassed_capability__h7772[21] &&
	      !rs2_val_bypassed_capability__h7772[20] &&
	      !rs2_val_bypassed_capability__h7772[19] &&
	      !rs2_val_bypassed_capability__h7772[18] &&
	      !rs2_val_bypassed_capability__h7772[17] &&
	      !rs2_val_bypassed_capability__h7772[16] &&
	      !rs2_val_bypassed_capability__h7772[15] &&
	      !rs2_val_bypassed_capability__h7772[14] &&
	      !rs2_val_bypassed_capability__h7772[13]) ?
	       ret_bounds_topBits__h27905 :
	       { ret_bounds_topBits__h27905[13:3], 3'd0 } ;
  assign x__h27945 = base__h18243 + roundedLength__h18254 ;
  assign x__h28033 = base__h18243 + roundedLength__h18250 ;
  assign x__h28088 =
	     top__h18246 >>
	     _51_MINUS_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d1946 ;
  assign x__h28131 =
	     base__h18243 >>
	     _51_MINUS_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d1946 ;
  assign x__h28180 =
	     ((rs2_val_bypassed_capability__h7772[63:0] &
	       { 8'd255,
		 ~IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:8] }) ==
	      (IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616 &
	       { 8'd255,
		 ~IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d616[63:8] }) &&
	      (rs2_val_bypassed_capability__h7772[63] ||
	       rs2_val_bypassed_capability__h7772[62] ||
	       rs2_val_bypassed_capability__h7772[61] ||
	       rs2_val_bypassed_capability__h7772[60] ||
	       rs2_val_bypassed_capability__h7772[59] ||
	       rs2_val_bypassed_capability__h7772[58] ||
	       rs2_val_bypassed_capability__h7772[57] ||
	       rs2_val_bypassed_capability__h7772[56] ||
	       rs2_val_bypassed_capability__h7772[55] ||
	       rs2_val_bypassed_capability__h7772[54] ||
	       rs2_val_bypassed_capability__h7772[53] ||
	       rs2_val_bypassed_capability__h7772[52] ||
	       rs2_val_bypassed_capability__h7772[51] ||
	       rs2_val_bypassed_capability__h7772[50] ||
	       rs2_val_bypassed_capability__h7772[49] ||
	       rs2_val_bypassed_capability__h7772[48] ||
	       rs2_val_bypassed_capability__h7772[47] ||
	       rs2_val_bypassed_capability__h7772[46] ||
	       rs2_val_bypassed_capability__h7772[45] ||
	       rs2_val_bypassed_capability__h7772[44] ||
	       rs2_val_bypassed_capability__h7772[43] ||
	       rs2_val_bypassed_capability__h7772[42] ||
	       rs2_val_bypassed_capability__h7772[41] ||
	       rs2_val_bypassed_capability__h7772[40] ||
	       rs2_val_bypassed_capability__h7772[39] ||
	       rs2_val_bypassed_capability__h7772[38] ||
	       rs2_val_bypassed_capability__h7772[37] ||
	       rs2_val_bypassed_capability__h7772[36] ||
	       rs2_val_bypassed_capability__h7772[35] ||
	       rs2_val_bypassed_capability__h7772[34] ||
	       rs2_val_bypassed_capability__h7772[33] ||
	       rs2_val_bypassed_capability__h7772[32] ||
	       rs2_val_bypassed_capability__h7772[31] ||
	       rs2_val_bypassed_capability__h7772[30] ||
	       rs2_val_bypassed_capability__h7772[29] ||
	       rs2_val_bypassed_capability__h7772[28] ||
	       rs2_val_bypassed_capability__h7772[27] ||
	       rs2_val_bypassed_capability__h7772[26] ||
	       rs2_val_bypassed_capability__h7772[25] ||
	       rs2_val_bypassed_capability__h7772[24] ||
	       rs2_val_bypassed_capability__h7772[23] ||
	       rs2_val_bypassed_capability__h7772[22] ||
	       rs2_val_bypassed_capability__h7772[21] ||
	       rs2_val_bypassed_capability__h7772[20] ||
	       rs2_val_bypassed_capability__h7772[19] ||
	       rs2_val_bypassed_capability__h7772[18] ||
	       rs2_val_bypassed_capability__h7772[17] ||
	       rs2_val_bypassed_capability__h7772[16] ||
	       rs2_val_bypassed_capability__h7772[15] ||
	       rs2_val_bypassed_capability__h7772[14] ||
	       rs2_val_bypassed_capability__h7772[13])) ?
	       _51_MINUS_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d1946 +
	       6'd1 :
	       _51_MINUS_IF_IF_IF_near_mem_imem_instr__20_BITS_ETC___d1946 ;
  assign x__h30257 = rs1_cap__h6403[31:0] << near_mem$imem_instr[24:20] ;
  assign x__h30311 = rs1_cap__h6403[31:0] >> near_mem$imem_instr[24:20] ;
  assign x__h30532 =
	     rs1_cap__h6403[31:0] << rs2_val_bypassed_capability__h7772[4:0] ;
  assign x__h30577 =
	     rs1_cap__h6403[31:0] >> rs2_val_bypassed_capability__h7772[4:0] ;
  assign x__h31513 = t__h9301 - b__h9302 ;
  assign x__h32361 =
	     { near_mem$imem_instr[19:15], near_mem$imem_instr[11:7] } ;
  assign x__h34032 =
	     { !rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d837,
	       1'd1,
	       decoded_instr_rs2__h5316 == 5'b0 ||
	       decoded_instr_rs2__h5316 == 5'b00001 ||
	       (decoded_instr_rs2__h5316[4:2] == 3'b001 ||
		decoded_instr_rs2__h5316[4:2] == 3'b011 ||
		decoded_instr_rs2__h5316[4:2] == 3'b111) &&
	       decoded_instr_rs2__h5316[1:0] != 2'b01 } ;
  assign x__h40896 =
	     csr_regfile_read_csr_mcycle__7_MINUS_rg_start__ETC___d2671[63:0] /
	     _theResult____h40895 ;
  assign x__h6454 = x__h6470 - 64'd1 ;
  assign x__h6470 = rs1_cap__h6403[63:0] + 64'd4 ;
  assign x__h6785 = { 1'd0, rs1_cap__h6403[63:0] } ;
  assign x__h7127 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1028 <<
	     y__h9343 ;
  assign x__h7899 = x__h7915 - 64'd1 ;
  assign x__h7915 = rs2_val_bypassed_capability__h7772[63:0] + 64'd1 ;
  assign x__h7978 = { 1'd0, rs2_val_bypassed_capability__h7772[63:0] } ;
  assign x__h8263 = t__h7962 << rs2_val_bypassed_capability__h7772[110:105] ;
  assign x__h8320 =
	     IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d553 <<
	     y__h8005 ;
  assign x__h8542 = b__h7963 << rs2_val_bypassed_capability__h7772[110:105] ;
  assign x__h9142 = x__h9158 - 64'd1 ;
  assign x__h9158 = addr__h9132 + 64'd1 ;
  assign x__h9232 =
	     { rs2_val_bypassed_capability__h7772[95:84],
	       rs2_val_bypassed_capability__h7772[75:64] } ;
  assign x__h9317 = { 41'd0, x__h9232 } ;
  assign x__h9597 = t__h9301 << rs1_cap__h6403[110:105] ;
  assign x__h9654 =
	     IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d784 <<
	     y__h9343 ;
  assign x__h9873 = b__h9302 << rs1_cap__h6403[110:105] ;
  assign x_out_bypass_rd_val_capability621_BITS_7_TO_0__q5 =
	     x_out_bypass_rd_val_capability__h4621[7:0] ;
  assign y__h13878 = 65'h0FFFFFFFFFFFFFFFF << y__h13904 ;
  assign y__h13904 = 6'd20 + controller_capability__h13550[110:105] ;
  assign y__h28229 = ~rs1_cap__h6403[127:113] ;
  assign y__h34530 = ~rs1_val__h6356 ;
  assign y__h7979 = 65'h0FFFFFFFFFFFFFFFF << y__h8005 ;
  assign y__h8005 = 6'd20 + rs2_val_bypassed_capability__h7772[110:105] ;
  assign y__h9318 = 65'h0FFFFFFFFFFFFFFFF << y__h9343 ;
  assign y__h9343 = 6'd20 + rs1_cap__h6403[110:105] ;
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011,
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0110011,
      7'b0110111,
      7'b0111011,
      7'b1100111,
      7'b1101111:
	  fv_out_data_to_stage2_rd__h5766 = near_mem$imem_instr[11:7];
      7'b1100011: fv_out_data_to_stage2_rd__h5766 = 5'd0;
      default: fv_out_data_to_stage2_rd__h5766 = near_mem$imem_instr[11:7];
    endcase
  end
  always@(stage2_rg_stage2)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd1: x_out_data_to_stage3_rd__h4794 = stage2_rg_stage2[393:389];
      3'd3: x_out_data_to_stage3_rd__h4794 = 5'd0;
      default: x_out_data_to_stage3_rd__h4794 = 5'd0;
    endcase
  end
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0, 3'b001, 3'b100, 3'b101, 3'b110, 3'b111:
	  alu_outputs___1_exc_code__h5858 = 5'd0;
      default: alu_outputs___1_exc_code__h5858 = 5'd2;
    endcase
  end
  always@(stage2_rg_stage2 or output_stage2___1_bypass_rd_val_tag__h4612)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3: x_out_bypass_rd_val_tag__h4620 = stage2_rg_stage2[257];
      default: x_out_bypass_rd_val_tag__h4620 =
		   output_stage2___1_bypass_rd_val_tag__h4612;
    endcase
  end
  always@(stage2_rg_stage2 or
	  output_stage2___1_bypass_rd_val_capability__h4613)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  x_out_bypass_rd_val_capability__h4621 = stage2_rg_stage2[256:129];
      default: x_out_bypass_rd_val_capability__h4621 =
		   output_stage2___1_bypass_rd_val_capability__h4613;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  csr_regfile$read_csr_cap or pcc_capability__h11107 or stage1_rg_ddc)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0: ccsr_val_capability__h27709 = pcc_capability__h11107;
      5'b00001: ccsr_val_capability__h27709 = stage1_rg_ddc[127:0];
      default: ccsr_val_capability__h27709 = csr_regfile$read_csr_cap[127:0];
    endcase
  end
  always@(stage2_rg_stage2 or
	  IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd2;
      3'd1:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 =
	      IF_stage2_rg_stage2_6_BITS_393_TO_389_01_EQ_0__ETC___d108;
      3'd3: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd3;
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_2_1_IF_ETC__q2 = 2'd0;
    endcase
  end
  always@(stage2_rg_stage2 or near_mem$dmem_valid or near_mem$dmem_exc)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 = 2'd2;
      default: IF_stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_ETC___d151 =
		   near_mem$dmem_valid ?
		     (near_mem$dmem_exc ? 2'd3 : 2'd2) :
		     2'd1;
    endcase
  end
  always@(stage2_rg_stage2 or near_mem$dmem_word64)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 =
	      stage2_rg_stage2[256:129];
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q3 =
		   { 64'd0, near_mem$dmem_word64 };
    endcase
  end
  always@(near_mem$imem_instr or
	  controller_capability__h13550 or
	  alu_outputs___2_addr_capability__h26549 or
	  new_pcc_capability__h11235 or
	  alu_outputs___1_addr_capability__h26529)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  alu_outputs___1_addr_capability__h26572 =
	      alu_outputs___2_addr_capability__h26549;
      7'b1111110:
	  alu_outputs___1_addr_capability__h26572 =
	      new_pcc_capability__h11235;
      7'b1111111:
	  alu_outputs___1_addr_capability__h26572 =
	      alu_outputs___1_addr_capability__h26529;
      default: alu_outputs___1_addr_capability__h26572 =
		   controller_capability__h13550;
    endcase
  end
  always@(near_mem$imem_instr or
	  csr_regfile$read_csr or
	  rs1_val__h6356 or csr_val__h27407 or csr_val__h27412)
  begin
    case (near_mem$imem_instr[13:12])
      2'd0: csr_val__h6361 = csr_regfile$read_csr[63:0];
      2'b01: csr_val__h6361 = rs1_val__h6356;
      2'd2: csr_val__h6361 = csr_val__h27407;
      2'd3: csr_val__h6361 = csr_val__h27412;
    endcase
  end
  always@(funct10__h6030 or
	  _theResult___snd__h17786 or
	  rd_val___1__h30435 or
	  rd_val___1__h30529 or rd_val___1__h30574 or rd_val___1__h30523)
  begin
    case (funct10__h6030)
      10'b0: new_addr__h27577 = rd_val___1__h30435;
      10'b0000000001: new_addr__h27577 = rd_val___1__h30529;
      10'b0000000101: new_addr__h27577 = rd_val___1__h30574;
      10'b0100000000: new_addr__h27577 = rd_val___1__h30523;
      default: new_addr__h27577 = _theResult___snd__h17786;
    endcase
  end
  always@(stage2_rg_stage2)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 =
	      !stage2_rg_stage2[257];
      default: IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d494 =
		   stage2_rg_stage2[393:389] != 5'd0 ||
		   !stage2_rg_stage2[257];
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d948 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d794 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  decoded_instr_rs2__h5316 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 or
	  rs2_val_bypassed_capability__h7772 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d812)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d951 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d794;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d951 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      decoded_instr_rs2__h5316 != 5'b0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d807 &&
	      rs2_val_bypassed_capability__h7772[63:0] !=
	      64'hFFFFFFFFFFFFFFFF &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d812;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d951 =
		   near_mem$imem_instr[31:25] != 7'b0010010 &&
		   near_mem$imem_instr[31:25] != 7'b0010011 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d948;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d951 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d733 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d575 or
	  near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d587 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d595 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d733;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d575;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959 =
	      near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_0__ETC___d587;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959 =
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	      rs1_cap__h6403[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959 =
	      rs1_cap__h6403[104] && near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d595;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959 =
	      decoded_instr_rs2__h5316 != 5'b0 &&
	      decoded_instr_rs2__h5316 != 5'b00001 &&
	      decoded_instr_rs2__h5316 != 5'b00010 &&
	      decoded_instr_rs2__h5316 != 5'b00011 &&
	      decoded_instr_rs2__h5316 != 5'b00100 &&
	      decoded_instr_rs2__h5316 != 5'b00101 &&
	      decoded_instr_rs2__h5316 != 5'b00110 &&
	      decoded_instr_rs2__h5316 != 5'b01111 &&
	      decoded_instr_rs2__h5316 != 5'b01011 &&
	      decoded_instr_rs2__h5316 != 5'b01010 &&
	      decoded_instr_rs2__h5316 != 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d959 =
		   near_mem$imem_instr[31:25] != 7'b0011101 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d951;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b100:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b101:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b110:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 =
		   near_mem$imem_instr[14:12] == 3'b111 &&
		   !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_addr_capability__h26572 or
	  alu_outputs___1_addr_capability__h26491 or
	  alu_outputs_addr_capability__h26494 or
	  alu_outputs_addr_capability__h26474 or
	  alu_outputs_addr_capability__h26482 or
	  alu_outputs_addr_capability__h26478 or
	  alu_outputs___1_addr_capability__h26505)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011:
	  alu_outputs_addr_capability__h26587 =
	      alu_outputs___1_addr_capability__h26491;
      7'b0100011:
	  alu_outputs_addr_capability__h26587 =
	      alu_outputs_addr_capability__h26494;
      7'b1100011:
	  alu_outputs_addr_capability__h26587 =
	      alu_outputs_addr_capability__h26474;
      7'b1100111:
	  alu_outputs_addr_capability__h26587 =
	      alu_outputs_addr_capability__h26482;
      7'b1101111:
	  alu_outputs_addr_capability__h26587 =
	      alu_outputs_addr_capability__h26478;
      7'b1110011:
	  alu_outputs_addr_capability__h26587 =
	      alu_outputs___1_addr_capability__h26505;
      default: alu_outputs_addr_capability__h26587 =
		   alu_outputs___1_addr_capability__h26572;
    endcase
  end
  always@(near_mem$imem_instr or
	  _theResult_____1_snd__h17597 or
	  rd_val___1__h17564 or
	  rd_val___1__h17571 or rd_val___1__h17578 or rd_val___1__h17585)
  begin
    case (near_mem$imem_instr[14:12])
      3'b010: _theResult_____1_snd__h17569 = rd_val___1__h17564;
      3'b011: _theResult_____1_snd__h17569 = rd_val___1__h17571;
      3'b100: _theResult_____1_snd__h17569 = rd_val___1__h17578;
      3'b110: _theResult_____1_snd__h17569 = rd_val___1__h17585;
      default: _theResult_____1_snd__h17569 = _theResult_____1_snd__h17597;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  alu_outputs___1_val1_capability__h27628 or
	  rs1_cap__h6403 or
	  newVal__h6410 or
	  result119_PLUS_b_val647__q30 or
	  newVal__h6416 or
	  near_mem$imem_instr or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  newVal__h6425 or alu_outputs___1_val1_capability__h27560)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0:
	  alu_outputs___1_val1_capability__h27641 =
	      { 113'd0, rs1_cap__h6403[127:113] };
      5'b00001:
	  alu_outputs___1_val1_capability__h27641 = { 64'd0, newVal__h6410 };
      5'b00010:
	  alu_outputs___1_val1_capability__h27641 =
	      { 64'd0, result119_PLUS_b_val647__q30[63:0] };
      5'b00011:
	  alu_outputs___1_val1_capability__h27641 = { 64'd0, newVal__h6416 };
      5'b00100:
	  alu_outputs___1_val1_capability__h27641 =
	      { 127'd0,
		near_mem$imem_instr[19:15] != 5'd0 &&
		IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 };
      5'b00101:
	  alu_outputs___1_val1_capability__h27641 =
	      { 127'd0, rs1_cap__h6403[104] };
      5'b00110:
	  alu_outputs___1_val1_capability__h27641 = { 64'd0, newVal__h6425 };
      5'b01010, 5'b01011:
	  alu_outputs___1_val1_capability__h27641 = rs1_cap__h6403;
      5'b01100:
	  alu_outputs___1_val1_capability__h27641 =
	      alu_outputs___1_val1_capability__h27560;
      5'b01111:
	  alu_outputs___1_val1_capability__h27641 =
	      { 64'd0, rs1_cap__h6403[63:0] };
      default: alu_outputs___1_val1_capability__h27641 =
		   alu_outputs___1_val1_capability__h27628;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d348;
      3'b100:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b101:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d350;
      3'b110:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 =
	      !IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 =
		   near_mem$imem_instr[14:12] != 3'b111 ||
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d352;
    endcase
  end
  always@(near_mem$imem_instr or
	  near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d962 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d969 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d385;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d969 =
	      near_mem$imem_instr[14:12] != 3'b0 &&
	      (near_mem$imem_instr[14:12] != 3'b001 ||
	       near_mem$imem_instr[25]) &&
	      (near_mem$imem_instr[14:12] != 3'b101 ||
	       near_mem$imem_instr[25]);
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d969 =
	      funct10__h6030 != 10'b0 && funct10__h6030 != 10'b0100000000 &&
	      funct10__h6030 != 10'b0000000001 &&
	      funct10__h6030 != 10'b0000000101 &&
	      funct10__h6030 != 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d969 =
		   near_mem$imem_instr[6:0] != 7'b0110111 &&
		   near_mem$imem_instr[6:0] != 7'b0010111 &&
		   near_mem$imem_instr[6:0] != 7'b0000011 &&
		   near_mem$imem_instr[6:0] != 7'b0100011 &&
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] == 3'b0 ||
		      near_mem$imem_instr[14:12] == 3'b100 ||
		      near_mem_imem_instr__20_BITS_13_TO_12_40_EQ_0b_ETC___d426 :
		      near_mem$imem_instr[6:0] != 7'b1011011 ||
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d962);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1039 or
	  b_capability__h6734 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d984 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990 or
	  new_offset__h27598 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d984 ||
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d990;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050 =
	      new_offset__h27598[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050 =
	      near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1050 =
		   near_mem$imem_instr[6:0] != 7'b1011011 ||
		   near_mem$imem_instr[14:12] != 3'b0 ||
		   near_mem$imem_instr[31:25] != 7'b1111111 ||
		   decoded_instr_rs2__h5316 != 5'b01100 ||
		   NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1039 ||
		   b_capability__h6734[1:0] != 2'b0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1296 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1247 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1250)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1299 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1247;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1299 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1250;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1299 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1296;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1299 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1243 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1137 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1243;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_cap__h6403[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 =
	      !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 =
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1137;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 =
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      decoded_instr_rs2__h5316 == 5'b00010 ||
	      decoded_instr_rs2__h5316 == 5'b00011 ||
	      decoded_instr_rs2__h5316 == 5'b00100 ||
	      decoded_instr_rs2__h5316 == 5'b00101 ||
	      decoded_instr_rs2__h5316 == 5'b00110 ||
	      decoded_instr_rs2__h5316 == 5'b01111 ||
	      decoded_instr_rs2__h5316 == 5'b01011 ||
	      decoded_instr_rs2__h5316 == 5'b01010 ||
	      decoded_instr_rs2__h5316 == 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1307 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1299;
    endcase
  end
  always@(near_mem$imem_instr or
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1106 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1310 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1085 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1317 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1085;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1317 =
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101) &&
	      !near_mem$imem_instr[25];
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1317 =
	      funct10__h6030 == 10'b0 || funct10__h6030 == 10'b0100000000 ||
	      funct10__h6030 == 10'b0000000001 ||
	      funct10__h6030 == 10'b0000000101 ||
	      funct10__h6030 == 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1317 =
		   near_mem$imem_instr[6:0] == 7'b0110111 ||
		   near_mem$imem_instr[6:0] == 7'b0010111 ||
		   near_mem$imem_instr[6:0] == 7'b0000011 ||
		   near_mem$imem_instr[6:0] == 7'b0100011 ||
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] != 3'b0 &&
		      near_mem$imem_instr[14:12] != 3'b100 &&
		      NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1106 :
		      near_mem$imem_instr[6:0] == 7'b1011011 &&
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1310);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332 or
	  b_capability__h6734 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1324 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h27598 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1324 &&
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340 =
	      !new_offset__h27598[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340 =
	      !near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1340 =
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   near_mem$imem_instr[31:25] == 7'b1111111 &&
		   decoded_instr_rs2__h5316 == 5'b01100 &&
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332 &&
		   b_capability__h6734[1:0] == 2'b0;
    endcase
  end
  always@(rg_cur_priv)
  begin
    case (rg_cur_priv)
      2'b0: CASE_rg_cur_priv_0b0_8_0b1_9_11__q31 = 5'd8;
      2'b01: CASE_rg_cur_priv_0b0_8_0b1_9_11__q31 = 5'd9;
      default: CASE_rg_cur_priv_0b0_8_0b1_9_11__q31 = 5'd11;
    endcase
  end
  always@(near_mem$imem_instr or CASE_rg_cur_priv_0b0_8_0b1_9_11__q31)
  begin
    case (near_mem$imem_instr[31:20])
      12'b0:
	  CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q32 =
	      CASE_rg_cur_priv_0b0_8_0b1_9_11__q31;
      12'b000000000001:
	  CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q32 = 5'd3;
      default: CASE_near_memimem_instr_BITS_31_TO_20_0b0_CAS_ETC__q32 = 5'd2;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332 or
	  b_capability__h6734)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01101,
      5'b01111:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q33 = 4'd0;
      5'b01100:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q33 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332 ?
		((b_capability__h6734[1:0] == 2'b0) ? 4'd1 : 4'd9) :
		4'd9;
      default: CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q33 = 4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939 or
	  decoded_instr_rs2__h5316 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1408 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1399 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d595 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1402 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1407 or
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q33)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939 ?
		4'd9 :
		((!decoded_instr_rs2__h5316[3] ||
		  decoded_instr_rs2__h5316[2:0] == 3'b101 ||
		  !decoded_instr_rs2__h5316[2] ||
		  decoded_instr_rs2__h5316[1:0] == 2'b0) ?
		   4'd0 :
		   4'd9);
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d1408;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1399;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130 ?
		4'd0 :
		4'd9;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134 ?
		4'd0 :
		4'd9;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 ||
	       rs1_cap__h6403[104]) ?
		4'd9 :
		4'd0;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      (rs1_cap__h6403[104] && near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446) ?
		4'd9 :
		4'd0;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d595 ?
		4'd9 :
		4'd0;
      7'b0010010, 7'b0010011, 7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 = 4'd0;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1402;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1407;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 = 4'd9;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
	      CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q33;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  rg_cur_priv or
	  IF_rg_cur_priv_9_EQ_0b11_355_OR_rg_cur_priv_9__ETC___d1381)
  begin
    case (near_mem$imem_instr[31:20])
      12'b0, 12'b000000000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1383 = 4'd9;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_20_44_EQ_ETC___d1383 =
		   (rg_cur_priv == 2'b11 &&
		    near_mem$imem_instr[31:20] == 12'b001100000010) ?
		     4'd5 :
		     IF_rg_cur_priv_9_EQ_0b11_355_OR_rg_cur_priv_9__ETC___d1381;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_cap__h6403)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1427 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1424;
      3'b001:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1427 =
	      (near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	       rs1_cap__h6403[104]) ?
		4'd9 :
		4'd0;
      3'b010:
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1427 = 4'd0;
      default: IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1427 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q34 = 4'd2;
      3'b001: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q34 = 4'd3;
      default: CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q34 = 4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q34 or
	  IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1349 or
	  funct10__h6030 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1427 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1387)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011, 7'b0010111, 7'b0100011, 7'b0110111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 = 4'd0;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 =
	      CASE_near_memimem_instr_BITS_14_TO_12_0b0_2_0_ETC__q34;
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 =
	      IF_NOT_near_mem_imem_instr__20_BITS_14_TO_12_7_ETC___d1349;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 =
	      (near_mem$imem_instr[14:12] != 3'b0 &&
	       (near_mem$imem_instr[14:12] != 3'b001 ||
		near_mem$imem_instr[25]) &&
	       (near_mem$imem_instr[14:12] != 3'b101 ||
		near_mem$imem_instr[25])) ?
		4'd9 :
		4'd0;
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 =
	      (funct10__h6030 != 10'b0 && funct10__h6030 != 10'b0100000000 &&
	       funct10__h6030 != 10'b0000000001 &&
	       funct10__h6030 != 10'b0000000101 &&
	       funct10__h6030 != 10'b0100000101) ?
		4'd9 :
		4'd0;
      7'b1011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 =
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1427;
      7'b1110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 =
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d1387;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 =
		   4'd9;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434 or
	  NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d984 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h27598 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1438 =
	      NOT_near_mem_imem_instr__20_BITS_14_TO_12_77_E_ETC___d984 ?
		4'd9 :
		(IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 ?
		   4'd1 :
		   4'd0);
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1438 =
	      new_offset__h27598[1] ? 4'd9 : 4'd1;
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1438 =
	      near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998[1] ?
		4'd9 :
		4'd1;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1438 =
		   ((near_mem$imem_instr[6:0] == 7'b0010011 ||
		     near_mem$imem_instr[6:0] == 7'b0110011) &&
		    (near_mem$imem_instr[14:12] == 3'b001 ||
		     near_mem$imem_instr[14:12] == 3'b101)) ?
		     4'd0 :
		     IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1434;
    endcase
  end
  always@(decoded_instr_rs2__h5316)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01100,
      5'b01111:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q35 = 3'd0;
      5'b01101:
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q35 = 3'd3;
      default: CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q35 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939 or
	  decoded_instr_rs2__h5316 or
	  CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q35)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1532 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939 ?
		3'd0 :
		((!decoded_instr_rs2__h5316[3] ||
		  decoded_instr_rs2__h5316[2:0] == 3'b101) ?
		   3'd1 :
		   ((!decoded_instr_rs2__h5316[2] ||
		     decoded_instr_rs2__h5316[1:0] == 2'b0) ?
		      3'd2 :
		      3'd0));
      7'b0000001,
      7'b0001000,
      7'b0001001,
      7'b0001011,
      7'b0001100,
      7'b0001101,
      7'b0001111,
      7'b0010001,
      7'b0010010,
      7'b0010011,
      7'b0011101,
      7'b0011110,
      7'b0011111,
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1532 = 3'd0;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1532 =
	      CASE_decoded_instr_rs2316_0b0_0_0b1_0_0b10_0_0_ETC__q35;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1532 =
		   3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1532)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q36 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1532;
      3'b001, 3'b010:
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q36 = 3'd0;
      default: CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q36 = 3'd0;
    endcase
  end
  always@(near_mem$imem_instr or
	  CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q36)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 = 3'd1;
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0110011,
      7'b0110111,
      7'b0111011,
      7'b1100011,
      7'b1100111,
      7'b1101111,
      7'b1110011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 = 3'd0;
      7'b0100011:
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 = 3'd2;
      default: IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d1541 =
		   CASE_near_memimem_instr_BITS_14_TO_12_0b0_IF__ETC__q36;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1732 or
	  NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1706 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs2_val_bypassed_capability__h7772 or
	  y__h28229 or
	  NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1718)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739 =
	      NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1706;
      7'b0001111, 7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739 =
	      (rs2_val_bypassed_capability__h7772[127:113] & y__h28229) !=
	      15'd0 &&
	      NOT_0_CONCAT_IF_IF_near_mem_imem_instr__20_BIT_ETC___d1718;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739 =
	      rs2_val_bypassed_capability__h7772[104] &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739 =
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739 =
		   near_mem$imem_instr[31:25] != 7'b0010010 &&
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1732;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  alu_outputs___1_val1_tag__h27640)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001011, 7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1743 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1743 =
	      alu_outputs___1_val1_tag__h27640;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1743 =
		   near_mem$imem_instr[31:25] == 7'b0001101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d1739;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2006 or
	  rs1_cap__h6403 or
	  thin_bounds__h27799 or
	  b_capability__h6734 or
	  b_capability__h7770 or
	  global__h27648 or
	  newcap__h8911 or
	  new_curs__h8945 or
	  newOffset__h9003 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  new_addr__h27676 or
	  rs2_val_bypassed_capability__h7772 or
	  b__h7963 or
	  t__h7962 or
	  out_val_capability__h9184 or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1993 or
	  alu_outputs___1_val1_capability__h27641)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      { rs1_cap__h6403[127:109],
		18'd262143,
		thin_bounds__h27799,
		rs1_cap__h6403[63:0] };
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      { b_capability__h6734[127:105],
		1'b1,
		rs1_cap__h6403[103:96],
		b_capability__h7770[23:12],
		rs1_cap__h6403[83:76],
		b_capability__h7770[11:0],
		rs1_cap__h6403[63:0] };
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      { b_capability__h6734[127:114],
		global__h27648,
		b_capability__h6734[112:105],
		1'b0,
		rs1_cap__h6403[103:96],
		12'b0,
		rs1_cap__h6403[83:76],
		12'b0,
		rs1_cap__h6403[63:0] };
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      newcap__h8911;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      { rs1_cap__h6403[127:64], new_curs__h8945 };
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      { rs1_cap__h6403[127:64], newOffset__h9003 };
      7'b0010010:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      (near_mem$imem_instr[19:15] == 5'd0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496) ?
		128'd0 :
		{ 64'd0, new_addr__h27676 };
      7'b0010011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      (rs2_val_bypassed_capability__h7772[63:0] == 64'b0) ?
		128'h00001FFFFC0180040000000000000000 :
		{ rs1_cap__h6403[127:64],
		  rs2_val_bypassed_capability__h7772[63:0] };
      7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      { rs2_val_bypassed_capability__h7772[127:113],
		2'b0,
		rs2_val_bypassed_capability__h7772[110:105],
		1'b0,
		b__h7963,
		t__h7962,
		rs2_val_bypassed_capability__h7772[63:0] };
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      rs2_val_bypassed_capability__h7772[104] ?
		out_val_capability__h9184 :
		128'h0000000000000000FFFFFFFFFFFFFFFF;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1993;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
	      alu_outputs___1_val1_capability__h27641;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2019 =
		   IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2006;
    endcase
  end
  always@(near_mem$imem_instr or
	  rs1_cap__h6403 or
	  rs2_val_bypassed_capability__h7772 or
	  alu_outputs___1_val2_capability__h34076 or
	  alu_outputs___1_val2_capability__h34092)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0100011:
	  alu_outputs_val2_capability__h34158 =
	      rs2_val_bypassed_capability__h7772;
      7'b1100011:
	  alu_outputs_val2_capability__h34158 =
	      alu_outputs___1_val2_capability__h34076;
      7'b1110011:
	  alu_outputs_val2_capability__h34158 =
	      alu_outputs___1_val2_capability__h34092;
      default: alu_outputs_val2_capability__h34158 = rs1_cap__h6403;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2239 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2253)
  begin
    case (near_mem$imem_instr[24:20])
      5'h0:
	  check__h11186 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2239;
      5'h01:
	  check__h11186 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2253;
      5'h1F: check__h11186 = 5'd25;
      default: check__h11186 = 5'd2;
    endcase
  end
  always@(decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332 or
	  check__h6436)
  begin
    case (decoded_instr_rs2__h5316)
      5'b0,
      5'b00001,
      5'b00010,
      5'b00011,
      5'b00100,
      5'b00101,
      5'b00110,
      5'b01010,
      5'b01011,
      5'b01111:
	  alu_outputs___1_exc_code__h7481 = 5'd2;
      5'b01100:
	  alu_outputs___1_exc_code__h7481 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d1332 ?
		5'd0 :
		check__h6436;
      default: alu_outputs___1_exc_code__h7481 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2239 or
	  rs2_val_bypassed_capability__h7772 or check__h11186)
  begin
    case (near_mem$imem_instr[24:20])
      5'h0:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2258 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2239;
      5'h01:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2258 =
	      (rs2_val_bypassed_capability__h7772[1:0] == 2'b0) ?
		check__h11186 :
		5'd0;
      5'h1F:
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2258 = 5'd25;
      default: IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2258 =
		   5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939 or
	  check__h13522 or
	  IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2220 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2212 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130 or
	  check__h7491 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134 or
	  check__h8669 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2206 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d595 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2216 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2218 or
	  IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2258 or
	  alu_outputs___1_exc_code__h7481)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d939 ?
		check__h13522 :
		5'd2;
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      IF_NOT_IF_near_mem_imem_instr__20_BITS_6_TO_0__ETC___d2220;
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2212;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130 ?
		5'd2 :
		check__h7491;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134 ?
		5'd2 :
		check__h8669;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2206;
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      (rs1_cap__h6403[104] && near_mem$imem_instr[19:15] != 5'd0 &&
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446) ?
		5'd21 :
		5'd2;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d595 ?
		5'd21 :
		5'd2;
      7'b0010010, 7'b0010011, 7'b0011101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 = 5'd2;
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2216;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2218;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      IF_near_mem_imem_instr__20_BITS_24_TO_20_29_EQ_ETC___d2258;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
	      alu_outputs___1_exc_code__h7481;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 =
		   5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278 or
	  _theResult___exc_code__h18079)
  begin
    case (near_mem$imem_instr[14:12])
      3'b0:
	  alu_outputs___1_exc_code__h16779 =
	      IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2278;
      3'b001:
	  alu_outputs___1_exc_code__h16779 = _theResult___exc_code__h18079;
      3'b010: alu_outputs___1_exc_code__h16779 = 5'd2;
      default: alu_outputs___1_exc_code__h16779 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_exc_code__h16779 or
	  alu_outputs___1_exc_code__h5858 or alu_outputs___1_exc_code__h6371)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0000011,
      7'b0001111,
      7'b0010011,
      7'b0010111,
      7'b0011011,
      7'b0100011,
      7'b0110011,
      7'b0110111,
      7'b0111011:
	  alu_outputs_exc_code__h16803 = 5'd2;
      7'b1011011:
	  alu_outputs_exc_code__h16803 = alu_outputs___1_exc_code__h16779;
      7'b1100011:
	  alu_outputs_exc_code__h16803 = alu_outputs___1_exc_code__h5858;
      7'b1100111, 7'b1101111: alu_outputs_exc_code__h16803 = 5'd0;
      7'b1110011:
	  alu_outputs_exc_code__h16803 = alu_outputs___1_exc_code__h6371;
      default: alu_outputs_exc_code__h16803 = 5'd2;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1290 or
	  IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265 or
	  controller_capability__h13550 or
	  decoded_instr_rs2__h5316 or
	  rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d837)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0000001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2317 =
	      decoded_instr_rs2__h5316 != 5'b0 ||
	      near_mem$imem_instr[19:15] == 5'd0 ||
	      rg_cur_priv_9_ULT_IF_near_mem_imem_instr__20_B_ETC___d837;
      7'b1111110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2317 =
	      near_mem$imem_instr[24:20] != 5'h01 &&
	      near_mem$imem_instr[24:20] != 5'h1F &&
	      near_mem$imem_instr[24:20] != 5'h0;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2317 =
		   near_mem$imem_instr[31:25] != 7'b0 ||
		   IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1290 ||
		   IF_IF_near_mem_imem_instr__20_BITS_6_TO_0_23_E_ETC___d1265 &&
		   !controller_capability__h13550[104] &&
		   decoded_instr_rs2__h5316[3:2] == 2'b11;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2317 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2303 or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1250)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2320 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d2303;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2320 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d1250;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2320 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2317;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2320 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 or
	  rs1_cap__h6403 or
	  NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1242 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496 or
	  NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1137 or
	  decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_cap__h6403[104] &&
	      NOT_near_mem_imem_instr__20_BITS_31_TO_25_25_E_ETC___d1242;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1130;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d1134;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d446 &&
	      !rs1_cap__h6403[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 =
	      !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d496;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 =
	      NOT_IF_near_mem_imem_instr__20_BITS_19_TO_15_2_ETC___d1137;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 =
	      decoded_instr_rs2__h5316 != 5'b01100;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2328 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2320;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2434 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2420 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 or
	  decoded_instr_rs2__h5316 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2424 or
	  rs2_val_bypassed_capability__h7772 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2427)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0011110:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2437 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2420;
      7'b0011111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2437 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 &&
	      (decoded_instr_rs2__h5316 == 5'b0 ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2424 ||
	       rs2_val_bypassed_capability__h7772[63:0] ==
	       64'hFFFFFFFFFFFFFFFF ||
	       IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2427);
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2437 =
		   near_mem$imem_instr[31:25] == 7'b0010010 ||
		   near_mem$imem_instr[31:25] == 7'b0010011 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2434;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2437 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2419 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2414 or
	  NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2415 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 or
	  rs1_cap__h6403 or
	  IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2400 or
	  rs2_val_bypassed_capability__h7772 or decoded_instr_rs2__h5316)
  begin
    case (near_mem$imem_instr[31:25])
      7'b0001000, 7'b0001001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2419;
      7'b0001011:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2414;
      7'b0001100:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 =
	      NOT_near_mem_imem_instr__20_BITS_19_TO_15_21_E_ETC___d2415;
      7'b0001101:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 =
	      near_mem$imem_instr[19:15] != 5'd0 &&
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2406 &&
	      !rs1_cap__h6403[104];
      7'b0001111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 =
	      !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2400;
      7'b0010001:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 =
	      !rs1_cap__h6403[104] || near_mem$imem_instr[19:15] == 5'd0 ||
	      IF_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage_ETC___d2400 ||
	      rs2_val_bypassed_capability__h7772[63:0] == 64'b0;
      7'b1111111:
	  IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 =
	      decoded_instr_rs2__h5316 == 5'b0 ||
	      decoded_instr_rs2__h5316 == 5'b00001 ||
	      decoded_instr_rs2__h5316 == 5'b00010 ||
	      decoded_instr_rs2__h5316 == 5'b00011 ||
	      decoded_instr_rs2__h5316 == 5'b00100 ||
	      decoded_instr_rs2__h5316 == 5'b00101 ||
	      decoded_instr_rs2__h5316 == 5'b00110 ||
	      decoded_instr_rs2__h5316 == 5'b01111 ||
	      decoded_instr_rs2__h5316 == 5'b01011 ||
	      decoded_instr_rs2__h5316 == 5'b01010 ||
	      decoded_instr_rs2__h5316 == 5'b01101;
      default: IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2445 =
		   near_mem$imem_instr[31:25] == 7'b0011101 ||
		   IF_near_mem_imem_instr__20_BITS_31_TO_25_25_EQ_ETC___d2437;
    endcase
  end
  always@(near_mem$imem_instr or
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1106 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2448 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1085 or
	  funct10__h6030)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2455 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1085;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2455 =
	      near_mem$imem_instr[14:12] == 3'b0 ||
	      (near_mem$imem_instr[14:12] == 3'b001 ||
	       near_mem$imem_instr[14:12] == 3'b101) &&
	      !near_mem$imem_instr[25];
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2455 =
	      funct10__h6030 == 10'b0 || funct10__h6030 == 10'b0100000000 ||
	      funct10__h6030 == 10'b0000000001 ||
	      funct10__h6030 == 10'b0000000101 ||
	      funct10__h6030 == 10'b0100000101;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2455 =
		   near_mem$imem_instr[6:0] == 7'b0110111 ||
		   near_mem$imem_instr[6:0] == 7'b0010111 ||
		   near_mem$imem_instr[6:0] == 7'b0000011 ||
		   near_mem$imem_instr[6:0] == 7'b0100011 ||
		   ((near_mem$imem_instr[6:0] == 7'b1110011) ?
		      near_mem$imem_instr[14:12] != 3'b0 &&
		      near_mem$imem_instr[14:12] != 3'b100 &&
		      NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1106 :
		      near_mem$imem_instr[6:0] == 7'b1011011 &&
		      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d2448);
    endcase
  end
  always@(near_mem$imem_instr or
	  decoded_instr_rs2__h5316 or
	  IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2462 or
	  b_capability__h6734 or
	  near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1324 or
	  IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359 or
	  new_offset__h27598 or
	  near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2470 =
	      near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_0b_ETC___d1324 &&
	      IF_near_mem_imem_instr__20_BITS_14_TO_12_77_EQ_ETC___d359;
      7'b1100111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2470 =
	      !new_offset__h27598[1];
      7'b1101111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2470 =
	      !near_mem_imem_pc__64_PLUS_SEXT_near_mem_imem_i_ETC___d998[1];
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2470 =
		   near_mem$imem_instr[6:0] == 7'b1011011 &&
		   near_mem$imem_instr[14:12] == 3'b0 &&
		   near_mem$imem_instr[31:25] == 7'b1111111 &&
		   decoded_instr_rs2__h5316 == 5'b01100 &&
		   IF_near_mem_imem_instr__20_BITS_19_TO_15_21_EQ_ETC___d2462 &&
		   b_capability__h6734[1:0] == 2'b0;
    endcase
  end
  always@(near_mem$imem_instr or
	  alu_outputs___1_val1_capability__h27733 or
	  alu_outputs___1_val1_capability__h27572 or
	  alu_outputs___1_val1_capability__h27586 or
	  alu_outputs___1_val1_capability__h27576 or
	  alu_outputs___1_val1_capability__h27583 or
	  alu_outputs___1_val1_capability__h27580 or
	  alu_outputs___1_val1_capability__h27596)
  begin
    case (near_mem$imem_instr[6:0])
      7'b0010011, 7'b0110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030 =
	      alu_outputs___1_val1_capability__h27572;
      7'b0010111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030 =
	      alu_outputs___1_val1_capability__h27586;
      7'b0011011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030 =
	      alu_outputs___1_val1_capability__h27576;
      7'b0110111:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030 =
	      alu_outputs___1_val1_capability__h27583;
      7'b0111011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030 =
	      alu_outputs___1_val1_capability__h27580;
      7'b1110011:
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030 =
	      alu_outputs___1_val1_capability__h27596;
      default: IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2030 =
		   alu_outputs___1_val1_capability__h27733;
    endcase
  end
  always@(near_mem$imem_instr or
	  IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2031 or
	  alu_outputs___1_val1_capability__h27560)
  begin
    case (near_mem$imem_instr[6:0])
      7'b1100111, 7'b1101111:
	  CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q40 =
	      alu_outputs___1_val1_capability__h27560;
      default: CASE_near_memimem_instr_BITS_6_TO_0_0b1100111_ETC__q40 =
		   IF_near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0_ETC___d2031;
    endcase
  end
  always@(stage2_rg_stage2 or
	  output_stage2___1_bypass_rd_val_tag__h4612 or
	  output_stage2___1_bypass_rd_val_capability__h4613)
  begin
    case (stage2_rg_stage2[396:394])
      3'd0, 3'd3:
	  CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q41 =
	      stage2_rg_stage2[257:129];
      default: CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q41 =
		   { output_stage2___1_bypass_rd_val_tag__h4612,
		     output_stage2___1_bypass_rd_val_capability__h4613 };
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_logdelay <= `BSV_ASSIGNMENT_DELAY 64'd0;
	cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_halt <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_state <= `BSV_ASSIGNMENT_DELAY 3'd0;
	stage1_rg_ddc <= `BSV_ASSIGNMENT_DELAY
	    129'h1FFFE7E00000111110000000000000000;
	stage1_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage1_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
	stage2_rg_f5 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	stage2_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage2_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
	stage3_rg_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage3_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd1;
      end
    else
      begin
        if (cfg_logdelay$EN)
	  cfg_logdelay <= `BSV_ASSIGNMENT_DELAY cfg_logdelay$D_IN;
	if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (rg_halt$EN) rg_halt <= `BSV_ASSIGNMENT_DELAY rg_halt$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
	if (stage1_rg_ddc$EN)
	  stage1_rg_ddc <= `BSV_ASSIGNMENT_DELAY stage1_rg_ddc$D_IN;
	if (stage1_rg_full$EN)
	  stage1_rg_full <= `BSV_ASSIGNMENT_DELAY stage1_rg_full$D_IN;
	if (stage1_rg_run_state$EN)
	  stage1_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage1_rg_run_state$D_IN;
	if (stage2_rg_f5$EN)
	  stage2_rg_f5 <= `BSV_ASSIGNMENT_DELAY stage2_rg_f5$D_IN;
	if (stage2_rg_full$EN)
	  stage2_rg_full <= `BSV_ASSIGNMENT_DELAY stage2_rg_full$D_IN;
	if (stage2_rg_run_state$EN)
	  stage2_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage2_rg_run_state$D_IN;
	if (stage3_rg_full$EN)
	  stage3_rg_full <= `BSV_ASSIGNMENT_DELAY stage3_rg_full$D_IN;
	if (stage3_rg_run_state$EN)
	  stage3_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      stage3_rg_run_state$D_IN;
      end
    if (rg_cur_priv$EN) rg_cur_priv <= `BSV_ASSIGNMENT_DELAY rg_cur_priv$D_IN;
    if (rg_inum$EN) rg_inum <= `BSV_ASSIGNMENT_DELAY rg_inum$D_IN;
    if (rg_start_CPI_cycles$EN)
      rg_start_CPI_cycles <= `BSV_ASSIGNMENT_DELAY rg_start_CPI_cycles$D_IN;
    if (rg_start_CPI_instrs$EN)
      rg_start_CPI_instrs <= `BSV_ASSIGNMENT_DELAY rg_start_CPI_instrs$D_IN;
    if (stage2_rg_stage2$EN)
      stage2_rg_stage2 <= `BSV_ASSIGNMENT_DELAY stage2_rg_stage2$D_IN;
    if (stage3_rg_stage3$EN)
      stage3_rg_stage3 <= `BSV_ASSIGNMENT_DELAY stage3_rg_stage3$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_logdelay = 64'hAAAAAAAAAAAAAAAA;
    cfg_verbosity = 4'hA;
    rg_cur_priv = 2'h2;
    rg_halt = 1'h0;
    rg_inum = 64'hAAAAAAAAAAAAAAAA;
    rg_start_CPI_cycles = 64'hAAAAAAAAAAAAAAAA;
    rg_start_CPI_instrs = 64'hAAAAAAAAAAAAAAAA;
    rg_state = 3'h2;
    stage1_rg_ddc = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage1_rg_full = 1'h0;
    stage1_rg_run_state = 1'h0;
    stage2_rg_f5 = 5'h0A;
    stage2_rg_full = 1'h0;
    stage2_rg_run_state = 1'h0;
    stage2_rg_stage2 =
	647'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage3_rg_full = 1'h0;
    stage3_rg_run_state = 1'h0;
    stage3_rg_stage3 =
	375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("================================================================");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("%0d: Pipeline State:  inum:%0d  cur_priv:%0d  mstatus:%0x",
		 csr_regfile$read_csr_mcycle,
		 rg_inum,
		 rg_cur_priv,
		 csr_regfile$read_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write("MStatus{",
	       "sd:%0d",
	       csr_regfile$read_mstatus[16:15] == 2'h3 ||
	       csr_regfile$read_mstatus[14:13] == 2'h3);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" sxl:%0d", ms_sxl__h3157);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" uxl:%0d", ms_uxl__h3158);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tsr:%0d", csr_regfile$read_mstatus[22]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tw:%0d", csr_regfile$read_mstatus[21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" tvm:%0d", csr_regfile$read_mstatus[20]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mxr:%0d", csr_regfile$read_mstatus[19]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" sum:%0d", csr_regfile$read_mstatus[18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mprv:%0d", csr_regfile$read_mstatus[17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" xs:%0d", csr_regfile$read_mstatus[16:15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" fs:%0d", csr_regfile$read_mstatus[14:13]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" mpp:%0d", csr_regfile$read_mstatus[12:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write(" spp:%0d", ms_spp__h3168);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" pies:%0d_%0d%0d",
	       csr_regfile$read_mstatus[7],
	       csr_regfile$read_misa[18] && csr_regfile$read_mstatus[5],
	       csr_regfile$read_misa[13] && csr_regfile$read_mstatus[4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$write(" ies:%0d_%0d%0d",
	       csr_regfile$read_mstatus[3],
	       csr_regfile$read_misa[18] && csr_regfile$read_mstatus[1],
	       csr_regfile$read_misa[13] && csr_regfile$read_mstatus[0]);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    Bypass S1 <= S3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Bypass {");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  (stage3_rg_stage3[285:279] != 7'b1011011 ||
	   stage3_rg_stage3[293:291] != 3'b0 ||
	   stage3_rg_stage3[303:299] != 5'h0D &&
	   stage3_rg_stage3[303:299] != 5'h10 ||
	   stage3_rg_stage3[310:304] != 7'b1111111) &&
	  (!stage3_rg_full || !stage3_rg_stage3[276]))
	$write("Rd -");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  (stage3_rg_stage3_2_BITS_285_TO_279_3_EQ_0b1011_ETC___d90 ||
	   stage3_rg_full && stage3_rg_stage3[276]))
	$write("Rd %0d ",
	       stage3_rg_stage3[275:271],
	       "rd_val:%h",
	       stage3_rg_stage3[257:129]);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    S3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Output_Stage3");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage3_rg_full) $write(" PIPE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage3_rg_full) $write(" EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("    Bypass S1 <= S2: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("Bypass {");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd0)
	$write("Rd -");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd0)
	$write("Rd %0d ", stage2_rg_stage2[393:389]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 == 2'd1)
	$write("-");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d114 != 2'd1)
	$write("rd_val:%h",
	       CASE_stage2_rg_stage2_BITS_396_TO_394_0_stage2_ETC__q41);
    if (RST_N != `BSV_RESET_VALUE) if (WILL_FIRE_RL_rl_show_pipe) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("    S2: pc 0x%08h instr 0x%08h priv %0d",
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("Output_Stage2", " EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("Output_Stage2", " BUSY: pc:%0h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Output_Stage2", " NONPIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("Output_Stage2", " PIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("data_to_Stage3 {pc:%h  instr:%h  priv:%0d\n",
	       stage2_rg_stage2[644:581],
	       stage2_rg_stage2[580:549],
	       stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("        rd_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d168)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d176)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write(" rd:%0d  rd_val:%h\n",
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("        csr_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3 &&
	  !stage2_rg_stage2[388])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3 &&
	  stage2_rg_stage2[388])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write(" csr:%h  csr_val:%h",
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2[128:0],
	       "}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", near_mem$dmem_exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[321:258], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[644:581]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", near_mem$dmem_exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd1)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd3)
	$write("'h%h", stage2_rg_stage2[321:258], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd0 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd1 &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 != 2'd3)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe)
	$display("    S1: pc 0x%08h instr 0x%08h priv %0d",
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("Output_Stage1", " BUSY pc:%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("Output_Stage1", " NONPIPE: pc:%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("Output_Stage1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full)
	$write("Output_Stage1", " EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write(" PIPE: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1444)
	$write("CONTROL_STRAIGHT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1448)
	$write("CONTROL_BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1452)
	$write("CONTROL_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1456)
	$write("CONTROL_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1460)
	$write("CONTROL_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1464)
	$write("CONTROL_MRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1468)
	$write("CONTROL_SRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1472)
	$write("CONTROL_URET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1476)
	$write("CONTROL_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1480)
	$write("CONTROL_TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1500)
	$write("CONTROL_CLEAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("data_to_Stage 2 {pc:%h  instr:%h  priv:%0d\n",
	       near_mem$imem_pc,
	       near_mem$imem_instr,
	       rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("            op_stage2:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1545)
	$write("OP_Stage2_ALU");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1549)
	$write("OP_Stage2_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1553)
	$write("OP_Stage2_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe &&
	  stage1_rg_full_16_AND_near_mem_imem_valid__18__ETC___d1557)
	$write("OP_Stage2_CLR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1565)
	$write("OP_Stage2_CRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("  rd:%0d  csr_valid:", fv_out_data_to_stage2_rd__h5766);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_055_AND_NOT_near_mem_ETC___d1591)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  NOT_near_mem_imem_exc__38_055_AND_IF_near_mem__ETC___d1603)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("            addr:%h  val1:%h  val2:%h}",
	       { alu_outputs_addr_tag__h26586,
		 alu_outputs_addr_capability__h26587 },
	       near_mem_imem_instr__20_BITS_6_TO_0_23_EQ_0b11_ETC___d2033,
	       { alu_outputs_val2_tag__h34157,
		 alu_outputs_val2_capability__h34158 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2137)
	$write("CONTROL_STRAIGHT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2140)
	$write("CONTROL_BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2143)
	$write("CONTROL_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2146)
	$write("CONTROL_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2149)
	$write("CONTROL_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2152)
	$write("CONTROL_MRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2155)
	$write("CONTROL_SRET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2158)
	$write("CONTROL_URET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2161)
	$write("CONTROL_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2164)
	$write("CONTROL_TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274 &&
	  near_mem_imem_exc__38_OR_near_mem_imem_instr___ETC___d2167)
	$write("CONTROL_CLEAR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write(" ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("Trap_Info { ", "epc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("'h%h", near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("'h%h", fv_out_trap_info_exc_code__h26195);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1053)
	$write("'h%h", value__h26439, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem_imem_valid__18_AND_NOT_IF_stage2_rg_f_ETC___d1343)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  (!near_mem$imem_valid ||
	   IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d235))
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && stage1_rg_full &&
	  near_mem$imem_valid &&
	  NOT_IF_stage2_rg_full_5_THEN_IF_stage2_rg_stag_ETC___d274)
	$write(" next_pc 0x%08h", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe && !stage1_rg_full) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_show_pipe) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", pc_reset_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete && cur_verbosity__h1374 != 4'd0)
	$display("    restart with PC = 0x%0h", pc_reset_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[276] &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S3.fa_deq: write Rd 0x%0h, rd_val 0x%0h",
		 stage3_rg_stage3[275:271],
		 stage3_rg_stage3[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe && stage3_rg_full && stage3_rg_stage3[270] &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S3.fa_deq: write CSR 0x%0h, val 0x%0h",
		 stage3_rg_stage3[269:258],
		 stage3_rg_stage3[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("    S3.enq: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("data_to_Stage3 {pc:%h  instr:%h  priv:%0d\n",
	       stage2_rg_stage2[644:581],
	       stage2_rg_stage2[580:549],
	       stage2_rg_stage2[646:645]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("        rd_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2516)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d2518)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write(" rd:%0d  rd_val:%h\n",
	       x_out_data_to_stage3_rd__h4794,
	       stage2_rg_stage2_6_BITS_396_TO_394_7_EQ_3_8_OR_ETC___d186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("        csr_valid:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	  !stage2_rg_stage2[388])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16 &&
	  stage2_rg_stage2[388])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write(" csr:%h  csr_val:%h",
	       stage2_rg_stage2[269:258],
	       stage2_rg_stage2[128:0],
	       "}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  IF_stage2_rg_full_5_THEN_IF_stage2_rg_stage2_6_ETC___d152 == 2'd2 &&
	  cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541 &&
	  near_mem$imem_instr[6:0] == 7'b1110011 &&
	  near_mem$imem_instr[14:12] != 3'b0 &&
	  near_mem$imem_instr[14:12] != 3'b100 &&
	  NOT_near_mem_imem_instr__20_BITS_13_TO_12_40_E_ETC___d1599 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S1: write CSR 0x%0h, val 0x%0h",
		 alu_outputs_addr_capability__h26587[11:0],
		 alu_outputs_val2_capability__h34158[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2541 &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    S2.enq (Data_Stage1_to_Stage2)");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pipe &&
	  NOT_rg_halt_478_479_AND_NOT_csr_regfile_interr_ETC___d2604)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_restart_after_csrrx &&
	  cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_restart_after_csrrx &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: rl_stage1_restart_after_csrrx: inum:%0d  pc:%0x  cur_priv:%0d",
		 csr_regfile$read_csr_mcycle,
		 rg_inum,
		 fv_out_next_pc__h5702,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage2_nonpipe", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[580:549],
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage2_nonpipe && cur_verbosity__h1374 != 4'd0)
	$display("    mcause:0x%0h  epc 0x%0h  tval:0x%0h  new pc 0x%0h, new mstatus 0x%0h",
		 csr_regfile$csr_trap_actions[65:2],
		 stage2_rg_stage2[644:581],
		 stage2_rg_stage2[321:258],
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_ret_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_xRET && cur_verbosity__h1374 != 4'd0)
	$display("    xRET: next_pc:0x%0h  new mstatus:0x%0h  new priv:%0d",
		 csr_regfile$csr_ret_actions[129:66],
		 csr_regfile$csr_ret_actions[63:0],
		 csr_regfile$csr_ret_actions[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_FENCE_I &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_FENCE_I", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE_I &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_FENCE_I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_FENCE &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_FENCE", csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_FENCE &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_SFENCE_VMA &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("%0d: CPU.rl_stage1_SFENCE_VMA",
		 csr_regfile$read_csr_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_finish_SFENCE_VMA &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_finish_SFENCE_VMA");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_WFI && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_WFI &&
	  NOT_IF_csr_regfile_read_csr_minstret__0_ULT_cf_ETC___d16)
	$display("    CPU.rl_stage1_WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_WFI_resume && cur_verbosity__h1374 != 4'd0)
	$display("    WFI resume: inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_WFI_resume && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", fv_out_next_pc__h5702);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2668)
	$display("%0d: CPU.rl_stage1_trap: Tight infinite trap loop: pc 0x%0x instr 0x%08x",
		 csr_regfile$read_csr_mcycle,
		 csr_regfile$csr_trap_actions[193:130],
		 near_mem$imem_instr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2668)
	$display("CPI: %0d.%0d = (%0d/%0d) since last 'continue'",
		 cpi__h40897,
		 cpifrac__h40898,
		 delta_CPI_cycles__h40893,
		 _theResult____h40895);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap &&
	  IF_NOT_stage1_rg_full_16_17_OR_NOT_near_mem_im_ETC___d2668)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_stage1_trap: priv:%0d  mcause:0x%0h  epc:0x%0h",
		 csr_regfile$read_csr_mcycle,
		 rg_cur_priv,
		 csr_regfile$csr_trap_actions[65:2],
		 near_mem$imem_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_trap && cur_verbosity__h1374 != 4'd0)
	$display("    tval:0x%0h  new pc:0x%0h  new mstatus:0x%0h",
		 value__h26439,
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 != 4'd0)
	$display("    S1.enq: 0x%08x", csr_regfile$csr_trap_actions[193:130]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 == 4'd1)
	$display("inum:%0d  PC:0x%0h  instr:0x%0h  priv:%0d",
		 rg_inum,
		 near_mem$imem_pc,
		 near_mem$imem_instr,
		 rg_cur_priv);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_stage1_interrupt && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_stage1_interrupt: epc 0x%0h  next PC 0x%0h  new_priv %0d  new mstatus 0x%0h",
		 csr_regfile$read_csr_mcycle,
		 near_mem$imem_pc,
		 csr_regfile$csr_trap_actions[193:130],
		 csr_regfile$csr_trap_actions[1:0],
		 csr_regfile$csr_trap_actions[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start)
	begin
	  TASK_testplusargs___d2369 = $test$plusargs("v1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start)
	begin
	  TASK_testplusargs___d2368 = $test$plusargs("v2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start && cur_verbosity__h1374 != 4'd0)
	$display("%0d: CPU.rl_reset_start", csr_regfile$read_csr_mcycle);
  end
  // synopsys translate_on
endmodule  // mkCPU

